Search.setIndex({"alltitles": {"1. Prediction vs Experimental Plot": [[13, "prediction-vs-experimental-plot"]], "1. TSMC Method (Two-State Markov Chain)": [[16, "tsmc-method-two-state-markov-chain"]], "2. Monte Carlo Method": [[16, "monte-carlo-method"]], "2. Residuals Plot": [[13, "residuals-plot"]], "3. Deterministic Method": [[16, "deterministic-method"]], "3. Optimization History Plot": [[13, "optimization-history-plot"]], "API Reference": [[1, null]], "API Reference:": [[8, null]], "Applications": [[7, "applications"]], "BMatrix": [[3, null]], "BN2PBN": [[10, "bn2pbn"]], "BNMPy Optimizer": [[11, null]], "BNMPy.BMatrix": [[2, null]], "BNMPy.PBN": [[0, null]], "BNMPy.booleanNetwork": [[4, null]], "BNMPy.build_bn_from_kg": [[5, null]], "BNMPy.experiment_data": [[6, null]], "BNMPy.model_compressor": [[9, null]], "BNMPy.model_parser": [[10, null]], "BNMPy.parameter_optimizer": [[12, null]], "BNMPy.result_evaluation": [[13, null]], "BNMPy.simulation_evaluator": [[14, null]], "BNMPy.steady_state": [[15, null]], "BNMPy.vis": [[17, null]], "Basic Simulation": [[7, "basic-simulation"]], "Basic Usage": [[6, "basic-usage"], [9, "basic-usage"], [11, "basic-usage"], [12, "basic-usage"], [13, "basic-usage"]], "Column Descriptions": [[6, "column-descriptions"]], "Configuration": [[12, "configuration"]], "Configuration Options": [[11, "configuration-options"]], "Configurations": [[11, "configurations"]], "Converting BN to PBN": [[10, "converting-bn-to-pbn"]], "Core Modules": [[1, "core-modules"]], "Data Format": [[6, "data-format"]], "Dependencies": [[7, "dependencies"]], "Deterministic Update": [[7, "deterministic-update"]], "Discrete Mode": [[11, "discrete-mode"], [12, "discrete-mode"]], "Documentation": [[8, "documentation"]], "Early Stopping": [[11, "early-stopping"]], "Efficacy Values": [[6, "efficacy-values"]], "Evaluating Optimization Results": [[13, "evaluating-optimization-results"]], "Evaluating a PBN": [[13, "evaluating-a-pbn"]], "Evaluation Plots": [[11, "evaluation-plots"]], "Evaluation Report": [[13, "evaluation-report"]], "Example": [[11, "example"], [16, "example"]], "Example Output Structure": [[13, "example-output-structure"]], "Example Usage": [[10, "example-usage"]], "Examples": [[7, "examples"]], "ExperimentData Class": [[6, "experimentdata-class"]], "Experimental Conditions": [[16, "experimental-conditions"]], "Experimental Data": [[11, "experimental-data"]], "Extending Networks": [[10, "extending-networks"]], "Features": [[9, "features"], [16, "features"]], "Function Descriptions": [[3, "function-descriptions"]], "Functions": [[9, "functions"], [13, "functions"]], "Generated Plots": [[13, "generated-plots"]], "Getting Started": [[7, null]], "Indices and tables": [[8, "indices-and-tables"]], "Influence Analysis": [[11, "influence-analysis"]], "Initial States": [[7, "initial-states"]], "Input Data Format": [[11, "input-data-format"]], "Installation": [[3, "installation"], [7, "installation"], [11, "installation"]], "Key Functions": [[10, "key-functions"]], "Knockout/Knockdown": [[7, "knockout-knockdown"]], "Knowledge Graph Integration": [[1, "knowledge-graph-integration"]], "Loading a Network": [[7, "loading-a-network"]], "Loading a PBN": [[7, "loading-a-pbn"]], "MSE Sensitivity Analysis": [[11, "mse-sensitivity-analysis"]], "Merging Networks": [[7, "merging-networks"], [10, "merging-networks"]], "Methods": [[11, "methods"], [16, "methods"]], "Model Compression": [[11, "model-compression"]], "ModelCompressor Class": [[9, "modelcompressor-class"]], "Network File Format": [[7, "network-file-format"]], "Network Manipulation": [[7, "network-manipulation"]], "Network Visualization": [[7, "network-visualization"]], "Next Steps": [[7, "next-steps"]], "Optimization Methods": [[12, "optimization-methods"]], "Optimization Modules": [[1, "optimization-modules"]], "Output Files": [[13, "output-files"]], "Overview": [[6, "overview"], [9, "overview"], [12, "overview"], [13, "overview"], [14, "overview"], [16, "overview"]], "PBN Data": [[11, "pbn-data"]], "PBN Format": [[7, "pbn-format"]], "PBN Simulation": [[7, "pbn-simulation"]], "ParameterOptimizer Class": [[12, "parameteroptimizer-class"]], "Plot Optimization History": [[11, "plot-optimization-history"]], "Probabilistic Boolean Networks": [[7, "probabilistic-boolean-networks"]], "Quick Start": [[7, "quick-start"], [16, "quick-start"]], "References": [[11, "references"], [12, "references"], [16, "references"]], "Required Packages": [[3, "required-packages"]], "Result Evaluation": [[11, "result-evaluation"]], "Results": [[11, "results"], [12, "results"]], "See Also": [[6, "see-also"], [9, "see-also"], [13, "see-also"], [14, "see-also"], [16, "see-also"]], "Sensitivity Analysis": [[11, "sensitivity-analysis"]], "Setting Perturbations": [[16, "setting-perturbations"]], "SimulationEvaluator Class": [[14, "simulationevaluator-class"]], "Steady State Analysis": [[7, "steady-state-analysis"]], "Steady State Calculation Guide": [[16, null]], "SteadyStateCalculator for BNMPy": [[16, "steadystatecalculator-for-bnmpy"]], "Step-by-Step Compression": [[9, "step-by-step-compression"]], "Stochastic Update": [[7, "stochastic-update"]], "The calculating equations (which all start with cal_) are used post-simulation and calculate the phenotype scores and the final network score_": [[3, "the-calculating-equations-which-all-start-with-cal-are-used-post-simulation-and-calculate-the-phenotype-scores-and-the-final-network-score"]], "Usage": [[11, "usage"]], "User Guide:": [[8, null]], "Utility Functions": [[6, "utility-functions"]], "Visualization": [[1, "visualization"], [9, "visualization"], [12, "visualization"]], "Welcome to BNMPy\u2019s documentation!": [[8, null]], "compress_model": [[9, "compress-model"]], "evaluate_optimization_result": [[13, "evaluate-optimization-result"]], "evaluate_pbn": [[13, "evaluate-pbn"]], "extend_networks": [[10, "extend-networks"]], "extract_experiment_nodes": [[6, "extract-experiment-nodes"]], "generate_experiments": [[6, "generate-experiments"]], "get_cal_functions(equations):": [[3, "get-cal-functions-equations"]], "get_cal_upstream_genes(equations):": [[3, "get-cal-upstream-genes-equations"]], "get_calculating_scores is to be used post-simulation, which requires the BooleanNetwork code": [[3, "get-calculating-scores-is-to-be-used-post-simulation-which-requires-the-booleannetwork-code"]], "get_calculating_scores(network_traj, cal_functions, cal_upstream_genes, gene_dict, cal_range=None, scores_dict=None)": [[3, "get-calculating-scores-network-traj-cal-functions-cal-upstream-genes-gene-dict-cal-range-none-scores-dict-none"]], "get_connectivity_matrix(equations,gene_dict,upstream_genes)": [[3, "get-connectivity-matrix-equations-gene-dict-upstream-genes"]], "get_equations(file)": [[3, "get-equations-file"]], "get_gene_dict(equations)": [[3, "get-gene-dict-equations"]], "get_knocking_genes(profile, mutation_dict, connectivity_matrix, gene_dict,perturbed_genes=None, perturbed_dict=None)": [[3, "get-knocking-genes-profile-mutation-dict-connectivity-matrix-gene-dict-perturbed-genes-none-perturbed-dict-none"]], "get_mutation_dict(file)": [[3, "get-mutation-dict-file"]], "get_truth_table(equations,upstream_genes, show_functions = None)": [[3, "get-truth-table-equations-upstream-genes-show-functions-none"]], "get_upstream_genes(equations)": [[3, "get-upstream-genes-equations"]], "load_network_from_file(filename, initial_state=None)": [[3, "load-network-from-file-filename-initial-state-none"]], "merge_networks": [[10, "merge-networks"]]}, "docnames": ["PBN", "api", "bmatrix", "bmatrix_readme", "booleanNetwork", "build_bn_from_kg", "experiment_data", "getting_started", "index", "model_compressor", "model_parser", "optimization_guide", "parameter_optimizer", "result_evaluation", "simulation_evaluator", "steady_state", "steady_state_guide", "vis"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["PBN.rst", "api.rst", "bmatrix.rst", "bmatrix_readme.rst", "booleanNetwork.rst", "build_bn_from_kg.rst", "experiment_data.rst", "getting_started.rst", "index.rst", "model_compressor.rst", "model_parser.rst", "optimization_guide.rst", "parameter_optimizer.rst", "result_evaluation.rst", "simulation_evaluator.rst", "steady_state.rst", "steady_state_guide.rst", "vis.rst"], "indexentries": {"__init__() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.__init__", false]], "__init__() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.__init__", false], [9, "id2", false]], "__init__() (bnmpy.parameter_optimizer.optimizationresult method)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.__init__", false]], "__init__() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer.__init__", false], [12, "id1", false]], "__init__() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.__init__", false]], "__init__() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.__init__", false]], "__init__() (bnmpy.simulation_evaluator.simulationevaluator method)": [[14, "BNMPy.simulation_evaluator.SimulationEvaluator.__init__", false], [14, "id1", false]], "__init__() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.__init__", false]], "all_boolean_combos() (in module bnmpy.build_bn_from_kg)": [[5, "BNMPy.build_bn_from_kg.all_boolean_combos", false]], "bn2pbn() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.BN2PBN", false], [10, "id1", false]], "bnmpy.bmatrix": [[2, "module-BNMPy.BMatrix", false]], "bnmpy.booleannetwork": [[4, "module-BNMPy.booleanNetwork", false]], "bnmpy.build_bn_from_kg": [[5, "module-BNMPy.build_bn_from_kg", false]], "bnmpy.experiment_data": [[6, "module-BNMPy.experiment_data", false]], "bnmpy.model_compressor": [[9, "module-BNMPy.model_compressor", false]], "bnmpy.model_parser": [[10, "module-BNMPy.model_parser", false]], "bnmpy.parameter_optimizer": [[12, "module-BNMPy.parameter_optimizer", false]], "bnmpy.pbn": [[0, "module-BNMPy.PBN", false]], "bnmpy.result_evaluation": [[13, "module-BNMPy.result_evaluation", false]], "bnmpy.simulation_evaluator": [[14, "module-BNMPy.simulation_evaluator", false]], "bnmpy.steady_state": [[15, "module-BNMPy.steady_state", false]], "bnmpy.vis": [[17, "module-BNMPy.vis", false]], "booleannetwork (class in bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.BooleanNetwork", false]], "build_igraph() (in module bnmpy.vis)": [[17, "BNMPy.vis.build_igraph", false]], "build_igraph_pbn() (in module bnmpy.vis)": [[17, "BNMPy.vis.build_igraph_pbn", false]], "buildk() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.buildK", false]], "buildk() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.buildK", false]], "calculate_evaluation_metrics() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.calculate_evaluation_metrics", false]], "check_inhibitor_wins_rule() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.check_inhibitor_wins_rule", false]], "cij_matrix (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.cij_matrix", false]], "collapse_paths() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.collapse_paths", false], [9, "id6", false]], "compress() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.compress", false], [9, "id8", false]], "compress_model() (in module bnmpy.model_compressor)": [[9, "BNMPy.model_compressor.compress_model", false], [9, "id0", false]], "compute_stationary_deterministic() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_deterministic", false]], "compute_stationary_mc() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_mc", false]], "compute_stationary_tsmc() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_tsmc", false]], "compute_steady_state() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.compute_steady_state", false]], "convergence_info (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.convergence_info", false]], "copy() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.copy", false]], "create_matplotlib_extension_visualization() (in module bnmpy.vis)": [[17, "BNMPy.vis.create_matplotlib_extension_visualization", false]], "create_matplotlib_visualization() (in module bnmpy.vis)": [[17, "BNMPy.vis.create_matplotlib_visualization", false]], "evaluate_optimization_result() (in module bnmpy.result_evaluation)": [[13, "BNMPy.result_evaluation.evaluate_optimization_result", false], [13, "id0", false]], "evaluate_pbn() (in module bnmpy.result_evaluation)": [[13, "BNMPy.result_evaluation.evaluate_pbn", false], [13, "id1", false]], "experimentdata (class in bnmpy.experiment_data)": [[6, "BNMPy.experiment_data.ExperimentData", false], [6, "id0", false]], "export_results_to_csv() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.export_results_to_csv", false]], "extend_networks() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.extend_networks", false], [10, "id2", false]], "extract_experiment_nodes() (in module bnmpy.experiment_data)": [[6, "BNMPy.experiment_data.extract_experiment_nodes", false]], "extract_logic_rules_from_network() (in module bnmpy.vis)": [[17, "BNMPy.vis.extract_logic_rules_from_network", false]], "find_collapsible_paths() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.find_collapsible_paths", false], [9, "id5", false]], "find_direct_targets() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.find_direct_targets", false]], "find_non_controllable_nodes() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.find_non_controllable_nodes", false], [9, "id4", false]], "find_non_observable_nodes() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.find_non_observable_nodes", false], [9, "id3", false]], "fun (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.fun", false]], "generate_evaluation_report() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.generate_evaluation_report", false]], "generate_experiments() (in module bnmpy.experiment_data)": [[6, "BNMPy.experiment_data.generate_experiments", false]], "get_cal_functions() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_cal_functions", false]], "get_cal_upstream_genes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_cal_upstream_genes", false]], "get_calculating_scores() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_calculating_scores", false]], "get_compression_summary() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.get_compression_summary", false], [9, "id9", false]], "get_connectivity_matrix() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_connectivity_matrix", false]], "get_convergence_info() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.get_convergence_info", false]], "get_equations() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_equations", false]], "get_experiment_summary() (bnmpy.experiment_data.experimentdata static method)": [[6, "BNMPy.experiment_data.ExperimentData.get_experiment_summary", false], [6, "id3", false]], "get_gene_dict() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_gene_dict", false]], "get_knocking_genes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_knocking_genes", false]], "get_mutation_dict() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_mutation_dict", false]], "get_optimized_pbn() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer.get_optimized_pbn", false], [12, "id5", false]], "get_parameter_bounds() (bnmpy.simulation_evaluator.simulationevaluator method)": [[14, "BNMPy.simulation_evaluator.SimulationEvaluator.get_parameter_bounds", false], [14, "id3", false]], "get_pbn_rules_string() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer.get_pbn_rules_string", false], [12, "id4", false]], "get_truth_table() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_truth_table", false]], "get_upstream() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.get_upstream", false]], "get_upstream_genes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_upstream_genes", false]], "getbias() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getBias", false]], "getbias() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getBias", false]], "getdatafromfile() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getDataFromFile", false]], "getmaxconnectivity() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getMaxConnectivity", false]], "getmaxconnectivity() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getMaxConnectivity", false]], "getmeanconnectivity() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getMeanConnectivity", false]], "getmeanconnectivity() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getMeanConnectivity", false]], "getparametersfromfile() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getParametersFromFile", false]], "getrandominitialnodevalues() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getRandomInitialNodeValues", false]], "getrandomparameters() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getRandomParameters", false]], "getrealization() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getRealization", false]], "getrealization() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getRealization", false]], "gettrajectory() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getTrajectory", false]], "gettrajectory() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getTrajectory", false]], "initializeoutput() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.initializeOutput", false]], "initializeoutput() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.initializeOutput", false]], "knockdown() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.knockdown", false]], "knockout() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.knockout", false]], "knockout() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.knockout", false]], "load_from_csv() (bnmpy.experiment_data.experimentdata static method)": [[6, "BNMPy.experiment_data.ExperimentData.load_from_csv", false], [6, "id1", false]], "load_network_from_file() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_network_from_file", false]], "load_network_from_string() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_network_from_string", false]], "load_pbn_from_file() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_pbn_from_file", false]], "load_pbn_from_string() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_pbn_from_string", false]], "load_signor_network() (in module bnmpy.build_bn_from_kg)": [[5, "BNMPy.build_bn_from_kg.load_signor_network", false]], "merge_networks() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.merge_networks", false], [10, "id0", false]], "merge_pbn_string() (in module bnmpy.build_bn_from_kg)": [[5, "BNMPy.build_bn_from_kg.merge_PBN_string", false]], "message (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.message", false]], "method (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.method", false]], "modelcompressor (class in bnmpy.model_compressor)": [[9, "BNMPy.model_compressor.ModelCompressor", false], [9, "id1", false]], "module": [[0, "module-BNMPy.PBN", false], [2, "module-BNMPy.BMatrix", false], [4, "module-BNMPy.booleanNetwork", false], [5, "module-BNMPy.build_bn_from_kg", false], [6, "module-BNMPy.experiment_data", false], [9, "module-BNMPy.model_compressor", false], [10, "module-BNMPy.model_parser", false], [12, "module-BNMPy.parameter_optimizer", false], [13, "module-BNMPy.result_evaluation", false], [14, "module-BNMPy.simulation_evaluator", false], [15, "module-BNMPy.steady_state", false], [17, "module-BNMPy.vis", false]], "nfev (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.nfev", false]], "nit (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.nit", false]], "objective_function() (bnmpy.simulation_evaluator.simulationevaluator method)": [[14, "BNMPy.simulation_evaluator.SimulationEvaluator.objective_function", false], [14, "id2", false]], "optimizationerror": [[12, "BNMPy.parameter_optimizer.OptimizationError", false]], "optimizationresult (class in bnmpy.parameter_optimizer)": [[12, "BNMPy.parameter_optimizer.OptimizationResult", false]], "optimize() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer.optimize", false], [12, "id2", false]], "parameteroptimizer (class in bnmpy.parameter_optimizer)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer", false], [12, "id0", false]], "parse_equations() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.parse_equations", false]], "parse_expression() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.parse_expression", false]], "plot_optimization_history() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer.plot_optimization_history", false], [12, "id3", false]], "plot_prediction_vs_experimental() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.plot_prediction_vs_experimental", false]], "plot_residuals() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.plot_residuals", false]], "probabilisticbn (class in bnmpy.pbn)": [[0, "BNMPy.PBN.ProbabilisticBN", false]], "read_logic_rules() (in module bnmpy.vis)": [[17, "BNMPy.vis.read_logic_rules", false]], "remove_nodes() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.remove_nodes", false], [9, "id7", false]], "rename_nodes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.rename_nodes", false]], "reset_network_conditions() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.reset_network_conditions", false]], "resultevaluator (class in bnmpy.result_evaluation)": [[13, "BNMPy.result_evaluation.ResultEvaluator", false]], "set_experimental_conditions() (bnmpy.steady_state.steadystatecalculator method)": [[15, "BNMPy.steady_state.SteadyStateCalculator.set_experimental_conditions", false]], "setinitialvalue() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.setInitialValue", false]], "setinitialvalue() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.setInitialValue", false]], "setinitialvalues() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.setInitialValues", false]], "setinitialvalues() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.setInitialValues", false]], "simplify_expression() (in module bnmpy.model_parser)": [[10, "BNMPy.model_parser.simplify_expression", false]], "simulate_optimized_model() (bnmpy.result_evaluation.resultevaluator method)": [[13, "BNMPy.result_evaluation.ResultEvaluator.simulate_optimized_model", false]], "simulationevaluator (class in bnmpy.simulation_evaluator)": [[14, "BNMPy.simulation_evaluator.SimulationEvaluator", false], [14, "id0", false]], "statetowrite() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.stateToWrite", false]], "statetowrite() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.stateToWrite", false]], "steadystatecalculator (class in bnmpy.steady_state)": [[15, "BNMPy.steady_state.SteadyStateCalculator", false]], "success (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.success", false]], "test_steady_states() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[12, "BNMPy.parameter_optimizer.ParameterOptimizer.test_steady_states", false], [12, "id6", false]], "tograph() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.toGraph", false]], "undoknockouts() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.undoKnockouts", false]], "undoknockouts() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.undoKnockouts", false]], "update() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.update", false]], "update() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update", false]], "update_cumulative_probabilities() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_cumulative_probabilities", false]], "update_noise() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.update_noise", false]], "update_noise() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_noise", false]], "update_one() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.update_one", false]], "update_one() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_one", false]], "updateuntilattractorisreached() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.updateUntilAttractorIsReached", false]], "validate_experiments() (bnmpy.experiment_data.experimentdata static method)": [[6, "BNMPy.experiment_data.ExperimentData.validate_experiments", false], [6, "id2", false]], "vis_compression() (in module bnmpy.vis)": [[17, "BNMPy.vis.vis_compression", false]], "vis_extension() (in module bnmpy.vis)": [[17, "BNMPy.vis.vis_extension", false]], "vis_network() (in module bnmpy.vis)": [[17, "BNMPy.vis.vis_network", false]], "visualize_compression() (bnmpy.model_compressor.modelcompressor method)": [[9, "BNMPy.model_compressor.ModelCompressor.visualize_compression", false], [9, "id10", false]], "writenetworkhistory() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.writeNetworkHistory", false]], "writenetworkhistory() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.writeNetworkHistory", false]], "x (bnmpy.parameter_optimizer.optimizationresult attribute)": [[12, "BNMPy.parameter_optimizer.OptimizationResult.x", false]]}, "objects": {"BNMPy": [[2, 0, 0, "-", "BMatrix"], [0, 0, 0, "-", "PBN"], [4, 0, 0, "-", "booleanNetwork"], [5, 0, 0, "-", "build_bn_from_kg"], [6, 0, 0, "-", "experiment_data"], [9, 0, 0, "-", "model_compressor"], [10, 0, 0, "-", "model_parser"], [12, 0, 0, "-", "parameter_optimizer"], [13, 0, 0, "-", "result_evaluation"], [14, 0, 0, "-", "simulation_evaluator"], [15, 0, 0, "-", "steady_state"], [17, 0, 0, "-", "vis"]], "BNMPy.BMatrix": [[2, 1, 1, "", "get_cal_functions"], [2, 1, 1, "", "get_cal_upstream_genes"], [2, 1, 1, "", "get_calculating_scores"], [2, 1, 1, "", "get_connectivity_matrix"], [2, 1, 1, "", "get_equations"], [2, 1, 1, "", "get_gene_dict"], [2, 1, 1, "", "get_knocking_genes"], [2, 1, 1, "", "get_mutation_dict"], [2, 1, 1, "", "get_truth_table"], [2, 1, 1, "", "get_upstream_genes"], [2, 1, 1, "", "load_network_from_file"], [2, 1, 1, "", "load_network_from_string"], [2, 1, 1, "", "load_pbn_from_file"], [2, 1, 1, "", "load_pbn_from_string"], [2, 1, 1, "", "rename_nodes"]], "BNMPy.PBN": [[0, 2, 1, "", "ProbabilisticBN"]], "BNMPy.PBN.ProbabilisticBN": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "buildK"], [0, 3, 1, "", "copy"], [0, 3, 1, "", "getBias"], [0, 3, 1, "", "getMaxConnectivity"], [0, 3, 1, "", "getMeanConnectivity"], [0, 3, 1, "", "getRealization"], [0, 3, 1, "", "getTrajectory"], [0, 3, 1, "", "initializeOutput"], [0, 3, 1, "", "knockdown"], [0, 3, 1, "", "knockout"], [0, 3, 1, "", "setInitialValue"], [0, 3, 1, "", "setInitialValues"], [0, 3, 1, "", "stateToWrite"], [0, 3, 1, "", "undoKnockouts"], [0, 3, 1, "", "update"], [0, 3, 1, "", "update_cumulative_probabilities"], [0, 3, 1, "", "update_noise"], [0, 3, 1, "", "update_one"], [0, 3, 1, "", "writeNetworkHistory"]], "BNMPy.booleanNetwork": [[4, 2, 1, "", "BooleanNetwork"], [4, 1, 1, "", "getDataFromFile"], [4, 1, 1, "", "getParametersFromFile"], [4, 1, 1, "", "getRandomInitialNodeValues"], [4, 1, 1, "", "getRandomParameters"]], "BNMPy.booleanNetwork.BooleanNetwork": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "buildK"], [4, 3, 1, "", "getBias"], [4, 3, 1, "", "getMaxConnectivity"], [4, 3, 1, "", "getMeanConnectivity"], [4, 3, 1, "", "getRealization"], [4, 3, 1, "", "getTrajectory"], [4, 3, 1, "", "initializeOutput"], [4, 3, 1, "", "knockout"], [4, 3, 1, "", "setInitialValue"], [4, 3, 1, "", "setInitialValues"], [4, 3, 1, "", "stateToWrite"], [4, 3, 1, "", "toGraph"], [4, 3, 1, "", "undoKnockouts"], [4, 3, 1, "", "update"], [4, 3, 1, "", "updateUntilAttractorIsReached"], [4, 3, 1, "", "update_noise"], [4, 3, 1, "", "update_one"], [4, 3, 1, "", "writeNetworkHistory"]], "BNMPy.build_bn_from_kg": [[5, 1, 1, "", "all_boolean_combos"], [5, 1, 1, "", "load_signor_network"], [5, 1, 1, "", "merge_PBN_string"]], "BNMPy.experiment_data": [[6, 2, 1, "id0", "ExperimentData"], [6, 1, 1, "", "extract_experiment_nodes"], [6, 1, 1, "", "generate_experiments"]], "BNMPy.experiment_data.ExperimentData": [[6, 3, 1, "id3", "get_experiment_summary"], [6, 3, 1, "id1", "load_from_csv"], [6, 3, 1, "id2", "validate_experiments"]], "BNMPy.model_compressor": [[9, 2, 1, "id1", "ModelCompressor"], [9, 1, 1, "id0", "compress_model"]], "BNMPy.model_compressor.ModelCompressor": [[9, 3, 1, "id2", "__init__"], [9, 3, 1, "id6", "collapse_paths"], [9, 3, 1, "id8", "compress"], [9, 3, 1, "id5", "find_collapsible_paths"], [9, 3, 1, "id4", "find_non_controllable_nodes"], [9, 3, 1, "id3", "find_non_observable_nodes"], [9, 3, 1, "id9", "get_compression_summary"], [9, 3, 1, "id7", "remove_nodes"], [9, 3, 1, "id10", "visualize_compression"]], "BNMPy.model_parser": [[10, 1, 1, "id1", "BN2PBN"], [10, 1, 1, "", "check_inhibitor_wins_rule"], [10, 1, 1, "id2", "extend_networks"], [10, 1, 1, "", "find_direct_targets"], [10, 1, 1, "", "get_upstream"], [10, 1, 1, "id0", "merge_networks"], [10, 1, 1, "", "parse_equations"], [10, 1, 1, "", "parse_expression"], [10, 1, 1, "", "simplify_expression"]], "BNMPy.parameter_optimizer": [[12, 4, 1, "", "OptimizationError"], [12, 2, 1, "", "OptimizationResult"], [12, 2, 1, "id0", "ParameterOptimizer"]], "BNMPy.parameter_optimizer.OptimizationResult": [[12, 3, 1, "", "__init__"], [12, 5, 1, "", "cij_matrix"], [12, 5, 1, "", "convergence_info"], [12, 5, 1, "", "fun"], [12, 5, 1, "", "message"], [12, 5, 1, "", "method"], [12, 5, 1, "", "nfev"], [12, 5, 1, "", "nit"], [12, 5, 1, "", "success"], [12, 5, 1, "", "x"]], "BNMPy.parameter_optimizer.ParameterOptimizer": [[12, 3, 1, "id1", "__init__"], [12, 3, 1, "id5", "get_optimized_pbn"], [12, 3, 1, "id4", "get_pbn_rules_string"], [12, 3, 1, "id2", "optimize"], [12, 3, 1, "id3", "plot_optimization_history"], [12, 3, 1, "id6", "test_steady_states"]], "BNMPy.result_evaluation": [[13, 2, 1, "", "ResultEvaluator"], [13, 1, 1, "id0", "evaluate_optimization_result"], [13, 1, 1, "id1", "evaluate_pbn"]], "BNMPy.result_evaluation.ResultEvaluator": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "calculate_evaluation_metrics"], [13, 3, 1, "", "export_results_to_csv"], [13, 3, 1, "", "generate_evaluation_report"], [13, 3, 1, "", "plot_prediction_vs_experimental"], [13, 3, 1, "", "plot_residuals"], [13, 3, 1, "", "simulate_optimized_model"]], "BNMPy.simulation_evaluator": [[14, 2, 1, "id0", "SimulationEvaluator"]], "BNMPy.simulation_evaluator.SimulationEvaluator": [[14, 3, 1, "id1", "__init__"], [14, 3, 1, "id3", "get_parameter_bounds"], [14, 3, 1, "id2", "objective_function"]], "BNMPy.steady_state": [[15, 2, 1, "", "SteadyStateCalculator"]], "BNMPy.steady_state.SteadyStateCalculator": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "compute_stationary_deterministic"], [15, 3, 1, "", "compute_stationary_mc"], [15, 3, 1, "", "compute_stationary_tsmc"], [15, 3, 1, "", "compute_steady_state"], [15, 3, 1, "", "get_convergence_info"], [15, 3, 1, "", "reset_network_conditions"], [15, 3, 1, "", "set_experimental_conditions"]], "BNMPy.vis": [[17, 1, 1, "", "build_igraph"], [17, 1, 1, "", "build_igraph_pbn"], [17, 1, 1, "", "create_matplotlib_extension_visualization"], [17, 1, 1, "", "create_matplotlib_visualization"], [17, 1, 1, "", "extract_logic_rules_from_network"], [17, 1, 1, "", "read_logic_rules"], [17, 1, 1, "", "vis_compression"], [17, 1, 1, "", "vis_extension"], [17, 1, 1, "", "vis_network"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:exception", "5": "py:attribute"}, "terms": {"": [0, 3, 12, 15, 16], "0": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 15, 16], "000": 3, "001": [7, 11, 15, 16], "005": [11, 12], "01": [7, 11, 12, 16], "0123": 13, "025": [15, 16], "05": [7, 16], "089": 13, "1": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12, 15], "10": [7, 11, 12, 13, 15, 16], "100": [3, 7, 11, 12, 15, 16], "1000": [11, 12, 15, 16], "10000": [7, 11, 16], "111": 13, "12": [6, 11], "15": [11, 12, 13], "1e": [11, 12], "2": [3, 6, 11], "20": [7, 11, 16], "2000": 11, "20000": [11, 16], "2010": 16, "2014": [11, 12, 15, 16], "2024": 3, "2025": 3, "21": 3, "245": 13, "29": 3, "2e": 13, "3": [3, 6, 7, 11, 12], "30": [6, 11, 12], "3675": 13, "3f": 13, "4": [2, 3, 6, 7, 11, 13, 16], "40": 13, "42": 11, "45318": 3, "4f": 13, "5": [2, 3, 4, 5, 7, 10, 11, 12, 16], "50": 11, "500": [11, 12, 15, 16], "5000": [7, 11, 16], "512": 11, "6": [2, 7, 11, 12, 13, 16], "7": [6, 7, 11, 12, 16], "70": [6, 11], "8": [11, 13], "88": [6, 11], "89": 13, "9": [7, 10, 11, 12, 13, 16], "95": [13, 15, 16], "A": [2, 3, 7, 9, 10, 11, 16], "AND": [7, 10], "For": [3, 6, 8, 9, 11, 12, 16], "If": [2, 3, 6, 10, 11, 15, 17], "In": [3, 15, 16], "It": [3, 6, 8, 12, 14], "NOT": [3, 7], "ONE": [11, 12, 16], "OR": [7, 10], "One": 11, "Or": 10, "The": [2, 6, 9, 10, 11, 12, 13, 14, 16], "Then": [0, 3], "These": [3, 7], "To": [3, 7], "With": 16, "_": 3, "__init__": [0, 4, 9, 12, 13, 14, 15], "ab": 11, "about": [15, 16], "absolut": 11, "access": [3, 6, 7, 16], "accur": [7, 16], "accuraci": 16, "achiev": 6, "across": 16, "activ": [3, 9, 10, 16], "activi": 3, "ad": [0, 3, 10], "add": [7, 16], "addit": [15, 17], "adjust": 16, "advanc": [7, 9, 11], "affect": 11, "after": [0, 2, 3, 11], "against": [6, 13, 14], "akt": [3, 6, 11], "al": [11, 12, 15, 16], "algorithm": 12, "all": [0, 2, 4, 5, 7, 9, 11, 13, 15, 16], "all_boolean_combo": [1, 5], "allow": [11, 16], "alreadi": 6, "also": [1, 2, 3, 5, 8, 10], "altern": [7, 10], "alwai": 16, "an": [2, 3, 5, 10, 11, 12, 13, 16], "analysi": [8, 13, 16], "analyz": [9, 11, 16], "analyze_converg": [15, 16], "ani": [3, 9, 11, 12, 15], "api": 7, "apoptosi": 3, "append": 3, "appli": [0, 15], "applic": 8, "approach": [11, 15], "appropri": 16, "ar": [6, 9, 10, 11, 16, 17], "area": 13, "aren": 11, "arg": [5, 17], "arrai": [0, 3, 4, 7, 16], "assess": [11, 13], "associ": 3, "asynchron": [0, 4], "atol": 11, "attractor": [15, 16], "attribut": 0, "automat": [3, 7, 9, 11, 14, 16], "avail": [11, 16], "averag": 16, "avoid": 0, "axi": 13, "b": 7, "base": [0, 2, 3, 4, 6, 9, 11, 12, 13, 14, 16, 17], "baseline_ms": 11, "basic": [1, 8, 16], "bcl2": 3, "befor": [2, 6, 9, 11, 16], "behavior": [9, 11, 16], "being": [0, 3, 14], "below": 11, "best": 11, "best1bin": [11, 12], "between": [5, 6, 11, 16], "bia": 4, "biolog": 7, "biologi": 8, "biomark": 9, "blue": 9, "bmatrix": [1, 11], "bn": [8, 15, 17], "bn2pbn": 1, "bn_compress": 7, "bn_pbn_steady_st": [7, 16], "bn_simul": 7, "bn_string": 10, "bnmpy": [1, 7], "bool": [9, 10, 12, 13, 15, 16, 17], "boolean": [0, 2, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16], "boolean_funct": 2, "booleannetwork": [1, 2, 10, 16, 17], "both": [3, 10, 11, 15, 16], "bound": 14, "branch": 11, "browser": 7, "build": [5, 8, 17], "build_bn_from_kg": 1, "build_igraph": [1, 17], "build_igraph_pbn": [1, 17], "buildk": [0, 4], "bulb": 16, "burn": [11, 16], "burn_in": 11, "c": 7, "c1": [11, 12], "c2": [11, 12], "c8": [6, 11], "cal_funct": 2, "cal_rang": 2, "cal_upstream_gen": 2, "calc": [7, 16], "calcul": [7, 8, 11, 12, 13, 14, 15], "calculate_evaluation_metr": 13, "call": 3, "came": 3, "can": [2, 3, 5, 7, 9, 11, 16], "cancer": 7, "capabl": [9, 16], "carlo": [7, 15], "cas3": [11, 12], "cascad": [9, 11], "case": [3, 10], "caus": 16, "cd": 7, "cebpa": 3, "certain": 7, "chain": 15, "chang": [0, 3, 4, 11, 16], "check": [7, 11, 16], "check_inhibitor_wins_rul": [1, 10], "cij_matrix": 12, "cij_vector": 14, "class": [0, 1, 4, 13, 15, 16], "clean": 3, "closer": 16, "coeffici": 13, "collaps": [9, 11, 17], "collapse_linear_path": 9, "collapse_path": 9, "collapsible_path": 9, "color": 9, "column": 11, "combin": [3, 7], "comma": [6, 11], "compar": [6, 13, 14], "comparison": 17, "complet": [3, 6, 7, 11, 13], "comprehens": [11, 12, 13], "compress": [1, 6, 7, 8, 17], "compress_model": [1, 6, 11], "compressed_network": [6, 9, 11, 17], "compression_comparison": 17, "compression_info": [9, 11, 17], "compression_result": [9, 11], "compression_visu": 9, "compressor": 9, "comput": [14, 16], "compute_stationary_determinist": 15, "compute_stationary_mc": 15, "compute_stationary_tsmc": 15, "compute_steady_st": [7, 15, 16], "condit": [6, 12, 13, 14, 15], "confid": [13, 16], "config": [6, 11, 12, 13, 14], "configur": 1, "connect": [3, 4, 5, 9], "connectivity_matrix": 2, "consecut": 16, "consid": [3, 11], "constant": [0, 2, 3, 4, 15, 16], "contain": [3, 6, 11, 12, 17], "control": [9, 11, 16], "conveni": [9, 13], "converg": [11, 12, 13, 15, 16], "convergence_info": [12, 16], "convergence_threshold": 12, "coordin": 16, "copi": 0, "core": [8, 11], "correl": 13, "correspond": [6, 11], "cpu": 11, "creat": [0, 3, 5, 6, 7, 9, 11, 12, 13, 16, 17], "create_matplotlib_extension_visu": [1, 17], "create_matplotlib_visu": [1, 17], "criteria": 16, "critic": 11, "csv": [6, 9, 11, 12, 13], "csv_file": 6, "cumul": 0, "current": [6, 7, 9, 11], "custom": 12, "cycl": [15, 16], "cyclic_attractor": [15, 16], "d": 7, "dash": 13, "data": [1, 9, 12, 13, 14], "datafram": 6, "de": 11, "de_param": [11, 12], "debug": 6, "decid": 3, "declar": 16, "deep": 0, "default": [5, 6, 10, 11, 15, 16], "defer": 11, "defin": [6, 9, 16], "definit": [3, 10], "depend": [3, 11], "deriv": 10, "descript": 10, "detail": [7, 8, 9, 11, 13, 16], "detailed_result": 13, "determin": [11, 16], "determinist": [10, 15], "deviat": 13, "dict": [6, 9, 12, 13, 15, 17], "dictionari": [3, 7, 11, 16, 17], "differ": [0, 3, 4, 5, 6, 9, 11, 16], "differenti": [3, 11, 12], "differential_evolut": [11, 12, 13], "direct": [9, 10], "directli": [0, 9, 13], "directori": 7, "disabl": 11, "discrete_param": [11, 12], "displai": [11, 16], "display_rules_everi": 11, "distribut": [0, 13, 16], "divid": 6, "dnmt3a": 3, "do": 3, "doe": [0, 3, 4], "doesn": 3, "don": 11, "done": 16, "dougherti": 16, "download": 3, "draggabl": 9, "drop": 11, "drug": 0, "drug1": 9, "drug2": 9, "dual": 16, "duplic": 3, "dure": [0, 3, 13], "dynam": [0, 4, 16], "e": [0, 7, 10, 16], "e98001": [11, 12, 16], "each": [0, 2, 3, 7, 9, 11, 12, 15, 16], "early_stop": [11, 12], "edg": [5, 9, 11, 17], "edge_prob": 17, "effect": [0, 3], "efficaci": [0, 11, 16], "effici": 0, "els": 3, "empti": [11, 17], "enabl": [11, 12, 13], "engin": 14, "enhanc": 11, "ensur": [10, 16], "entir": 16, "epsilon": [7, 11, 15, 16], "equal": [2, 3, 10], "equat": [2, 4, 5, 10, 17], "erk": [6, 11], "error": [3, 12, 13, 14], "estim": [11, 12, 16], "et": [11, 12, 15, 16], "etv6": 3, "eval": 3, "evalu": [3, 6, 12, 14], "evaluate_optimization_result": [1, 11], "evaluate_pbn": 1, "evaluation_report": 13, "evaluation_result": [11, 13], "everi": [3, 11], "evolut": [0, 11, 12], "evolutionari": 12, "ex": 3, "exampl": [1, 2, 3, 6, 8], "except": [3, 12], "exclud": 10, "exist": [10, 12, 13], "exp": 6, "exp_data": [6, 13], "expand": 10, "expand_complex": 2, "expect": 2, "experi": [6, 9, 11, 12, 13, 14], "experiment": [0, 6, 9, 12, 14, 15], "experiment_csv": 6, "experiment_data": [1, 9, 13, 14], "experimentdata": [1, 13], "explicit": 7, "explor": 7, "export": 13, "export_results_to_csv": 13, "expr1": 10, "expr2": 10, "express": 10, "extend": 17, "extend_network": 1, "extended_network": 17, "extended_pbn": 10, "extens": 17, "extension_comparison": 17, "extra": [3, 6], "extract": [3, 6, 9, 11, 17], "extract_experiment_nod": [1, 9, 11], "extract_logic_rules_from_network": [1, 17], "f": [6, 7, 9, 13, 16], "fail": 11, "fals": [2, 3, 4, 9, 10, 11, 12, 13, 15, 16, 17], "fast_morri": 11, "faster": [7, 11, 16], "featur": 1, "figsiz": [11, 13], "figur": 13, "file": [1, 2, 6, 9, 10, 11, 17], "filenam": 2, "filepath": 4, "final": [11, 12, 13, 16], "final_scor": 3, "find": [7, 9, 15, 16], "find_collapsible_path": 9, "find_direct_target": [1, 10], "find_non_controllable_nod": 9, "find_non_observable_nod": 9, "first": [10, 15], "fit": [11, 13], "fix": [0, 4, 6, 7, 10, 11, 15, 16], "fixed_nod": 10, "fixed_point": [15, 16], "flag": 3, "flatten": 11, "flip": [0, 7, 16], "float": [10, 12, 14, 15, 16], "flt3": 3, "follow": 7, "form": 9, "format": [1, 2, 3, 12], "formula": 3, "found": 16, "four": 10, "framework": [11, 12], "freez": 16, "freeze_const": [15, 16], "fresh": 16, "from": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "ftol": [11, 12], "ftol_it": [11, 12], "full": [6, 11, 16], "fun": [11, 12], "function": [0, 1, 2, 4, 11, 12, 14, 15], "functionsfilepath": 4, "further": 13, "g": [0, 10, 16], "gene": [0, 2, 3, 5, 7, 10, 16], "gene1": [7, 10], "gene2": [7, 10], "gene3": 7, "gene4": 7, "gene5": 7, "gene_dict": 2, "gene_list": [5, 10], "genea": 7, "geneb": 7, "genec": 7, "gener": [1, 2, 3, 5, 6, 9, 11], "generate_evaluation_report": 13, "generate_experi": 1, "generate_plot": 13, "generate_report": 13, "get": [3, 5, 6, 8, 9, 11, 12, 14, 15, 16], "get_cal_funct": [1, 2], "get_cal_upstream_gen": [1, 2], "get_calculating_scor": [1, 2], "get_compressed_network": 9, "get_compression_summari": 9, "get_connectivity_matrix": [1, 2], "get_convergence_info": 15, "get_equ": [1, 2], "get_experiment_summari": 6, "get_gene_dict": [1, 2], "get_knocking_gen": [1, 2], "get_measured_nod": 6, "get_mutation_dict": [1, 2], "get_optimized_pbn": [11, 12], "get_parameter_bound": 14, "get_pbn_rules_str": 12, "get_perturbed_nod": 6, "get_truth_t": [1, 2], "get_upstream": [1, 10], "get_upstream_gen": [1, 2], "getbia": [0, 4], "getdatafromfil": [1, 4], "getmaxconnect": [0, 4], "getmeanconnect": [0, 4], "getparametersfromfil": [1, 4], "getrandominitialnodevalu": [1, 4], "getrandomparamet": [1, 4], "getreal": [0, 4], "gettrajectori": [0, 4], "github": 8, "give": 3, "given": [0, 2, 4, 10, 14], "giveupiter": 4, "global": [11, 12], "graph": [7, 8, 10, 17], "green": 13, "grei": [9, 17], "group": 7, "gsk3b": 3, "guid": 7, "ha": [2, 3, 6, 11], "half": 16, "handl": [6, 9, 13, 14, 15], "happen": 11, "have": [2, 3, 7, 10], "help": 7, "highlight": [11, 13, 17], "histogram": 13, "histori": 12, "horizont": 13, "how": [11, 16], "howev": [0, 4, 16], "html": [7, 9, 11, 17], "human": 10, "hypothes": 6, "i": [0, 2, 4, 5, 6, 8, 9, 10, 11, 14, 16], "id": [5, 6], "ident": 16, "identifi": [6, 11, 16], "ignor": 6, "igraph": 17, "implement": [11, 16], "import": [3, 6, 7, 9, 10, 11, 12, 13, 16], "improv": 11, "includ": [3, 5, 10, 11, 13], "incorrect": 3, "independ": 16, "index": [0, 4, 8], "indic": [5, 11, 12], "individu": 3, "influenc": 9, "influence_analysi": 11, "influence_df": 11, "influence_result": 11, "influenti": 11, "info": 6, "inform": [6, 9, 10, 11, 15, 16, 17], "inhibit": [0, 6, 11], "inhibitor": [3, 6, 7, 10, 11, 14, 15, 16], "inhibitor_win": 5, "inhibitori": 9, "inhibitors_efficaci": [6, 11, 15, 16], "init": [3, 11, 12], "initi": [0, 3, 4, 9, 11, 12, 13, 14, 16], "initial_nstep": [15, 16], "initial_st": [2, 7, 16], "initializeoutput": [0, 4], "initialnodesfilepath": 4, "initialnodevalu": [0, 4], "input": [3, 9, 10, 15, 16], "input_format": 5, "inspect": 6, "instal": 8, "int": [6, 12, 13, 15, 16], "integ": 3, "integr": [7, 8, 16], "interact": [7, 9, 11, 17], "interfac": [6, 9, 13, 14], "intermedi": [9, 11], "interv": [11, 13], "invert": 4, "involv": 3, "ipynb": [7, 16], "isconstantconnect": 4, "iter": [0, 3, 4, 6, 7, 11, 12, 13, 16], "itertool": 3, "its": [0, 4], "joiner": 5, "journal": 16, "jupyt": [7, 17], "just": 2, "k": [0, 4], "keep": [0, 4, 16], "kei": [0, 1, 3, 4], "kept": 10, "kg": [5, 10], "kg_filenam": 5, "kg_network": 10, "kg_string": 5, "knock": [3, 6, 11], "knockdown": 0, "knockout": [0, 4, 16], "knowledg": [7, 8, 10], "knowledge_graph": 7, "kwarg": [15, 16], "last": [3, 5], "learn": 7, "leav": 3, "left": [3, 13], "len": [6, 9, 16], "length": [3, 5, 16], "level": 16, "librari": 8, "light": [9, 13], "limit": 16, "line": [2, 3, 10, 13], "linear": [9, 11, 13], "linkag": [0, 4], "linkagesfilepath": 4, "list": [3, 5, 9, 10, 11, 13, 14, 15, 16, 17], "load": [2, 6, 9, 10, 11, 12, 16], "load_from_csv": 6, "load_network_from_fil": [1, 2, 7, 9, 10, 11, 16], "load_network_from_str": [1, 2, 7], "load_pbn_from_fil": [1, 2, 7, 12, 13], "load_pbn_from_str": [1, 2, 7, 11, 16], "load_signor_network": [1, 5, 10], "log": 10, "log_scal": [11, 12], "logarithm": 11, "logic": [7, 17], "logic_rul": 17, "loop": [10, 16], "lose": 9, "low": 16, "m": 15, "mae": 13, "main": [3, 6, 9, 13, 14], "maintain": 11, "major": 5, "make": [3, 16], "mammalian": 16, "manag": 6, "mani": 11, "manipul": 8, "map": [2, 17], "markov": 15, "match": [2, 7, 16], "matlab": 16, "matplotlib": [7, 11, 17], "matrix": 3, "max_iter": [11, 15, 16], "max_tri": [11, 12], "maximum": [6, 16], "maxit": [11, 12], "md": 16, "mean": [2, 3, 6, 11, 13, 14], "measur": [3, 6, 9, 11, 13, 14, 17], "measured_nod": [6, 9, 11, 17], "measured_valu": [6, 11], "meet": 16, "meis1": 3, "merg": 5, "merge_network": [1, 7], "merge_pbn_str": [1, 5], "merged_bn": [7, 10], "merged_pbn": [7, 10], "messag": [11, 12], "method": [0, 4, 6, 7, 9, 10, 13, 14, 15], "metric": 13, "minimum": 5, "miranda": 16, "mode": 10, "model": [5, 6, 7, 8, 9, 10, 13, 16], "model_compressor": [1, 6], "model_pars": 1, "modelcompressor": 1, "modifi": 0, "modul": [6, 8, 9, 10, 11, 12, 13, 14], "mont": [7, 15], "monte_carlo": [6, 7, 11, 12, 13, 16], "monte_carlo_param": [11, 12], "more": [7, 8, 16], "morri": 11, "morris_trajectori": 11, "most": [11, 16], "mse": [12, 13, 14], "mse_sensitivity_analysi": 11, "mse_sensitivity_result": 11, "much": 11, "multipl": [7, 10, 12, 16, 17], "multisit": 16, "must": [2, 3, 7], "mutat": [2, 3, 11, 12], "mutated_connectivity_matrix": 3, "mutation_dict": 2, "mutation_profil": 3, "n": [5, 9, 11, 16], "n1": 16, "n2": 16, "n3": 16, "n_particl": [11, 12], "n_run": [7, 11, 12, 15, 16], "n_step": [7, 11, 12, 15, 16], "n_worker": 11, "name": [2, 3, 7, 16, 17], "natur": 16, "navig": 7, "ndarrai": [12, 14, 15], "need": [3, 11, 16], "network": [0, 2, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17], "network1": [7, 10], "network2": [7, 10], "network_graph": 17, "network_str": [2, 7, 16], "network_traj": 2, "networkx": [7, 11], "neurophysiologi": 16, "never": [0, 16], "new": [10, 12, 17], "new_edg": 17, "new_network": 10, "new_nod": 17, "newlin": 10, "next": 8, "nfev": [11, 12], "nfkb": [6, 11], "nit": [11, 12], "no_mut": 3, "node": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17], "node_dict": [6, 15], "node_rank": 11, "nodedict": [0, 4, 7, 9], "nodes_to_extend": 10, "nodes_to_optim": [10, 11, 12, 14], "nodes_to_remov": 9, "nois": [0, 7, 16], "non": [0, 4, 9, 11], "non_control": 9, "non_observ": 9, "none": [0, 2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 17], "normal": [0, 6, 11], "note": [6, 16], "notebook": [7, 17], "now": [7, 14], "np": [3, 11, 15, 16], "npm1": 3, "number": [0, 6, 11, 12, 13, 16], "numberoffunct": 0, "numberofnod": [0, 4], "numpi": [3, 7, 11, 16], "object": [2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 16, 17], "objective_funct": 14, "observ": [9, 11], "obtain": 7, "occur": 3, "older": 5, "olfactori": 16, "omit": 2, "oncogen": 3, "one": [0, 2, 3, 4, 9, 10, 15, 16], "onli": [0, 2, 3, 4, 5, 6, 9, 10, 11, 14, 16], "only_protein": 5, "open": 7, "oper": 7, "optim": [0, 6, 7, 8, 9, 14, 16], "optimis": [11, 12, 16], "optimization_histori": [11, 12, 13], "optimizationerror": [1, 12], "optimizationresult": [1, 12], "optimized_network": 11, "optimized_pbn": [11, 12], "optimizer_readm": 16, "optimizer_result": 13, "optimizeresult": [11, 12], "option": [3, 6, 12, 16], "optpbn": [11, 12, 15, 16], "orang": [9, 17], "order": 7, "origin": [0, 5, 6, 9, 10, 15, 16, 17], "original_bn": 10, "original_network": [9, 10, 17], "original_str": 5, "other": [0, 4, 11, 13], "out": [3, 6, 11], "output": [1, 3, 6, 9, 10, 17], "output1": 9, "output2": 9, "output_csv": 6, "output_dir": [11, 13], "output_html": [7, 9, 17], "output_nod": [11, 15, 16], "output_typ": 10, "outputfilepath": [0, 4], "over": [0, 3, 11, 12, 13], "overview": 1, "own": 2, "p": [0, 4, 6, 7, 11, 12, 13, 16], "p1": 10, "p2": 10, "p_mir": [15, 16], "p_nois": [15, 16], "packag": [7, 10], "pad": 3, "page": 8, "pancreat": 7, "pancreatic_cancer_simul": 7, "panda": [3, 7, 11], "panel": 13, "parallel": 11, "paramet": [0, 6, 7, 10, 11, 12, 14, 16], "parameter_optim": [1, 6, 9, 13, 14], "parameteroptim": [1, 11, 13, 14], "paranthes": 3, "parenthes": 10, "parga": 16, "pars": 10, "parse_equ": [1, 10], "parse_express": [1, 10], "part": [2, 11], "partial": [0, 6, 11, 16], "particl": [11, 12], "particular": [0, 4], "path": [9, 11, 17], "patient": 3, "pattern": 16, "pbn": [1, 5, 6, 8, 12, 14, 15, 16, 17], "pbn_evalu": 13, "pbn_network": 7, "pbn_simul": 7, "pbn_string": [7, 10], "pbnstationary_t": 15, "per": [3, 10, 13, 15, 16, 17], "perfect": 13, "perform": 13, "period": [11, 13, 16], "perman": [0, 4], "perturb": [0, 2, 3, 6, 9, 11, 17], "perturbation_magnitud": 11, "perturbed_dict": 2, "perturbed_gen": 2, "perturbed_nod": [6, 9, 11, 17], "peturb": 3, "peturbed_gen": 3, "physic": 9, "pi3k": [6, 11], "pip": [7, 11], "pleas": 8, "plo": [11, 12, 16], "plot": [1, 12, 16], "plot_influence_result": 11, "plot_mse_sensitivity_result": 11, "plot_optimization_histori": [11, 12], "plot_prediction_vs_experiment": 13, "plot_residu": [11, 13], "plural": 5, "png": [11, 12, 13], "point": [15, 16], "polish": 11, "pop": 11, "popsiz": [11, 12], "population_energi": 11, "possibl": 3, "predict": [6, 11, 14], "predicted_experi": 6, "prediction_vs_experiment": [11, 13], "preserv": 9, "prevent": 3, "print": [3, 6, 7, 9, 10, 13, 16], "prob": [5, 7, 10], "probabilist": [0, 2, 6, 8, 10, 11, 12, 15, 16], "probabilisticbn": [0, 1, 2, 11, 16, 17], "probabl": [0, 2, 5, 6, 7, 10, 11, 16, 17], "process": [9, 11], "profil": 2, "progress": 13, "prolifer": 3, "properti": [15, 16], "protein": 5, "provid": [3, 5, 6, 9, 10, 12, 13, 14, 16], "pso": 11, "pso_param": [11, 12], "purpos": 16, "py": 10, "pyswarm": [7, 11], "python": [3, 8, 11], "pyvi": 17, "qualiti": [11, 13], "quick": 8, "r": [13, 15, 16], "random": [0, 3, 4, 11, 15, 16], "randomli": [0, 4], "rang": [3, 16], "rank": 11, "re": 3, "read": [3, 17], "read_logic_rul": [1, 17], "readabl": [10, 12], "real": 7, "rebuild": [0, 4], "recombin": [11, 12], "recommend": 16, "red": [13, 17], "reduc": 6, "redund": 10, "ref": 15, "refer": [7, 9, 15], "regardless": [3, 11], "regress": 13, "regulatori": 16, "rel": [11, 16], "relai": 9, "relat": 0, "relationship": 13, "relev": 9, "reliabl": 16, "remov": [3, 9, 10, 11, 17], "remove_nod": 9, "remove_non_control": 9, "remove_non_observ": 9, "removed_edg": 17, "removed_nod": 17, "renam": [2, 3], "rename_nod": [1, 2], "repeat": [3, 16], "replac": 3, "report": 12, "repositori": 8, "repres": [2, 3, 7], "reproduc": 16, "requir": [0, 6, 7, 11, 16], "reset": [15, 16], "reset_network_condit": [15, 16], "residu": 11, "resourc": 2, "respect": [3, 10], "rest": 10, "restart": 15, "result": [1, 3, 9, 16], "result_evalu": 1, "resultevalu": [1, 13], "results_df": 6, "retain": 3, "retriev": 3, "return": [2, 3, 10, 11, 12, 14, 15, 16, 17], "rewrit": 3, "right": [3, 13], "rmse": 13, "round_to": 6, "row": 3, "rule": [7, 10, 11, 17], "rule_dict": 10, "rule_str": 10, "run": [7, 11, 12, 13, 15, 16], "same": [3, 10], "sampl": 11, "save": [11, 13], "save_path": [11, 12, 13], "scale": 11, "scatter": 13, "scheme": 16, "scipi": [7, 11], "score": 5, "score_cutoff": 5, "scores_dict": 2, "search": 8, "second": 16, "see": [1, 7, 11], "seed": [11, 12, 15, 16], "select": [0, 4, 7, 9, 16], "self": [10, 16], "sensit": 8, "sensitivity_analysi": 11, "sensitivity_df": 11, "sensitivity_method": 11, "separ": [2, 6, 10, 11], "seper": 3, "seri": 9, "set": [0, 2, 3, 4, 6, 7, 9, 11, 12, 15, 17], "set_experimental_condit": [15, 16], "setinitialvalu": [0, 4], "sever": [11, 13], "shade": 13, "shmulevich": 16, "should": 2, "show": [9, 11, 13], "show_confidence_interv": 13, "show_experiment_id": 13, "show_funct": 2, "show_plot": 12, "show_stagn": [11, 12], "shown": [9, 17], "side": 3, "sign": [2, 3], "signor": 5, "signor_2025_08_14": 5, "signor_format": 5, "similar": 16, "simpli": 6, "simplifi": [3, 9, 10, 11], "simplify_express": [1, 10], "simul": [0, 4, 6, 8, 9, 13, 14, 16], "simulate_optimized_model": 13, "simulation_evalu": [1, 6, 13], "simulationevalu": 1, "simultan": 7, "singl": [7, 10, 17], "sink": 9, "smaller": 16, "so": 16, "sobol": [11, 12], "sobol_sampl": 11, "sometim": 2, "sort": 12, "sourc": [0, 2, 4, 5, 6, 9, 10, 12, 13, 14, 15, 17], "space": [2, 3], "speci": [9, 11], "specif": [0, 3, 4, 7, 11, 16], "specifi": [3, 6, 7, 9, 12, 15, 16], "split": 3, "squar": [13, 14], "src": 16, "ss1": 16, "ss2": 16, "ss3": 16, "sse": 14, "stabl": 7, "stagnat": [11, 13], "stai": 16, "standard": 13, "start": 8, "startindex": 4, "state": [0, 3, 6, 8, 11, 12, 14, 15], "state_vec": 15, "state_vec1": 15, "state_vec2": 15, "statetowrit": [0, 4], "static": 6, "stationari": 16, "statist": [13, 16], "statu": [11, 12], "std": 11, "steadi": [8, 11, 12, 14, 15], "steady_st": [1, 6, 7, 11, 12, 13, 14, 16], "steadystatecalcul": [1, 7, 8, 15], "steiner": 5, "step": [0, 1, 3, 4, 8, 11, 16], "stimul": [6, 7, 11, 16], "stimuli": [6, 11, 14, 15, 16], "stimuli_efficaci": [6, 11, 15, 16], "stochast": 11, "store": [3, 17], "str": [6, 9, 10, 12, 13, 15, 16, 17], "strategi": [10, 11, 12], "string": [2, 3, 5, 7, 10, 12, 17], "structur": [6, 9, 11], "style": 9, "subgraph": 5, "subtract": 3, "success": [11, 12], "success_threshold": [11, 12], "successfulli": [11, 13], "suitabl": 10, "sum": 7, "summari": [6, 9, 13], "superior": 3, "support": [7, 8, 9, 11, 12, 15, 16], "swarm": [11, 12], "symbol": [3, 5], "synchron": [7, 15], "syntax": 7, "synthet": 6, "system": 8, "t": [3, 11], "tabl": 3, "take": [3, 16], "target": [6, 10, 11], "target_nod": 10, "termin": [11, 12], "test": [6, 12], "test_experi": 12, "test_steady_st": 12, "text": [7, 13], "tgfa": [6, 11], "thei": [3, 10], "them": [3, 8, 10], "thi": [0, 2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16], "thin": 11, "those": 3, "threshold": [5, 11, 12], "through": 6, "tie": 5, "time": [0, 4, 11, 12, 16], "titl": 2, "tnfa": [6, 11], "tograph": 4, "tol": [11, 12], "toler": 11, "tool": [6, 9, 11, 13, 14], "toolbox": [11, 12, 16], "top_n": 11, "total": 3, "tp53": 3, "tradit": 11, "train": 11, "trairatphisan": [11, 12, 15, 16], "trajectori": [7, 11, 16], "transit": 16, "treat": 16, "tri": [5, 16], "true": [4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 17], "truth": 3, "truth_tabl": 3, "try": [11, 16], "tsg": 3, "tsmc": [7, 11, 15], "tsmc_param": 11, "tsv": 5, "tupl": [3, 5, 13, 14, 15, 17], "tutori": 7, "two": [5, 7, 10, 11, 15], "txt": [3, 7, 9, 10, 11, 12, 13, 16], "ultim": 9, "uncertainti": 7, "unchang": [0, 4], "under": 3, "understand": 11, "undo": [0, 4, 7], "undoknockout": [0, 4, 7], "uniprot": 5, "uniqu": [3, 16], "until": 16, "up": [3, 11], "updat": [0, 3, 4, 9, 11], "update_cumulative_prob": 0, "update_nois": [0, 4, 7], "update_on": [0, 4], "updateuntilattractorisreach": 4, "upstream": 3, "upstream_gen": 2, "us": [0, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17], "usag": [1, 8, 16], "user": 3, "util": 1, "v": [9, 11], "valid": 6, "validate_experi": 6, "valu": [0, 2, 3, 4, 7, 11, 12, 13, 16], "variabl": [3, 17], "varianc": 11, "ve": 7, "vector": 11, "verbos": [9, 11, 12, 15, 16], "version": 5, "vi": [1, 9], "via": [11, 15], "view": 7, "vis_compress": [1, 9, 11, 17], "vis_extens": [1, 17], "vis_network": [1, 7, 17], "visual": [8, 11, 13, 17], "visualize_compress": 9, "w": [11, 12], "wai": [3, 7], "want": 3, "welcom": 7, "well": 16, "were": [9, 11, 17], "whatev": 3, "when": [0, 3, 7, 11, 13, 16], "where": [0, 3, 4, 9, 10], "whether": [3, 5, 16], "which": [9, 11], "while": [0, 4, 9], "win": [7, 10], "within": [3, 10], "without": [9, 11], "work": 16, "worker": [11, 12], "workflow": 7, "workflow_exampl": 7, "world": 7, "write": 10, "writenetworkhistori": [0, 4], "x": [11, 12, 13], "x0": [3, 16], "x1": 2, "x2": 2, "x3": 2, "y": 13, "you": [7, 16], "your": [11, 12], "yournodenam": 11}, "titles": ["BNMPy.PBN", "API Reference", "BNMPy.BMatrix", "BMatrix", "BNMPy.booleanNetwork", "BNMPy.build_bn_from_kg", "BNMPy.experiment_data", "Getting Started", "Welcome to BNMPy\u2019s documentation!", "BNMPy.model_compressor", "BNMPy.model_parser", "BNMPy Optimizer", "BNMPy.parameter_optimizer", "BNMPy.result_evaluation", "BNMPy.simulation_evaluator", "BNMPy.steady_state", "Steady State Calculation Guide", "BNMPy.vis"], "titleterms": {"": 8, "1": [13, 16], "2": [13, 16], "3": [13, 16], "The": 3, "all": 3, "also": [6, 9, 13, 14, 16], "analysi": [7, 11], "api": [1, 8], "applic": 7, "ar": 3, "basic": [6, 7, 9, 11, 12, 13], "bmatrix": [2, 3], "bn": 10, "bn2pbn": 10, "bnmpy": [0, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "boolean": 7, "booleannetwork": [3, 4], "build_bn_from_kg": 5, "cal_": 3, "cal_funct": 3, "cal_rang": 3, "cal_upstream_gen": 3, "calcul": [3, 16], "carlo": 16, "chain": 16, "class": [6, 9, 12, 14], "code": 3, "column": 6, "compress": [9, 11], "compress_model": 9, "condit": 16, "configur": [11, 12], "connectivity_matrix": 3, "convert": 10, "core": 1, "data": [6, 11], "depend": 7, "descript": [3, 6], "determinist": [7, 16], "discret": [11, 12], "document": 8, "earli": 11, "efficaci": 6, "equat": 3, "evalu": [11, 13], "evaluate_optimization_result": 13, "evaluate_pbn": 13, "exampl": [7, 10, 11, 13, 16], "experiment": [11, 13, 16], "experiment_data": 6, "experimentdata": 6, "extend": 10, "extend_network": 10, "extract_experiment_nod": 6, "featur": [9, 16], "file": [3, 7, 13], "filenam": 3, "final": 3, "format": [6, 7, 11], "function": [3, 6, 9, 10, 13], "gene_dict": 3, "gener": 13, "generate_experi": 6, "get": 7, "get_cal_funct": 3, "get_cal_upstream_gen": 3, "get_calculating_scor": 3, "get_connectivity_matrix": 3, "get_equ": 3, "get_gene_dict": 3, "get_knocking_gen": 3, "get_mutation_dict": 3, "get_truth_t": 3, "get_upstream_gen": 3, "graph": 1, "guid": [8, 16], "histori": [11, 13], "i": 3, "indic": 8, "influenc": 11, "initi": 7, "initial_st": 3, "input": 11, "instal": [3, 7, 11], "integr": 1, "kei": 10, "knockdown": 7, "knockout": 7, "knowledg": 1, "load": 7, "load_network_from_fil": 3, "manipul": 7, "markov": 16, "merg": [7, 10], "merge_network": 10, "method": [11, 12, 16], "mode": [11, 12], "model": 11, "model_compressor": 9, "model_pars": 10, "modelcompressor": 9, "modul": 1, "mont": 16, "mse": 11, "mutation_dict": 3, "network": [3, 7, 10], "network_traj": 3, "next": 7, "none": 3, "optim": [1, 11, 12, 13], "option": 11, "output": 13, "overview": [6, 9, 12, 13, 14, 16], "packag": 3, "parameter_optim": 12, "parameteroptim": 12, "pbn": [0, 7, 10, 11, 13], "perturb": 16, "perturbed_dict": 3, "perturbed_gen": 3, "phenotyp": 3, "plot": [11, 13], "post": 3, "predict": 13, "probabilist": 7, "profil": 3, "quick": [7, 16], "refer": [1, 8, 11, 12, 16], "report": 13, "requir": 3, "residu": 13, "result": [11, 12, 13], "result_evalu": 13, "score": 3, "score_": 3, "scores_dict": 3, "see": [6, 9, 13, 14, 16], "sensit": 11, "set": 16, "show_funct": 3, "simul": [3, 7], "simulation_evalu": 14, "simulationevalu": 14, "start": [3, 7, 16], "state": [7, 16], "steadi": [7, 16], "steady_st": 15, "steadystatecalcul": 16, "step": [7, 9], "stochast": 7, "stop": 11, "structur": 13, "tabl": 8, "tsmc": 16, "two": 16, "updat": 7, "upstream_gen": 3, "us": 3, "usag": [6, 9, 10, 11, 12, 13], "user": 8, "util": 6, "v": 13, "valu": 6, "vi": 17, "visual": [1, 7, 9, 12], "welcom": 8, "which": 3}})