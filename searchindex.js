Search.setIndex({"alltitles": {"1. Prediction vs Experimental Plot": [[15, "prediction-vs-experimental-plot"]], "1. TSMC Method (Two-State Markov Chain)": [[18, "tsmc-method-two-state-markov-chain"]], "2. Monte Carlo Method": [[18, "monte-carlo-method"]], "2. Residuals Plot": [[15, "residuals-plot"]], "3. Deterministic Method": [[18, "deterministic-method"]], "3. Optimization History Plot": [[15, "optimization-history-plot"]], "API Reference": [[1, null]], "API Reference:": [[8, null]], "Applications": [[7, "applications"]], "BMatrix": [[3, null]], "BN2PBN": [[11, "bn2pbn"]], "BNMPy Optimizer": [[12, null]], "BNMPy.BMatrix": [[2, null]], "BNMPy.PBN": [[0, null]], "BNMPy.booleanNetwork": [[4, null]], "BNMPy.build_bn_from_kg": [[5, null]], "BNMPy.experiment_data": [[6, null]], "BNMPy.model_compressor": [[10, null]], "BNMPy.model_parser": [[11, null]], "BNMPy.parameter_optimizer": [[13, null]], "BNMPy.result_evaluation": [[15, null]], "BNMPy.simulation_evaluator": [[16, null]], "BNMPy.steady_state": [[17, null]], "BNMPy.vis": [[19, null]], "Basic Simulation": [[7, "basic-simulation"]], "Basic Usage": [[6, "basic-usage"], [10, "basic-usage"], [12, "basic-usage"], [13, "basic-usage"], [15, "basic-usage"]], "Basic Usage with BN Steady State": [[14, "basic-usage-with-bn-steady-state"]], "Building KG-derived Boolean Networks": [[9, "building-kg-derived-boolean-networks"]], "Column Descriptions": [[6, "column-descriptions"]], "Complete Workflow Example": [[9, "complete-workflow-example"]], "Configuration": [[13, "configuration"]], "Configuration Options": [[12, "configuration-options"]], "Configurations": [[12, "configurations"]], "Converting BN to PBN": [[11, "converting-bn-to-pbn"]], "Core Modules": [[1, "core-modules"]], "Data Format": [[6, "data-format"]], "Dependencies": [[7, "dependencies"]], "Deterministic Merge (Boolean Network)": [[9, "deterministic-merge-boolean-network"]], "Deterministic Update": [[7, "deterministic-update"]], "Discrete Mode": [[12, "discrete-mode"], [13, "discrete-mode"]], "Documentation": [[8, "documentation"]], "Early Stopping": [[12, "early-stopping"]], "Efficacy Values": [[6, "efficacy-values"]], "Evaluating Optimization Results": [[15, "evaluating-optimization-results"]], "Evaluating a PBN": [[15, "evaluating-a-pbn"]], "Evaluation Plots": [[12, "evaluation-plots"]], "Evaluation Report": [[15, "evaluation-report"]], "Example": [[12, "example"], [18, "example"]], "Example Output Structure": [[15, "example-output-structure"]], "Example Usage": [[11, "example-usage"]], "Examples": [[7, "examples"]], "ExperimentData Class": [[6, "experimentdata-class"]], "Experimental Conditions": [[18, "experimental-conditions"]], "Experimental Data": [[12, "experimental-data"]], "Extending Existing Models": [[9, "extending-existing-models"]], "Extending Networks": [[11, "extending-networks"]], "Features": [[10, "features"], [18, "features"]], "Function Descriptions": [[3, "function-descriptions"]], "Functions": [[10, "functions"], [15, "functions"]], "Gene Name Mapping": [[14, "gene-name-mapping"]], "Generated Plots": [[15, "generated-plots"]], "Get Formulas Without Simulation": [[14, "get-formulas-without-simulation"]], "Getting Started": [[7, null]], "Indices and tables": [[8, "indices-and-tables"]], "Influence Analysis": [[12, "influence-analysis"]], "Initial States": [[7, "initial-states"]], "Input Data Format": [[12, "input-data-format"]], "Installation": [[3, "installation"], [7, "installation"], [12, "installation"]], "Joiner Schemes": [[9, "joiner-schemes"]], "Key Functions": [[11, "key-functions"]], "Knockout/Knockdown": [[7, "knockout-knockdown"]], "Knowledge Graph Augmentation": [[9, null]], "Knowledge Graph Integration": [[1, "knowledge-graph-integration"]], "Loading a Network": [[7, "loading-a-network"]], "Loading a PBN": [[7, "loading-a-pbn"]], "MSE Sensitivity Analysis": [[12, "mse-sensitivity-analysis"]], "Main Functions": [[14, "main-functions"]], "Merge Methods": [[9, "merge-methods"]], "Merging Networks": [[7, "merging-networks"], [9, "merging-networks"], [11, "merging-networks"]], "Methods": [[12, "methods"], [18, "methods"]], "Model Compression": [[12, "model-compression"]], "ModelCompressor Class": [[10, "modelcompressor-class"]], "More Information": [[7, "more-information"]], "Network File Format": [[7, "network-file-format"]], "Network Manipulation": [[7, "network-manipulation"]], "Network Visualization": [[7, "network-visualization"]], "Notes": [[14, "notes"]], "Optimization Methods": [[13, "optimization-methods"]], "Optimization Modules": [[1, "optimization-modules"]], "Output Files": [[15, "output-files"]], "Overview": [[6, "overview"], [9, "overview"], [10, "overview"], [13, "overview"], [14, "overview"], [15, "overview"], [16, "overview"], [18, "overview"]], "PBN Data": [[12, "pbn-data"]], "PBN Format": [[7, "pbn-format"]], "PBN Simulation": [[7, "pbn-simulation"]], "ParameterOptimizer Class": [[13, "parameteroptimizer-class"]], "Phenotype Score Module": [[14, null]], "Phenotype Scoring": [[9, "phenotype-scoring"]], "Phenotype Scoring (KG)": [[7, "phenotype-scoring-kg"]], "Plot Optimization History": [[12, "plot-optimization-history"]], "Probabilistic Boolean Networks": [[7, "probabilistic-boolean-networks"]], "Probabilistic Merge (PBN)": [[9, "probabilistic-merge-pbn"]], "Quick Start": [[7, "quick-start"], [18, "quick-start"]], "References": [[12, "references"], [13, "references"], [14, "references"], [18, "references"]], "Required Packages": [[3, "required-packages"]], "Result Evaluation": [[12, "result-evaluation"]], "Results": [[12, "results"], [13, "results"]], "See Also": [[6, "see-also"], [10, "see-also"], [15, "see-also"], [16, "see-also"], [18, "see-also"]], "Sensitivity Analysis": [[12, "sensitivity-analysis"]], "Setting Perturbations": [[18, "setting-perturbations"]], "SimulationEvaluator Class": [[16, "simulationevaluator-class"]], "Steady State Analysis": [[7, "steady-state-analysis"]], "Steady State Calculation Guide": [[18, null]], "SteadyStateCalculator for BNMPy": [[18, "steadystatecalculator-for-bnmpy"]], "Step-by-Step Compression": [[10, "step-by-step-compression"]], "Stochastic Update": [[7, "stochastic-update"]], "The calculating equations (which all start with cal_) are used post-simulation and calculate the phenotype scores and the final network score_": [[3, "the-calculating-equations-which-all-start-with-cal-are-used-post-simulation-and-calculate-the-phenotype-scores-and-the-final-network-score"]], "Usage": [[12, "usage"]], "Usage Examples": [[14, "usage-examples"]], "User Guide:": [[8, null]], "Utility Functions": [[6, "utility-functions"]], "Visualization": [[1, "visualization"], [10, "visualization"], [13, "visualization"]], "Visualization and Simulation": [[9, "visualization-and-simulation"]], "Welcome to BNMPy\u2019s documentation!": [[8, null]], "With Multiple States (2D Numpy Array)": [[14, "with-multiple-states-2d-numpy-array"]], "With PBN Steady State": [[14, "with-pbn-steady-state"]], "With Pandas Series": [[14, "with-pandas-series"]], "compress_model": [[10, "compress-model"]], "evaluate_optimization_result": [[15, "evaluate-optimization-result"]], "evaluate_pbn": [[15, "evaluate-pbn"]], "extend_networks": [[11, "extend-networks"]], "extract_experiment_nodes": [[6, "extract-experiment-nodes"]], "generate_experiments": [[6, "generate-experiments"]], "get_cal_functions(equations):": [[3, "get-cal-functions-equations"]], "get_cal_upstream_genes(equations):": [[3, "get-cal-upstream-genes-equations"]], "get_calculating_scores is to be used post-simulation, which requires the BooleanNetwork code": [[3, "get-calculating-scores-is-to-be-used-post-simulation-which-requires-the-booleannetwork-code"]], "get_calculating_scores(network_traj, cal_functions, cal_upstream_genes, gene_dict, cal_range=None, scores_dict=None)": [[3, "get-calculating-scores-network-traj-cal-functions-cal-upstream-genes-gene-dict-cal-range-none-scores-dict-none"]], "get_connectivity_matrix(equations,gene_dict,upstream_genes)": [[3, "get-connectivity-matrix-equations-gene-dict-upstream-genes"]], "get_equations(file)": [[3, "get-equations-file"]], "get_gene_dict(equations)": [[3, "get-gene-dict-equations"]], "get_knocking_genes(profile, mutation_dict, connectivity_matrix, gene_dict,perturbed_genes=None, perturbed_dict=None)": [[3, "get-knocking-genes-profile-mutation-dict-connectivity-matrix-gene-dict-perturbed-genes-none-perturbed-dict-none"]], "get_mutation_dict(file)": [[3, "get-mutation-dict-file"]], "get_phenotypes": [[14, "get-phenotypes"]], "get_truth_table(equations,upstream_genes, show_functions = None)": [[3, "get-truth-table-equations-upstream-genes-show-functions-none"]], "get_upstream_genes(equations)": [[3, "get-upstream-genes-equations"]], "load_network_from_file(filename, initial_state=None)": [[3, "load-network-from-file-filename-initial-state-none"]], "merge_networks": [[11, "merge-networks"]], "phenotype_scores": [[14, "phenotype-scores"]], "proxpath": [[14, "proxpath"]]}, "docnames": ["PBN", "api", "bmatrix", "bmatrix_readme", "booleanNetwork", "build_bn_from_kg", "experiment_data", "getting_started", "index", "knowledge_graph_guide", "model_compressor", "model_parser", "optimization_guide", "parameter_optimizer", "phenotype_score", "result_evaluation", "simulation_evaluator", "steady_state", "steady_state_guide", "vis"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["PBN.rst", "api.rst", "bmatrix.rst", "bmatrix_readme.rst", "booleanNetwork.rst", "build_bn_from_kg.rst", "experiment_data.rst", "getting_started.rst", "index.rst", "knowledge_graph_guide.rst", "model_compressor.rst", "model_parser.rst", "optimization_guide.rst", "parameter_optimizer.rst", "phenotype_score.rst", "result_evaluation.rst", "simulation_evaluator.rst", "steady_state.rst", "steady_state_guide.rst", "vis.rst"], "indexentries": {"__init__() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.__init__", false]], "__init__() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.__init__", false], [10, "id2", false]], "__init__() (bnmpy.parameter_optimizer.optimizationresult method)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.__init__", false]], "__init__() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.__init__", false], [13, "id1", false]], "__init__() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.__init__", false]], "__init__() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.__init__", false]], "__init__() (bnmpy.simulation_evaluator.simulationevaluator method)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator.__init__", false], [16, "id1", false]], "__init__() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.__init__", false]], "all_boolean_combos() (in module bnmpy.build_bn_from_kg)": [[5, "BNMPy.build_bn_from_kg.all_boolean_combos", false]], "bn2pbn() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.BN2PBN", false], [11, "id1", false]], "bnmpy.bmatrix": [[2, "module-BNMPy.BMatrix", false]], "bnmpy.booleannetwork": [[4, "module-BNMPy.booleanNetwork", false]], "bnmpy.build_bn_from_kg": [[5, "module-BNMPy.build_bn_from_kg", false]], "bnmpy.experiment_data": [[6, "module-BNMPy.experiment_data", false]], "bnmpy.model_compressor": [[10, "module-BNMPy.model_compressor", false]], "bnmpy.model_parser": [[11, "module-BNMPy.model_parser", false]], "bnmpy.parameter_optimizer": [[13, "module-BNMPy.parameter_optimizer", false]], "bnmpy.pbn": [[0, "module-BNMPy.PBN", false]], "bnmpy.result_evaluation": [[15, "module-BNMPy.result_evaluation", false]], "bnmpy.simulation_evaluator": [[16, "module-BNMPy.simulation_evaluator", false]], "bnmpy.steady_state": [[17, "module-BNMPy.steady_state", false]], "bnmpy.vis": [[19, "module-BNMPy.vis", false]], "booleannetwork (class in bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.BooleanNetwork", false]], "build_igraph() (in module bnmpy.vis)": [[19, "BNMPy.vis.build_igraph", false]], "build_igraph_pbn() (in module bnmpy.vis)": [[19, "BNMPy.vis.build_igraph_pbn", false]], "buildk() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.buildK", false]], "buildk() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.buildK", false]], "calculate_evaluation_metrics() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.calculate_evaluation_metrics", false]], "check_inhibitor_wins_rule() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.check_inhibitor_wins_rule", false]], "cij_matrix (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.cij_matrix", false]], "collapse_paths() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.collapse_paths", false], [10, "id6", false]], "compress() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.compress", false], [10, "id8", false]], "compress_model() (in module bnmpy.model_compressor)": [[10, "BNMPy.model_compressor.compress_model", false], [10, "id0", false]], "compute_stationary_deterministic() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_deterministic", false]], "compute_stationary_mc() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_mc", false]], "compute_stationary_tsmc() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_tsmc", false]], "compute_steady_state() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_steady_state", false]], "convergence_info (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.convergence_info", false]], "copy() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.copy", false]], "create_matplotlib_extension_visualization() (in module bnmpy.vis)": [[19, "BNMPy.vis.create_matplotlib_extension_visualization", false]], "create_matplotlib_visualization() (in module bnmpy.vis)": [[19, "BNMPy.vis.create_matplotlib_visualization", false]], "evaluate_optimization_result() (in module bnmpy.result_evaluation)": [[15, "BNMPy.result_evaluation.evaluate_optimization_result", false], [15, "id0", false]], "evaluate_pbn() (in module bnmpy.result_evaluation)": [[15, "BNMPy.result_evaluation.evaluate_pbn", false], [15, "id1", false]], "experimentdata (class in bnmpy.experiment_data)": [[6, "BNMPy.experiment_data.ExperimentData", false], [6, "id0", false]], "export_results_to_csv() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.export_results_to_csv", false]], "extend_networks() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.extend_networks", false], [11, "id2", false]], "extract_experiment_nodes() (in module bnmpy.experiment_data)": [[6, "BNMPy.experiment_data.extract_experiment_nodes", false]], "extract_logic_rules_from_network() (in module bnmpy.vis)": [[19, "BNMPy.vis.extract_logic_rules_from_network", false]], "find_collapsible_paths() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.find_collapsible_paths", false], [10, "id5", false]], "find_direct_targets() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.find_direct_targets", false]], "find_non_controllable_nodes() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.find_non_controllable_nodes", false], [10, "id4", false]], "find_non_observable_nodes() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.find_non_observable_nodes", false], [10, "id3", false]], "fun (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.fun", false]], "generate_evaluation_report() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.generate_evaluation_report", false]], "generate_experiments() (in module bnmpy.experiment_data)": [[6, "BNMPy.experiment_data.generate_experiments", false]], "get_cal_functions() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_cal_functions", false]], "get_cal_upstream_genes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_cal_upstream_genes", false]], "get_calculating_scores() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_calculating_scores", false]], "get_compression_summary() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.get_compression_summary", false], [10, "id9", false]], "get_connectivity_matrix() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_connectivity_matrix", false]], "get_convergence_info() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.get_convergence_info", false]], "get_equations() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_equations", false]], "get_experiment_summary() (bnmpy.experiment_data.experimentdata static method)": [[6, "BNMPy.experiment_data.ExperimentData.get_experiment_summary", false], [6, "id3", false]], "get_gene_dict() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_gene_dict", false]], "get_knocking_genes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_knocking_genes", false]], "get_mutation_dict() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_mutation_dict", false]], "get_optimized_pbn() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.get_optimized_pbn", false], [13, "id5", false]], "get_parameter_bounds() (bnmpy.simulation_evaluator.simulationevaluator method)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator.get_parameter_bounds", false], [16, "id3", false]], "get_pbn_rules_string() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.get_pbn_rules_string", false], [13, "id4", false]], "get_phenotypes() (in module bnmpy.phenotype_score)": [[14, "BNMPy.phenotype_score.get_phenotypes", false]], "get_truth_table() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_truth_table", false]], "get_upstream() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.get_upstream", false]], "get_upstream_genes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.get_upstream_genes", false]], "getbias() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getBias", false]], "getbias() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getBias", false]], "getdatafromfile() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getDataFromFile", false]], "getmaxconnectivity() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getMaxConnectivity", false]], "getmaxconnectivity() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getMaxConnectivity", false]], "getmeanconnectivity() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getMeanConnectivity", false]], "getmeanconnectivity() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getMeanConnectivity", false]], "getparametersfromfile() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getParametersFromFile", false]], "getrandominitialnodevalues() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getRandomInitialNodeValues", false]], "getrandomparameters() (in module bnmpy.booleannetwork)": [[4, "BNMPy.booleanNetwork.getRandomParameters", false]], "getrealization() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getRealization", false]], "getrealization() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getRealization", false]], "gettrajectory() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.getTrajectory", false]], "gettrajectory() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getTrajectory", false]], "initializeoutput() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.initializeOutput", false]], "initializeoutput() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.initializeOutput", false]], "knockdown() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.knockdown", false]], "knockout() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.knockout", false]], "knockout() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.knockout", false]], "load_from_csv() (bnmpy.experiment_data.experimentdata static method)": [[6, "BNMPy.experiment_data.ExperimentData.load_from_csv", false], [6, "id1", false]], "load_network() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_network", false]], "load_network_from_file() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_network_from_file", false]], "load_network_from_string() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_network_from_string", false]], "load_pbn_from_file() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_pbn_from_file", false]], "load_pbn_from_string() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.load_pbn_from_string", false]], "load_signor_network() (in module bnmpy.build_bn_from_kg)": [[5, "BNMPy.build_bn_from_kg.load_signor_network", false]], "merge_networks() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.merge_networks", false], [11, "id0", false]], "merge_pbn_string() (in module bnmpy.build_bn_from_kg)": [[5, "BNMPy.build_bn_from_kg.merge_PBN_string", false]], "message (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.message", false]], "method (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.method", false]], "modelcompressor (class in bnmpy.model_compressor)": [[10, "BNMPy.model_compressor.ModelCompressor", false], [10, "id1", false]], "module": [[0, "module-BNMPy.PBN", false], [2, "module-BNMPy.BMatrix", false], [4, "module-BNMPy.booleanNetwork", false], [5, "module-BNMPy.build_bn_from_kg", false], [6, "module-BNMPy.experiment_data", false], [10, "module-BNMPy.model_compressor", false], [11, "module-BNMPy.model_parser", false], [13, "module-BNMPy.parameter_optimizer", false], [15, "module-BNMPy.result_evaluation", false], [16, "module-BNMPy.simulation_evaluator", false], [17, "module-BNMPy.steady_state", false], [19, "module-BNMPy.vis", false]], "nfev (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.nfev", false]], "nit (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.nit", false]], "objective_function() (bnmpy.simulation_evaluator.simulationevaluator method)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator.objective_function", false], [16, "id2", false]], "optimizationerror": [[13, "BNMPy.parameter_optimizer.OptimizationError", false]], "optimizationresult (class in bnmpy.parameter_optimizer)": [[13, "BNMPy.parameter_optimizer.OptimizationResult", false]], "optimize() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.optimize", false], [13, "id2", false]], "parameteroptimizer (class in bnmpy.parameter_optimizer)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer", false], [13, "id0", false]], "parse_equations() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.parse_equations", false]], "parse_expression() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.parse_expression", false]], "phenotype_scores() (in module bnmpy.phenotype_score)": [[14, "BNMPy.phenotype_score.phenotype_scores", false]], "plot_optimization_history() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.plot_optimization_history", false], [13, "id3", false]], "plot_prediction_vs_experimental() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.plot_prediction_vs_experimental", false]], "plot_residuals() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.plot_residuals", false]], "probabilisticbn (class in bnmpy.pbn)": [[0, "BNMPy.PBN.ProbabilisticBN", false]], "proxpath() (in module bnmpy.phenotype_score)": [[14, "BNMPy.phenotype_score.proxpath", false]], "read_logic_rules() (in module bnmpy.vis)": [[19, "BNMPy.vis.read_logic_rules", false]], "remove_nodes() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.remove_nodes", false], [10, "id7", false]], "rename_nodes() (in module bnmpy.bmatrix)": [[2, "BNMPy.BMatrix.rename_nodes", false]], "reset_network_conditions() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.reset_network_conditions", false]], "resultevaluator (class in bnmpy.result_evaluation)": [[15, "BNMPy.result_evaluation.ResultEvaluator", false]], "set_experimental_conditions() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.set_experimental_conditions", false]], "setinitialvalue() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.setInitialValue", false]], "setinitialvalue() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.setInitialValue", false]], "setinitialvalues() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.setInitialValues", false]], "setinitialvalues() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.setInitialValues", false]], "simplify_expression() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.simplify_expression", false]], "simulate_optimized_model() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.simulate_optimized_model", false]], "simulationevaluator (class in bnmpy.simulation_evaluator)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator", false], [16, "id0", false]], "statetowrite() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.stateToWrite", false]], "statetowrite() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.stateToWrite", false]], "steadystatecalculator (class in bnmpy.steady_state)": [[17, "BNMPy.steady_state.SteadyStateCalculator", false]], "success (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.success", false]], "test_steady_states() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.test_steady_states", false], [13, "id6", false]], "tograph() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.toGraph", false]], "undoknockouts() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.undoKnockouts", false]], "undoknockouts() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.undoKnockouts", false]], "update() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.update", false]], "update() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update", false]], "update_cumulative_probabilities() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_cumulative_probabilities", false]], "update_noise() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.update_noise", false]], "update_noise() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_noise", false]], "update_one() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.update_one", false]], "update_one() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_one", false]], "updateuntilattractorisreached() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.updateUntilAttractorIsReached", false]], "validate_experiments() (bnmpy.experiment_data.experimentdata static method)": [[6, "BNMPy.experiment_data.ExperimentData.validate_experiments", false], [6, "id2", false]], "vis_compression() (in module bnmpy.vis)": [[19, "BNMPy.vis.vis_compression", false]], "vis_extension() (in module bnmpy.vis)": [[19, "BNMPy.vis.vis_extension", false]], "vis_network() (in module bnmpy.vis)": [[19, "BNMPy.vis.vis_network", false]], "visualize_compression() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.visualize_compression", false], [10, "id10", false]], "writenetworkhistory() (bnmpy.booleannetwork.booleannetwork method)": [[4, "BNMPy.booleanNetwork.BooleanNetwork.writeNetworkHistory", false]], "writenetworkhistory() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.writeNetworkHistory", false]], "x (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.x", false]]}, "objects": {"BNMPy": [[2, 0, 0, "-", "BMatrix"], [0, 0, 0, "-", "PBN"], [4, 0, 0, "-", "booleanNetwork"], [5, 0, 0, "-", "build_bn_from_kg"], [6, 0, 0, "-", "experiment_data"], [10, 0, 0, "-", "model_compressor"], [11, 0, 0, "-", "model_parser"], [13, 0, 0, "-", "parameter_optimizer"], [15, 0, 0, "-", "result_evaluation"], [16, 0, 0, "-", "simulation_evaluator"], [17, 0, 0, "-", "steady_state"], [19, 0, 0, "-", "vis"]], "BNMPy.BMatrix": [[2, 1, 1, "", "get_cal_functions"], [2, 1, 1, "", "get_cal_upstream_genes"], [2, 1, 1, "", "get_calculating_scores"], [2, 1, 1, "", "get_connectivity_matrix"], [2, 1, 1, "", "get_equations"], [2, 1, 1, "", "get_gene_dict"], [2, 1, 1, "", "get_knocking_genes"], [2, 1, 1, "", "get_mutation_dict"], [2, 1, 1, "", "get_truth_table"], [2, 1, 1, "", "get_upstream_genes"], [2, 1, 1, "", "load_network"], [2, 1, 1, "", "load_network_from_file"], [2, 1, 1, "", "load_network_from_string"], [2, 1, 1, "", "load_pbn_from_file"], [2, 1, 1, "", "load_pbn_from_string"], [2, 1, 1, "", "rename_nodes"]], "BNMPy.PBN": [[0, 2, 1, "", "ProbabilisticBN"]], "BNMPy.PBN.ProbabilisticBN": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "buildK"], [0, 3, 1, "", "copy"], [0, 3, 1, "", "getBias"], [0, 3, 1, "", "getMaxConnectivity"], [0, 3, 1, "", "getMeanConnectivity"], [0, 3, 1, "", "getRealization"], [0, 3, 1, "", "getTrajectory"], [0, 3, 1, "", "initializeOutput"], [0, 3, 1, "", "knockdown"], [0, 3, 1, "", "knockout"], [0, 3, 1, "", "setInitialValue"], [0, 3, 1, "", "setInitialValues"], [0, 3, 1, "", "stateToWrite"], [0, 3, 1, "", "undoKnockouts"], [0, 3, 1, "", "update"], [0, 3, 1, "", "update_cumulative_probabilities"], [0, 3, 1, "", "update_noise"], [0, 3, 1, "", "update_one"], [0, 3, 1, "", "writeNetworkHistory"]], "BNMPy.booleanNetwork": [[4, 2, 1, "", "BooleanNetwork"], [4, 1, 1, "", "getDataFromFile"], [4, 1, 1, "", "getParametersFromFile"], [4, 1, 1, "", "getRandomInitialNodeValues"], [4, 1, 1, "", "getRandomParameters"]], "BNMPy.booleanNetwork.BooleanNetwork": [[4, 3, 1, "", "__init__"], [4, 3, 1, "", "buildK"], [4, 3, 1, "", "getBias"], [4, 3, 1, "", "getMaxConnectivity"], [4, 3, 1, "", "getMeanConnectivity"], [4, 3, 1, "", "getRealization"], [4, 3, 1, "", "getTrajectory"], [4, 3, 1, "", "initializeOutput"], [4, 3, 1, "", "knockout"], [4, 3, 1, "", "setInitialValue"], [4, 3, 1, "", "setInitialValues"], [4, 3, 1, "", "stateToWrite"], [4, 3, 1, "", "toGraph"], [4, 3, 1, "", "undoKnockouts"], [4, 3, 1, "", "update"], [4, 3, 1, "", "updateUntilAttractorIsReached"], [4, 3, 1, "", "update_noise"], [4, 3, 1, "", "update_one"], [4, 3, 1, "", "writeNetworkHistory"]], "BNMPy.build_bn_from_kg": [[5, 1, 1, "", "all_boolean_combos"], [5, 1, 1, "", "load_signor_network"], [5, 1, 1, "", "merge_PBN_string"]], "BNMPy.experiment_data": [[6, 2, 1, "id0", "ExperimentData"], [6, 1, 1, "", "extract_experiment_nodes"], [6, 1, 1, "", "generate_experiments"]], "BNMPy.experiment_data.ExperimentData": [[6, 3, 1, "id3", "get_experiment_summary"], [6, 3, 1, "id1", "load_from_csv"], [6, 3, 1, "id2", "validate_experiments"]], "BNMPy.model_compressor": [[10, 2, 1, "id1", "ModelCompressor"], [10, 1, 1, "id0", "compress_model"]], "BNMPy.model_compressor.ModelCompressor": [[10, 3, 1, "id2", "__init__"], [10, 3, 1, "id6", "collapse_paths"], [10, 3, 1, "id8", "compress"], [10, 3, 1, "id5", "find_collapsible_paths"], [10, 3, 1, "id4", "find_non_controllable_nodes"], [10, 3, 1, "id3", "find_non_observable_nodes"], [10, 3, 1, "id9", "get_compression_summary"], [10, 3, 1, "id7", "remove_nodes"], [10, 3, 1, "id10", "visualize_compression"]], "BNMPy.model_parser": [[11, 1, 1, "id1", "BN2PBN"], [11, 1, 1, "", "check_inhibitor_wins_rule"], [11, 1, 1, "id2", "extend_networks"], [11, 1, 1, "", "find_direct_targets"], [11, 1, 1, "", "get_upstream"], [11, 1, 1, "id0", "merge_networks"], [11, 1, 1, "", "parse_equations"], [11, 1, 1, "", "parse_expression"], [11, 1, 1, "", "simplify_expression"]], "BNMPy.parameter_optimizer": [[13, 4, 1, "", "OptimizationError"], [13, 2, 1, "", "OptimizationResult"], [13, 2, 1, "id0", "ParameterOptimizer"]], "BNMPy.parameter_optimizer.OptimizationResult": [[13, 3, 1, "", "__init__"], [13, 5, 1, "", "cij_matrix"], [13, 5, 1, "", "convergence_info"], [13, 5, 1, "", "fun"], [13, 5, 1, "", "message"], [13, 5, 1, "", "method"], [13, 5, 1, "", "nfev"], [13, 5, 1, "", "nit"], [13, 5, 1, "", "success"], [13, 5, 1, "", "x"]], "BNMPy.parameter_optimizer.ParameterOptimizer": [[13, 3, 1, "id1", "__init__"], [13, 3, 1, "id5", "get_optimized_pbn"], [13, 3, 1, "id4", "get_pbn_rules_string"], [13, 3, 1, "id2", "optimize"], [13, 3, 1, "id3", "plot_optimization_history"], [13, 3, 1, "id6", "test_steady_states"]], "BNMPy.phenotype_score": [[14, 1, 1, "", "get_phenotypes"], [14, 1, 1, "", "phenotype_scores"], [14, 1, 1, "", "proxpath"]], "BNMPy.result_evaluation": [[15, 2, 1, "", "ResultEvaluator"], [15, 1, 1, "id0", "evaluate_optimization_result"], [15, 1, 1, "id1", "evaluate_pbn"]], "BNMPy.result_evaluation.ResultEvaluator": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "calculate_evaluation_metrics"], [15, 3, 1, "", "export_results_to_csv"], [15, 3, 1, "", "generate_evaluation_report"], [15, 3, 1, "", "plot_prediction_vs_experimental"], [15, 3, 1, "", "plot_residuals"], [15, 3, 1, "", "simulate_optimized_model"]], "BNMPy.simulation_evaluator": [[16, 2, 1, "id0", "SimulationEvaluator"]], "BNMPy.simulation_evaluator.SimulationEvaluator": [[16, 3, 1, "id1", "__init__"], [16, 3, 1, "id3", "get_parameter_bounds"], [16, 3, 1, "id2", "objective_function"]], "BNMPy.steady_state": [[17, 2, 1, "", "SteadyStateCalculator"]], "BNMPy.steady_state.SteadyStateCalculator": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "compute_stationary_deterministic"], [17, 3, 1, "", "compute_stationary_mc"], [17, 3, 1, "", "compute_stationary_tsmc"], [17, 3, 1, "", "compute_steady_state"], [17, 3, 1, "", "get_convergence_info"], [17, 3, 1, "", "reset_network_conditions"], [17, 3, 1, "", "set_experimental_conditions"]], "BNMPy.vis": [[19, 1, 1, "", "build_igraph"], [19, 1, 1, "", "build_igraph_pbn"], [19, 1, 1, "", "create_matplotlib_extension_visualization"], [19, 1, 1, "", "create_matplotlib_visualization"], [19, 1, 1, "", "extract_logic_rules_from_network"], [19, 1, 1, "", "read_logic_rules"], [19, 1, 1, "", "vis_compression"], [19, 1, 1, "", "vis_extension"], [19, 1, 1, "", "vis_network"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:exception", "5": "py:attribute"}, "terms": {"": [0, 3, 13, 17, 18], "0": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18], "000": 3, "001": [7, 12, 17, 18], "005": [12, 13], "01": [7, 12, 13, 18], "0123": 15, "023": 14, "02317": 14, "025": [17, 18], "05": [7, 18], "089": 15, "1": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 17], "10": [7, 12, 13, 14, 15, 17, 18], "100": [3, 7, 12, 13, 17, 18], "1000": [12, 13, 14, 17, 18], "10000": [7, 9, 12, 18], "1038": 14, "111": 15, "12": [6, 12, 14], "15": [12, 13, 15], "186": 14, "196": 14, "1d": 14, "1e": [12, 13], "2": [3, 6, 9, 12, 14], "20": [7, 9, 12, 18], "2000": 12, "20000": [12, 18], "2010": 18, "2014": [12, 13, 17, 18], "2024": [3, 14], "2025": 3, "21": [3, 14], "23": 14, "245": 15, "29": [3, 14], "2e": 15, "3": [3, 6, 7, 9, 12, 13, 14], "30": [6, 12, 13], "3675": 15, "3f": 15, "4": [2, 3, 6, 7, 9, 12, 15, 18], "40": 15, "42": [12, 14], "45": 14, "45318": 3, "4f": 15, "5": [2, 3, 4, 5, 7, 9, 11, 12, 13, 18], "50": 12, "500": [12, 13, 17, 18], "5000": [7, 12, 18], "506": 9, "511": 9, "512": 12, "524": 9, "6": [2, 7, 9, 12, 13, 15, 18], "638": 9, "656": 9, "67": 14, "7": [6, 7, 12, 13, 18], "70": [6, 12], "71": 14, "733": 9, "765": 9, "777": 9, "8": [9, 12, 14, 15], "85": 14, "88": [6, 12], "89": 15, "9": [7, 9, 11, 12, 13, 14, 15, 18], "95": [15, 17, 18], "A": [2, 3, 7, 10, 11, 12, 14, 18], "AND": [7, 9, 11], "For": [3, 6, 8, 10, 12, 13, 18], "If": [2, 3, 6, 11, 12, 14, 17, 19], "In": [3, 17, 18], "It": [3, 6, 8, 13, 14, 16], "NOT": [3, 7], "ONE": [12, 13, 18], "OR": [7, 9, 11], "One": 12, "Or": [7, 11], "The": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18], "Then": [0, 3], "These": [3, 7], "To": [3, 7], "With": 18, "_": [3, 9], "__init__": [0, 4, 10, 13, 15, 16, 17], "ab": 12, "about": [14, 17, 18], "absolut": 12, "acceler": 14, "access": [3, 6, 7, 18], "accur": [7, 18], "accuraci": 18, "achiev": 6, "across": 18, "activ": [3, 9, 10, 11, 18], "activi": 3, "ad": [0, 3, 9, 11], "add": [7, 9, 18], "addit": [17, 19], "adjust": 18, "advanc": [7, 10, 12], "affect": 12, "after": [0, 2, 3, 12], "against": [6, 15, 16], "akt": [3, 6, 12], "akt1": 9, "al": [12, 13, 14, 17, 18], "algorithm": 13, "all": [0, 2, 4, 5, 7, 9, 10, 12, 15, 17, 18], "all_boolean_combo": [1, 5], "allow": [12, 18], "alreadi": 6, "also": [1, 2, 3, 5, 8, 11], "altern": [7, 9, 11], "alwai": 18, "an": [2, 3, 5, 11, 12, 13, 15, 18], "analysi": [8, 14, 15, 18], "analyz": [10, 12, 18], "analyze_converg": [17, 18], "ani": [3, 9, 10, 12, 13, 17], "annot": 9, "api": 7, "apoptosi": [3, 7, 9, 14], "append": 3, "appli": [0, 17], "applic": 8, "approach": [12, 17], "appropri": 18, "ar": [6, 7, 9, 10, 11, 12, 14, 18, 19], "area": 15, "aren": 12, "arg": [5, 14, 19], "arrai": [0, 3, 4, 7, 9, 18], "assess": [12, 15], "associ": [3, 14], "asynchron": [0, 4], "atol": 12, "attractor": [9, 14, 17, 18], "attribut": 0, "augment": 8, "autism": 14, "auto": 2, "automat": [2, 3, 7, 10, 12, 16, 18], "avail": [12, 14, 18], "averag": 18, "avoid": 0, "axi": 15, "b": 7, "base": [0, 2, 3, 4, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19], "baseline_ms": 12, "basic": [1, 8, 18], "bcl2": [3, 14], "befor": [2, 6, 10, 12, 18], "behavior": [10, 12, 18], "being": [0, 3, 16], "below": 12, "best": 12, "best1bin": [12, 13], "between": [5, 6, 12, 18], "bia": 4, "biolog": 7, "biologi": 8, "biomark": 10, "blue": 10, "bmatrix": [1, 12], "bn": [2, 8, 9, 17, 19], "bn2pbn": 1, "bn_compress": 7, "bn_pbn_steady_st": [7, 18], "bn_simul": 7, "bn_string": 9, "bnmpy": [1, 7, 9, 14], "bool": [10, 11, 13, 15, 17, 18, 19], "boolean": [0, 2, 3, 4, 5, 8, 10, 11, 12, 13, 14, 17, 18], "boolean_funct": 2, "booleannetwork": [1, 2, 11, 18, 19], "both": [3, 7, 11, 12, 17, 18], "bound": 16, "branch": 12, "browser": 7, "build": [5, 8, 19], "build_bn_from_kg": 1, "build_igraph": [1, 19], "build_igraph_pbn": [1, 19], "buildk": [0, 4], "bulb": 18, "burn": [12, 18], "burn_in": 12, "c": 7, "c1": [12, 13], "c2": [12, 13], "c8": [6, 12], "cal_funct": 2, "cal_rang": 2, "cal_upstream_gen": 2, "calc": [7, 9, 18], "calcul": [7, 8, 9, 12, 13, 14, 15, 16, 17], "calculate_evaluation_metr": 15, "call": 3, "came": 3, "can": [2, 3, 5, 7, 10, 12, 14, 18], "cancer": 7, "capabl": [10, 18], "carlo": [7, 17], "cas3": [12, 13], "cascad": [10, 12], "case": [3, 11], "caus": 18, "causal": 14, "cd": 7, "cdkn2a": 9, "cebpa": 3, "certain": 7, "chain": 17, "chang": [0, 3, 4, 12, 18], "check": [7, 12, 18], "check_inhibitor_wins_rul": [1, 11], "cij_matrix": 13, "cij_vector": 16, "class": [0, 1, 4, 15, 17, 18], "clean": 3, "closer": 18, "coeffici": 15, "collaps": [10, 12, 19], "collapse_linear_path": 10, "collapse_path": 10, "collapsible_path": 10, "color": 10, "column": [7, 12, 14], "com": 14, "combin": [3, 7, 9], "comma": [6, 12], "compar": [6, 15, 16], "comparison": 19, "complet": [3, 6, 7, 8, 12, 15], "comprehens": [12, 13, 15], "compress": [1, 6, 7, 8, 19], "compress_model": [1, 6, 12], "compressed_network": [6, 10, 12, 19], "compression_comparison": 19, "compression_info": [10, 12, 19], "compression_result": [10, 12], "compression_visu": 10, "compressor": 10, "comput": [7, 9, 14, 16, 18], "compute_stationary_determinist": 17, "compute_stationary_mc": 17, "compute_stationary_tsmc": 17, "compute_steady_st": [7, 9, 14, 17, 18], "condit": [6, 13, 14, 15, 16, 17], "confid": [9, 15, 18], "config": [6, 12, 13, 15, 16], "configur": 1, "connect": [3, 4, 5, 10], "connectivity_matrix": 2, "consecut": 18, "consid": [3, 12], "constant": [0, 2, 3, 4, 17, 18], "contain": [3, 6, 12, 13, 19], "control": [10, 12, 18], "conveni": [10, 15], "converg": [12, 13, 15, 17, 18], "convergence_info": [13, 18], "convergence_threshold": 13, "convert": 9, "coordin": 18, "copi": 0, "core": [8, 12], "correl": 15, "correspond": [6, 12], "cover": 9, "cpu": 12, "creat": [0, 3, 5, 6, 7, 9, 10, 12, 13, 14, 15, 18, 19], "create_matplotlib_extension_visu": [1, 19], "create_matplotlib_visu": [1, 19], "criteria": 18, "critic": 12, "csv": [6, 10, 12, 13, 15], "csv_file": 6, "cumul": 0, "curat": [9, 14], "curated_model": 9, "current": [6, 7, 10, 12], "custom": 13, "cycl": [17, 18], "cycle_1_state_1": 14, "cycle_1_state_2": 14, "cyclic": 14, "cyclic_attractor": [17, 18], "d": 7, "dash": 15, "data": [1, 10, 13, 15, 16], "databas": 14, "datafram": [6, 9, 14], "de": 12, "de_param": [12, 13], "debug": 6, "decid": 3, "declar": 18, "deep": 0, "default": [5, 6, 7, 11, 12, 17, 18], "defer": 12, "defin": [6, 7, 9, 10, 18], "definit": [3, 11], "depend": [3, 12], "deriv": [7, 8, 11], "descript": [9, 11], "detail": [7, 8, 9, 10, 12, 15, 18], "detailed_result": 15, "detect": [2, 7], "determin": [9, 12, 18], "determinist": [11, 17], "deviat": 15, "dict": [6, 7, 10, 13, 15, 17, 19], "dictionari": [3, 7, 9, 12, 14, 18, 19], "differ": [0, 3, 4, 5, 6, 9, 10, 12, 14, 18], "differenti": [3, 7, 9, 12, 13, 14], "differential_evolut": [12, 13, 15], "direct": [10, 11], "directli": [0, 9, 10, 14, 15], "directori": 7, "disabl": 12, "discrete_param": [12, 13], "disord": 14, "displai": [12, 14, 18], "display_rules_everi": 12, "distribut": [0, 15, 18], "divid": 6, "dnmt3a": 3, "do": 3, "doe": [0, 3, 4], "doesn": 3, "doi": 14, "don": 12, "done": 18, "dougherti": 18, "download": 3, "draggabl": 10, "drop": 12, "drug": 0, "drug1": 10, "drug2": 10, "dual": 18, "duplic": 3, "dure": [0, 3, 15], "dynam": [0, 4, 18], "e": [0, 7, 11, 18], "e98001": [12, 13, 18], "each": [0, 2, 3, 7, 9, 10, 12, 13, 17, 18], "early_stop": [12, 13], "edg": [5, 9, 10, 12, 19], "edge_prob": 19, "edu": 14, "effect": [0, 3, 9], "efficaci": [0, 12, 18], "effici": 0, "els": 3, "empti": [12, 19], "enabl": [12, 13, 15], "engin": 16, "enhanc": 12, "ensur": [11, 18], "entir": 18, "epsilon": [7, 12, 17, 18], "equal": [2, 3, 11], "equat": [2, 4, 5, 11, 19], "erk": [6, 12], "error": [3, 13, 15, 16], "estim": [12, 13, 18], "et": [12, 13, 14, 17, 18], "etv6": 3, "eval": 3, "evalu": [3, 6, 13, 16], "evaluate_optimization_result": [1, 12], "evaluate_pbn": 1, "evaluation_report": 15, "evaluation_result": [12, 15], "everi": [3, 12], "evolut": [0, 12, 13], "evolutionari": 13, "ex": 3, "exampl": [1, 2, 3, 6, 8], "except": [3, 13], "exclud": 11, "exist": [7, 8, 11, 13, 15], "exp": 6, "exp_data": [6, 15], "expand": 11, "expand_complex": 2, "expect": 2, "experi": [6, 10, 12, 13, 15, 16], "experiment": [0, 6, 10, 13, 16, 17], "experiment_csv": 6, "experiment_data": [1, 10, 15, 16], "experimentdata": [1, 15], "explicit": 7, "explicitli": 14, "export": 15, "export_results_to_csv": 15, "expr1": 11, "expr2": 11, "express": [7, 11], "extend": [8, 19], "extend_network": [1, 9], "extended_network": 19, "extended_pbn": [9, 11], "extens": 19, "extension_comparison": 19, "extra": [3, 6], "extract": [3, 6, 10, 12, 14, 19], "extract_experiment_nod": [1, 10, 12], "extract_logic_rules_from_network": [1, 19], "f": [6, 7, 10, 14, 15, 18], "fail": 12, "fals": [2, 3, 4, 10, 11, 12, 13, 15, 17, 18, 19], "fast_morri": 12, "faster": [7, 12, 18], "featur": 1, "fetch": 9, "figsiz": [12, 15], "figur": 15, "file": [1, 2, 6, 10, 11, 12, 14, 19], "file_path": 14, "filenam": 2, "filepath": 4, "filter": 9, "final": [12, 13, 15, 18], "final_scor": 3, "find": [7, 10, 17, 18], "find_collapsible_path": 10, "find_direct_target": [1, 11], "find_non_controllable_nod": 10, "find_non_observable_nod": 10, "first": [11, 17], "fit": [12, 15], "fix": [0, 4, 6, 7, 11, 12, 14, 17, 18], "fixed_nod": 11, "fixed_point": [17, 18], "fixed_point_1": 14, "fixed_point_2": 14, "flag": 3, "flatten": 12, "flip": [0, 7, 18], "float": [11, 13, 16, 17, 18], "flt3": 3, "follow": 7, "form": 10, "format": [1, 2, 3, 9, 13, 14], "formula": 3, "found": 18, "four": 11, "framework": [12, 13], "freez": 18, "freeze_const": [17, 18], "fresh": 18, "from": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "ftol": [12, 13], "ftol_it": [12, 13], "full": [6, 12, 18], "fun": [12, 13], "function": [0, 1, 2, 4, 7, 9, 12, 13, 16, 17], "functionsfilepath": 4, "further": 15, "g": [0, 11, 18], "gene": [0, 1, 2, 3, 5, 7, 9, 11, 18], "gene1": [7, 11], "gene2": [7, 11], "gene3": 7, "gene4": 7, "gene5": 7, "gene_dict": 2, "gene_list": [5, 11], "genea": 7, "geneb": 7, "genec": 7, "gener": [1, 2, 3, 5, 6, 10, 12], "generate_evaluation_report": 15, "generate_experi": 1, "generate_plot": 15, "generate_report": 15, "get": [3, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18], "get_cal_funct": [1, 2], "get_cal_upstream_gen": [1, 2], "get_calculating_scor": [1, 2], "get_compressed_network": 10, "get_compression_summari": 10, "get_connectivity_matrix": [1, 2], "get_convergence_info": 17, "get_equ": [1, 2], "get_experiment_summari": 6, "get_gene_dict": [1, 2], "get_knocking_gen": [1, 2], "get_measured_nod": 6, "get_mutation_dict": [1, 2], "get_optimized_pbn": [12, 13], "get_parameter_bound": 16, "get_pbn_rules_str": 13, "get_perturbed_nod": 6, "get_truth_t": [1, 2], "get_upstream": [1, 11], "get_upstream_gen": [1, 2], "getbia": [0, 4], "getdatafromfil": [1, 4], "getmaxconnect": [0, 4], "getmeanconnect": [0, 4], "getparametersfromfil": [1, 4], "getrandominitialnodevalu": [1, 4], "getrandomparamet": [1, 4], "getreal": [0, 4], "gettrajectori": [0, 4], "github": [8, 14], "give": 3, "given": [0, 2, 4, 7, 11, 14, 16], "giveupiter": 4, "global": [12, 13], "gna": 9, "gnas_activ": 9, "graph": [7, 8, 11, 14, 19], "green": 15, "grei": [10, 19], "group": 7, "gsk3b": 3, "guid": [7, 9], "ha": [2, 3, 6, 12], "half": 18, "handl": [6, 10, 15, 16, 17], "happen": 12, "have": [2, 3, 7, 9, 11], "help": 7, "highlight": [12, 15, 19], "histogram": 15, "histori": 13, "home": 14, "horizont": 15, "how": [9, 12, 14, 18], "howev": [0, 4, 18], "html": [7, 9, 10, 12, 19], "http": 14, "human": 11, "hypothes": 6, "i": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 18], "iannuccelli": 14, "id": [5, 6], "ident": 18, "identifi": [6, 12, 18], "ignor": 6, "igraph": 19, "implement": [12, 18], "import": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 18], "improv": 12, "includ": [3, 5, 11, 12, 14, 15], "incom": 9, "incorrect": 3, "independ": 18, "index": [0, 4, 8, 14], "indic": [5, 12, 13], "individu": 3, "influenc": 10, "influence_analysi": 12, "influence_df": 12, "influence_result": 12, "influenti": 12, "info": 6, "inform": [6, 8, 9, 10, 11, 12, 17, 18, 19], "inhibit": [0, 6, 12], "inhibitor": [3, 6, 7, 9, 11, 12, 16, 17, 18], "inhibitor_win": [5, 9], "inhibitori": 10, "inhibitors_efficaci": [6, 12, 17, 18], "init": [3, 12, 13], "initi": [0, 3, 4, 10, 12, 13, 15, 16, 18], "initial_nstep": [17, 18], "initial_st": [2, 7, 18], "initializeoutput": [0, 4], "initialnodesfilepath": 4, "initialnodevalu": [0, 4], "input": [2, 3, 10, 11, 14, 17, 18], "input_format": 5, "inspect": 6, "instal": 8, "int": [6, 13, 15, 17, 18], "integ": 3, "integr": [7, 8, 9, 14, 18], "interact": [7, 9, 10, 12, 14, 19], "interest": 9, "interfac": [6, 10, 15, 16], "intermedi": [10, 12], "intersect": 9, "interv": [12, 15], "invert": 4, "involv": [3, 9], "ipynb": [7, 9, 14, 18], "isconstantconnect": 4, "item": 14, "iter": [0, 3, 4, 6, 7, 12, 13, 15, 18], "itertool": 3, "its": [0, 4], "joiner": 5, "journal": 18, "jupyt": [7, 19], "just": 2, "k": [0, 4], "keep": [0, 4, 18], "kei": [0, 1, 3, 4, 7, 9], "kept": 11, "kg": [5, 8, 11], "kg_bn": 9, "kg_file": 14, "kg_filenam": 5, "kg_network": 11, "kg_string": [5, 9], "knock": [3, 6, 12], "knockdown": 0, "knockout": [0, 4, 18], "knowledg": [7, 8, 11, 14], "knowledge_graph": [7, 9], "kra": 9, "kwarg": [17, 18], "l": 14, "label": 7, "last": [3, 5], "leav": 3, "left": [3, 15], "len": [6, 10, 18], "length": [3, 5, 18], "level": [9, 18], "lib": 14, "librari": 8, "licata": 14, "light": [10, 15], "limit": 18, "line": [2, 3, 11, 15], "linear": [10, 12, 15], "linkag": [0, 4], "linkagesfilepath": 4, "list": [3, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19], "load": [2, 6, 9, 10, 11, 12, 13, 18], "load_from_csv": 6, "load_network": [1, 2, 7, 9, 14], "load_network_from_fil": [1, 2, 10, 11, 12, 18], "load_network_from_str": [1, 2, 7], "load_pbn_from_fil": [1, 2, 13, 15], "load_pbn_from_str": [1, 2, 12, 18], "load_signor_network": [1, 5, 9, 11], "log": 11, "log_scal": [12, 13], "logarithm": 12, "logic": [7, 19], "logic_rul": 19, "loop": [11, 18], "lose": 10, "low": [9, 18], "m": [14, 17], "mae": 15, "main": [1, 3, 6, 10, 15, 16], "maintain": 12, "major": [5, 9], "make": [3, 18], "mammalian": 18, "manag": 6, "mani": 12, "manipul": 8, "manual": 14, "map": [1, 2, 7, 19], "mapk1": 9, "mapk1_activ": 9, "markov": 17, "match": [2, 7, 14, 18], "matlab": 18, "matplotlib": [7, 12, 19], "matrix": 3, "max_iter": [12, 17, 18], "max_tri": [12, 13], "maximum": [6, 18], "maxit": [12, 13], "md": 18, "mean": [2, 3, 6, 12, 15, 16], "measur": [3, 6, 10, 12, 15, 16, 19], "measured_nod": [6, 10, 12, 19], "measured_valu": [6, 12], "mediat": 14, "meet": 18, "meis1": 3, "merg": [5, 8], "merge_network": [1, 7, 9], "merge_pbn_str": [1, 5], "merged_bn": [7, 9, 11], "merged_network": 9, "merged_pbn": [7, 9, 11], "messag": [12, 13], "method": [0, 4, 6, 7, 10, 11, 14, 15, 16, 17], "metric": 15, "minimum": 5, "miranda": 18, "mode": 11, "model": [5, 6, 7, 8, 10, 11, 15, 18], "model_compressor": [1, 6], "model_pars": 1, "modelcompressor": 1, "modifi": 0, "modul": [6, 8, 10, 11, 12, 13, 15, 16], "mol": 14, "mont": [7, 17], "monte_carlo": [6, 7, 12, 13, 14, 15, 18], "monte_carlo_param": [12, 13], "more": [8, 14, 18], "morri": 12, "morris_trajectori": 12, "most": [12, 18], "mse": [13, 15, 16], "mse_sensitivity_analysi": 12, "mse_sensitivity_result": 12, "much": 12, "multipl": [7, 9, 11, 13, 18, 19], "multiple_st": 14, "multisit": 18, "must": [2, 3, 7, 14], "mutat": [2, 3, 12, 13], "mutated_connectivity_matrix": 3, "mutation_dict": 2, "mutation_profil": 3, "myc": [9, 14], "myc_inhibit": 9, "n": [5, 10, 12, 18], "n1": 18, "n2": 18, "n3": 18, "n_particl": [12, 13], "n_run": [7, 9, 12, 13, 14, 17, 18], "n_step": [7, 9, 12, 13, 14, 17, 18], "n_worker": 12, "name": [1, 2, 3, 7, 18, 19], "natur": 18, "navig": 7, "ndarrai": [13, 16, 17], "need": [3, 12, 18], "network": [0, 2, 4, 5, 6, 8, 10, 12, 13, 14, 15, 17, 18, 19], "network1": [7, 11], "network2": [7, 11], "network_graph": 19, "network_str": [2, 7, 18], "network_traj": 2, "network_typ": 2, "networkx": [7, 12], "neurodevelopment": 14, "neurophysiologi": 18, "never": [0, 18], "new": [11, 13, 19], "new_edg": 19, "new_network": 11, "new_nod": 19, "newlin": 11, "nfev": [12, 13], "nfkb": [6, 12], "nit": [12, 13], "no_mut": 3, "node": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 16, 17, 18, 19], "node_dict": [6, 17], "node_rank": 12, "nodedict": [0, 4, 7, 9, 10, 14], "nodes_to_extend": [9, 11], "nodes_to_optim": [11, 12, 13, 16], "nodes_to_remov": 10, "nois": [0, 7, 18], "non": [0, 4, 10, 12], "non_control": 10, "non_observ": 10, "none": [0, 2, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 19], "normal": [0, 6, 12], "note": [1, 6, 18], "notebook": [7, 19], "now": 16, "np": [3, 12, 14, 17, 18], "npm1": 3, "number": [0, 6, 12, 13, 15, 18], "numberoffunct": 0, "numberofnod": [0, 4], "numpi": [3, 7, 9, 12, 18], "object": [2, 3, 4, 6, 10, 11, 12, 13, 15, 16, 18, 19], "objective_funct": 16, "observ": [10, 12], "obtain": 7, "occur": 3, "offcampu": 14, "older": 5, "olfactori": 18, "omit": 2, "oncogen": 3, "one": [0, 2, 3, 4, 10, 11, 17, 18], "onli": [0, 2, 3, 4, 5, 6, 10, 11, 12, 16, 18], "only_protein": [5, 9], "open": 7, "oper": 7, "optim": [0, 6, 7, 8, 10, 16, 18], "optimis": [12, 13, 18], "optimization_histori": [12, 13, 15], "optimizationerror": [1, 13], "optimizationresult": [1, 13], "optimized_network": 12, "optimized_pbn": [12, 13], "optimizer_readm": 18, "optimizer_result": 15, "optimizeresult": [12, 13], "option": [3, 6, 9, 13, 18], "optpbn": [12, 13, 17, 18], "orang": [10, 19], "order": [7, 14], "org": 14, "orig_bn": 9, "orig_gen": 9, "origin": [0, 5, 6, 9, 10, 11, 17, 18, 19], "original_bn": 11, "original_network": [10, 11, 19], "original_str": 5, "other": [0, 4, 12, 15], "otherwis": 14, "out": [3, 6, 12], "output": [1, 3, 6, 9, 10, 11, 14, 19], "output1": 10, "output2": 10, "output_csv": 6, "output_dir": [12, 15], "output_html": [7, 9, 10, 19], "output_nod": [12, 17, 18], "output_typ": 11, "outputfilepath": [0, 4], "over": [0, 3, 12, 13, 15], "overrid": 9, "overview": [1, 8], "own": 2, "p": [0, 4, 6, 7, 12, 13, 15, 18], "p1": 11, "p2": 11, "p_mir": [17, 18], "p_nois": [17, 18], "packag": [7, 11], "pad": 3, "page": 8, "pancreat": 7, "pancreatic_cancer_simul": 7, "panda": [3, 7, 9, 12], "panel": 15, "parallel": 12, "paramet": [0, 6, 7, 9, 11, 12, 13, 14, 16, 18], "parameter_optim": [1, 6, 10, 15, 16], "parameteroptim": [1, 12, 15, 16], "paranthes": 3, "parenthes": 11, "parga": 18, "pars": 11, "parse_equ": [1, 11], "parse_express": [1, 11], "part": [2, 12], "partial": [0, 6, 12, 18], "particl": [12, 13], "particular": [0, 4], "path": [2, 7, 10, 12, 14, 19], "pathwai": [9, 14], "patient": 3, "pattern": 18, "pbn": [1, 2, 5, 6, 8, 13, 16, 17, 18, 19], "pbn_evalu": 15, "pbn_network": 7, "pbn_simul": 7, "pbn_string": [7, 11], "pbnstationary_t": 17, "pd": 14, "per": [3, 11, 15, 17, 18, 19], "perfect": 15, "perform": 15, "period": [12, 15, 18], "perman": [0, 4], "perturb": [0, 2, 3, 6, 10, 12, 19], "perturbation_magnitud": 12, "perturbed_dict": 2, "perturbed_gen": 2, "perturbed_nod": [6, 10, 12, 19], "peturb": 3, "peturbed_gen": 3, "pheno_df": 14, "phenotyp": [1, 8], "phenotype_scor": [7, 9], "physic": 10, "pi3k": [6, 12], "pik3ca": 9, "pip": [7, 12], "pleas": 8, "plo": [12, 13, 18], "plot": [1, 13, 18], "plot_influence_result": 12, "plot_mse_sensitivity_result": 12, "plot_optimization_histori": [12, 13], "plot_prediction_vs_experiment": 15, "plot_residu": [12, 15], "plural": [5, 9], "png": [12, 13, 15], "point": [14, 17, 18], "polish": 12, "pop": 12, "popsiz": [12, 13], "population_energi": 12, "possibl": 3, "predict": [6, 12, 16], "predicted_experi": 6, "prediction_vs_experiment": [12, 15], "preserv": 10, "prevent": 3, "print": [3, 6, 7, 9, 10, 11, 14, 15, 18], "prioriti": [7, 14], "prob": [5, 7, 9, 11], "probabilist": [0, 2, 6, 8, 11, 12, 13, 14, 17, 18], "probabilisticbn": [0, 1, 2, 12, 18, 19], "probabl": [0, 2, 5, 6, 7, 9, 11, 12, 18, 19], "process": [10, 12], "profil": 2, "progress": 15, "prolifer": [3, 7, 9, 14], "properti": [17, 18], "protein": [5, 9], "provid": [3, 5, 6, 7, 10, 11, 13, 14, 15, 16, 18], "proxpath": 9, "pso": 12, "pso_param": [12, 13], "psychiatri": 14, "purpos": 18, "py": 11, "pyswarm": [7, 12], "python": [3, 8, 12], "pyvi": 19, "qualiti": [12, 15], "queri": [7, 14], "quick": 8, "r": [15, 17, 18], "random": [0, 3, 4, 12, 17, 18], "randomli": [0, 4], "rang": [3, 18], "rank": 12, "re": 3, "read": [3, 19], "read_logic_rul": [1, 19], "readabl": [11, 13], "real": 7, "rebuild": [0, 4], "recombin": [12, 13], "recommend": [9, 18], "red": [15, 19], "reduc": 6, "redund": 11, "ref": 17, "refer": [7, 10, 17], "regardless": [3, 12], "regress": 15, "regul": 9, "regulatori": 18, "rel": [12, 18], "relai": 10, "relat": [0, 9], "relationship": [9, 14, 15], "relev": 10, "reliabl": 18, "remov": [3, 10, 11, 12, 19], "remove_nod": 10, "remove_non_control": 10, "remove_non_observ": 10, "removed_edg": 19, "removed_nod": 19, "renam": [2, 3], "rename_nod": [1, 2], "repeat": [3, 18], "replac": 3, "report": 13, "repositori": 8, "repres": [2, 3, 7], "reproduc": 18, "requir": [0, 6, 7, 12, 18], "reset": [17, 18], "reset_network_condit": [17, 18], "residu": 12, "resourc": 2, "respect": [3, 11], "rest": 11, "restart": 17, "restrict": 9, "result": [1, 3, 7, 9, 10, 14, 18], "result_evalu": 1, "resultevalu": [1, 15], "results_df": 6, "retain": 3, "retriev": 3, "return": [2, 3, 11, 12, 13, 14, 16, 17, 18, 19], "rewrit": 3, "right": [3, 15], "rmse": 15, "rnf43": 9, "round_to": 6, "row": [3, 14], "rule": [7, 9, 11, 12, 19], "rule_dict": 11, "rule_str": 11, "run": [7, 12, 13, 15, 17, 18], "runner": 14, "s41380": 14, "saccoperfettolab": 14, "same": [3, 7, 9, 11], "sampl": 12, "save": [12, 15], "save_path": [12, 13, 15], "scale": 12, "scatter": 15, "scheme": 18, "scipi": [7, 12], "score": [1, 5, 8], "score_cutoff": [5, 9], "scores_dict": 2, "search": 8, "second": 18, "see": [1, 7, 9, 12, 14], "seed": [12, 13, 17, 18], "select": [0, 4, 7, 9, 10, 18], "self": [11, 18], "sensit": 8, "sensitivity_analysi": 12, "sensitivity_df": 12, "sensitivity_method": 12, "separ": [2, 6, 11, 12], "seper": 3, "seri": [9, 10], "serv": 7, "set": [0, 2, 3, 4, 6, 7, 10, 12, 13, 17, 19], "set_experimental_condit": [14, 17, 18], "setinitialvalu": [0, 4], "sever": [12, 15], "shade": 15, "shmulevich": 18, "should": 2, "show": [9, 10, 12, 14, 15], "show_confidence_interv": 15, "show_experiment_id": 15, "show_funct": 2, "show_plot": 13, "show_stagn": [12, 13], "shown": [10, 19], "side": 3, "sign": [2, 3], "significant_paths_to_phenotyp": 14, "signor": [5, 7, 9], "signor_2025_08_14": 5, "signor_format": 5, "sim_result": 14, "similar": 18, "simpli": 6, "simplifi": [3, 10, 11, 12], "simplify_express": [1, 11], "simul": [0, 4, 6, 8, 10, 15, 16, 18], "simulate_optimized_model": 15, "simulation_evalu": [1, 6, 15], "simulation_result": [7, 9, 14], "simulationevalu": 1, "simultan": 7, "singl": [7, 11, 14, 19], "sink": 10, "smad4": 9, "smad4_inhibit": 9, "smaller": 18, "so": 18, "sobol": [12, 13], "sobol_sampl": 12, "sometim": 2, "sort": 13, "sourc": [0, 2, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 19], "space": [2, 3], "speci": [10, 12], "specif": [0, 3, 4, 7, 9, 12, 18], "specifi": [3, 6, 7, 9, 10, 13, 14, 17, 18], "split": 3, "squar": [15, 16], "src": [9, 18], "src_activ": 9, "src_inhibit": 9, "ss1": 18, "ss2": 18, "ss3": 18, "ss_calc": 14, "sse": 16, "stabl": 7, "stagnat": [12, 15], "stai": 18, "standard": 15, "start": 8, "startindex": 4, "state": [0, 3, 6, 8, 9, 12, 13, 16, 17], "state_1": 14, "state_2": 14, "state_3": 14, "state_vec": 17, "state_vec1": 17, "state_vec2": 17, "statetowrit": [0, 4], "static": 6, "stationari": 18, "statist": [14, 15, 18], "statu": [12, 13], "std": 12, "steadi": [8, 9, 12, 13, 16, 17], "steady_st": [1, 6, 7, 9, 12, 13, 14, 15, 16, 18], "steady_state_arrai": 14, "steadystatecalcul": [1, 7, 8, 9, 14, 17], "steiner": [5, 9], "step": [0, 1, 3, 4, 7, 12, 18], "stimul": [6, 7, 12, 18], "stimuli": [6, 12, 14, 16, 17, 18], "stimuli_efficaci": [6, 12, 17, 18], "stochast": 12, "store": [3, 19], "str": [6, 10, 11, 13, 15, 17, 18, 19], "strategi": [9, 11, 12, 13], "string": [2, 3, 5, 7, 11, 13, 19], "structur": [6, 10, 12], "style": 10, "subgraph": [5, 9], "subtract": 3, "success": [12, 13], "success_threshold": [12, 13], "successfulli": [12, 15], "suitabl": 11, "sum": 7, "summari": [6, 10, 15], "superior": 3, "support": [7, 8, 9, 10, 12, 13, 14, 17, 18], "swarm": [12, 13], "symbol": [3, 5], "synchron": [7, 17], "syntax": 7, "synthet": 6, "system": 8, "t": [3, 12], "tabl": 3, "take": [3, 18], "target": [6, 11, 12], "target_nod": 11, "termin": [12, 13], "test": [6, 13], "test_experi": 13, "test_steady_st": 13, "text": [7, 15], "tgfa": [6, 12], "thei": [3, 11], "them": [3, 8, 11], "thi": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 18], "thin": 12, "those": 3, "three": 14, "threshold": [5, 12, 13], "through": 6, "tie": [5, 9], "time": [0, 4, 12, 13, 14, 18], "titl": 2, "tnfa": [6, 12], "tograph": 4, "tol": [12, 13], "toler": 12, "tool": [6, 10, 12, 15, 16], "toolbox": [12, 13, 18], "top_n": 12, "total": 3, "tp53": [3, 9, 14], "tradit": 12, "train": 12, "trairatphisan": [12, 13, 17, 18], "trajectori": [7, 12, 18], "transit": 18, "treat": 18, "tri": [5, 18], "true": [4, 5, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19], "truth": 3, "truth_tabl": 3, "try": [12, 18], "tsg": 3, "tsmc": [7, 12, 17], "tsmc_param": 12, "tsv": 5, "tupl": [3, 5, 15, 16, 17, 19], "tutori": 7, "two": [5, 7, 11, 12, 17], "txt": [3, 7, 9, 10, 11, 12, 13, 14, 15, 18], "ultim": 10, "uncertainti": 7, "unchang": [0, 4], "under": 3, "underli": 14, "understand": [12, 14], "undo": [0, 4, 7], "undoknockout": [0, 4, 7], "unifi": [2, 7], "union": 9, "uniprot": 5, "uniqu": [3, 18], "until": 18, "up": [3, 12], "updat": [0, 3, 4, 10, 12], "update_cumulative_prob": 0, "update_nois": [0, 4, 7], "update_on": [0, 4], "updateuntilattractorisreach": 4, "upstream": 3, "upstream_gen": 2, "us": [0, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 18, 19], "usag": [1, 8, 18], "user": 3, "util": 1, "v": [10, 12], "valid": 6, "validate_experi": 6, "valu": [0, 2, 3, 4, 7, 12, 13, 15, 18], "variabl": [3, 19], "varianc": 12, "vector": 12, "verbos": [10, 12, 13, 17, 18], "version": 5, "vi": [1, 10], "via": [12, 17], "view": 7, "vis_compress": [1, 10, 12, 19], "vis_extens": [1, 19], "vis_network": [1, 7, 9, 19], "visual": [8, 12, 15, 19], "visualize_compress": 10, "vitriolo": 14, "vote": 9, "vundavilli2020_standard": 9, "w": [12, 13], "wai": [3, 7, 14], "want": 3, "washington": 14, "welcom": 7, "well": 18, "were": [10, 12, 19], "whatev": 3, "when": [0, 3, 7, 12, 14, 15, 18], "where": [0, 3, 4, 9, 10, 11], "whether": [2, 3, 5, 18], "which": [10, 12], "while": [0, 4, 10], "win": [7, 9, 11], "within": [3, 11], "without": [10, 12], "work": [14, 18], "worker": [12, 13], "workflow": [7, 8], "workflow_exampl": 7, "world": 7, "write": 11, "writenetworkhistori": [0, 4], "x": [12, 13, 15], "x0": [3, 18], "x1": 2, "x2": 2, "x3": 2, "y": 15, "you": [7, 18], "your": [12, 13], "yournodenam": 12}, "titles": ["BNMPy.PBN", "API Reference", "BNMPy.BMatrix", "BMatrix", "BNMPy.booleanNetwork", "BNMPy.build_bn_from_kg", "BNMPy.experiment_data", "Getting Started", "Welcome to BNMPy\u2019s documentation!", "Knowledge Graph Augmentation", "BNMPy.model_compressor", "BNMPy.model_parser", "BNMPy Optimizer", "BNMPy.parameter_optimizer", "Phenotype Score Module", "BNMPy.result_evaluation", "BNMPy.simulation_evaluator", "BNMPy.steady_state", "Steady State Calculation Guide", "BNMPy.vis"], "titleterms": {"": 8, "1": [15, 18], "2": [15, 18], "2d": 14, "3": [15, 18], "The": 3, "With": 14, "all": 3, "also": [6, 10, 15, 16, 18], "analysi": [7, 12], "api": [1, 8], "applic": 7, "ar": 3, "arrai": 14, "augment": 9, "basic": [6, 7, 10, 12, 13, 14, 15], "bmatrix": [2, 3], "bn": [11, 14], "bn2pbn": 11, "bnmpy": [0, 2, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19], "boolean": [7, 9], "booleannetwork": [3, 4], "build": 9, "build_bn_from_kg": 5, "cal_": 3, "cal_funct": 3, "cal_rang": 3, "cal_upstream_gen": 3, "calcul": [3, 18], "carlo": 18, "chain": 18, "class": [6, 10, 13, 16], "code": 3, "column": 6, "complet": 9, "compress": [10, 12], "compress_model": 10, "condit": 18, "configur": [12, 13], "connectivity_matrix": 3, "convert": 11, "core": 1, "data": [6, 12], "depend": 7, "deriv": 9, "descript": [3, 6], "determinist": [7, 9, 18], "discret": [12, 13], "document": 8, "earli": 12, "efficaci": 6, "equat": 3, "evalu": [12, 15], "evaluate_optimization_result": 15, "evaluate_pbn": 15, "exampl": [7, 9, 11, 12, 14, 15, 18], "exist": 9, "experiment": [12, 15, 18], "experiment_data": 6, "experimentdata": 6, "extend": [9, 11], "extend_network": 11, "extract_experiment_nod": 6, "featur": [10, 18], "file": [3, 7, 15], "filenam": 3, "final": 3, "format": [6, 7, 12], "formula": 14, "function": [3, 6, 10, 11, 14, 15], "gene": 14, "gene_dict": 3, "gener": 15, "generate_experi": 6, "get": [7, 14], "get_cal_funct": 3, "get_cal_upstream_gen": 3, "get_calculating_scor": 3, "get_connectivity_matrix": 3, "get_equ": 3, "get_gene_dict": 3, "get_knocking_gen": 3, "get_mutation_dict": 3, "get_phenotyp": 14, "get_truth_t": 3, "get_upstream_gen": 3, "graph": [1, 9], "guid": [8, 18], "histori": [12, 15], "i": 3, "indic": 8, "influenc": 12, "inform": 7, "initi": 7, "initial_st": 3, "input": 12, "instal": [3, 7, 12], "integr": 1, "joiner": 9, "kei": 11, "kg": [7, 9], "knockdown": 7, "knockout": 7, "knowledg": [1, 9], "load": 7, "load_network_from_fil": 3, "main": 14, "manipul": 7, "map": 14, "markov": 18, "merg": [7, 9, 11], "merge_network": 11, "method": [9, 12, 13, 18], "mode": [12, 13], "model": [9, 12], "model_compressor": 10, "model_pars": 11, "modelcompressor": 10, "modul": [1, 14], "mont": 18, "more": 7, "mse": 12, "multipl": 14, "mutation_dict": 3, "name": 14, "network": [3, 7, 9, 11], "network_traj": 3, "none": 3, "note": 14, "numpi": 14, "optim": [1, 12, 13, 15], "option": 12, "output": 15, "overview": [6, 9, 10, 13, 14, 15, 16, 18], "packag": 3, "panda": 14, "parameter_optim": 13, "parameteroptim": 13, "pbn": [0, 7, 9, 11, 12, 14, 15], "perturb": 18, "perturbed_dict": 3, "perturbed_gen": 3, "phenotyp": [3, 7, 9, 14], "phenotype_scor": 14, "plot": [12, 15], "post": 3, "predict": 15, "probabilist": [7, 9], "profil": 3, "proxpath": 14, "quick": [7, 18], "refer": [1, 8, 12, 13, 14, 18], "report": 15, "requir": 3, "residu": 15, "result": [12, 13, 15], "result_evalu": 15, "scheme": 9, "score": [3, 7, 9, 14], "score_": 3, "scores_dict": 3, "see": [6, 10, 15, 16, 18], "sensit": 12, "seri": 14, "set": 18, "show_funct": 3, "simul": [3, 7, 9, 14], "simulation_evalu": 16, "simulationevalu": 16, "start": [3, 7, 18], "state": [7, 14, 18], "steadi": [7, 14, 18], "steady_st": 17, "steadystatecalcul": 18, "step": 10, "stochast": 7, "stop": 12, "structur": 15, "tabl": 8, "tsmc": 18, "two": 18, "updat": 7, "upstream_gen": 3, "us": 3, "usag": [6, 10, 11, 12, 13, 14, 15], "user": 8, "util": 6, "v": 15, "valu": 6, "vi": 19, "visual": [1, 7, 9, 10, 13], "welcom": 8, "which": 3, "without": 14, "workflow": 9}})