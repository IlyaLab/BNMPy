Search.setIndex({"alltitles": {"1. Prediction vs Experimental Plot": [[15, "prediction-vs-experimental-plot"]], "1. TSMC Method (Two-State Markov Chain)": [[18, "tsmc-method-two-state-markov-chain"]], "2. Monte Carlo Method": [[18, "monte-carlo-method"]], "2. Residuals Plot": [[15, "residuals-plot"]], "3. Deterministic Method": [[18, "deterministic-method"]], "3. Optimization History Plot": [[15, "optimization-history-plot"]], "API Reference": [[1, null]], "API Reference:": [[8, null]], "Applications": [[2, "applications"]], "BMatrix": [[4, null]], "BNMPy Optimizer": [[12, null]], "BNMPy.BMatrix": [[3, null]], "BNMPy.PBN": [[0, null]], "BNMPy.booleanNetwork": [[5, null]], "BNMPy.build_bn_from_kg": [[6, null]], "BNMPy.experiment_data": [[7, null]], "BNMPy.model_compressor": [[10, null]], "BNMPy.model_parser": [[11, null]], "BNMPy.parameter_optimizer": [[13, null]], "BNMPy.phenotype_score": [[14, null]], "BNMPy.result_evaluation": [[15, null]], "BNMPy.simulation_evaluator": [[16, null]], "BNMPy.steady_state": [[17, null]], "BNMPy.vis": [[19, null]], "Basic Simulation": [[2, null], [2, "id1"]], "Basic Usage": [[10, "basic-usage"], [12, "basic-usage"], [13, "basic-usage"], [15, "basic-usage"]], "Building KG-derived Boolean Networks": [[9, "building-kg-derived-boolean-networks"]], "Column Descriptions": [[7, "column-descriptions"]], "Complete Workflow Example": [[9, "complete-workflow-example"]], "Configuration": [[13, "configuration"]], "Configurations": [[12, "configurations"]], "Converting BN to PBN": [[11, "converting-bn-to-pbn"]], "Core Modules": [[1, "core-modules"]], "Data Format": [[7, "data-format"]], "Dependencies": [[2, "dependencies"]], "Deterministic Merge (Boolean Network)": [[9, "deterministic-merge-boolean-network"]], "Deterministic Update": [[2, "deterministic-update"]], "Discrete Mode": [[12, "discrete-mode"], [13, "discrete-mode"]], "Documentation": [[8, "documentation"]], "Early Stopping": [[12, "early-stopping"]], "Efficacy Values": [[7, "efficacy-values"]], "Evaluating Optimization Results": [[15, "evaluating-optimization-results"]], "Evaluating a PBN": [[15, "evaluating-a-pbn"]], "Evaluation Plots": [[12, "evaluation-plots"]], "Evaluation Report": [[15, "evaluation-report"]], "Example": [[18, "example"]], "Example Output Structure": [[15, "example-output-structure"]], "Example Usage": [[11, "example-usage"]], "Examples": [[2, "examples"]], "Experimental Conditions": [[18, "experimental-conditions"]], "Experimental Data": [[12, "experimental-data"]], "Extending Existing Models": [[9, "extending-existing-models"]], "Extending Networks": [[11, "extending-networks"]], "Features": [[10, "features"]], "Formula-based Measurements": [[7, "formula-based-measurements"]], "Formula-based Measurements (Phenotype score)": [[12, "formula-based-measurements-phenotype-score"]], "Function Descriptions": [[4, "function-descriptions"]], "Generated Plots": [[15, "generated-plots"]], "Indices and tables": [[8, "indices-and-tables"]], "Initial States": [[2, "initial-states"]], "Input Data Format": [[12, "input-data-format"]], "Installation": [[2, "installation"], [4, "installation"]], "Joiner Schemes": [[9, "joiner-schemes"]], "Knockout/Knockdown": [[2, "knockout-knockdown"]], "Knowledge Graph Augmentation": [[9, null]], "Knowledge Graph Integration": [[1, "knowledge-graph-integration"]], "Loading a Network": [[2, "loading-a-network"]], "Loading a PBN": [[2, "loading-a-pbn"]], "Merge Methods": [[9, "merge-methods"]], "Merging Networks": [[2, "merging-networks"], [9, "merging-networks"], [11, "merging-networks"]], "Methods": [[18, "methods"]], "More Information": [[2, "more-information"]], "Network File Format": [[2, "network-file-format"]], "Network Manipulation": [[2, "network-manipulation"]], "Network Visualization": [[2, "network-visualization"]], "Optimization": [[12, "optimization"]], "Optimization Methods": [[13, "optimization-methods"]], "Optimization Modules": [[1, "optimization-modules"]], "Output Files": [[15, "output-files"]], "Overview": [[9, "overview"], [18, "overview"]], "PBN Data": [[12, "pbn-data"]], "PBN Format": [[2, "pbn-format"]], "PBN Simulation": [[2, "pbn-simulation"]], "Phenotype Scoring": [[9, "phenotype-scoring"]], "Plot Optimization History": [[12, "plot-optimization-history"]], "Probabilistic Boolean Networks": [[2, "probabilistic-boolean-networks"]], "Probabilistic Merge (PBN)": [[9, "probabilistic-merge-pbn"]], "Quick Start": [[2, "quick-start"], [18, "quick-start"]], "References": [[9, "references"], [12, "references"], [13, "references"], [18, "references"]], "Required Packages": [[4, "required-packages"]], "Result Evaluation": [[12, "result-evaluation"]], "Results": [[12, "results"], [13, "results"]], "See Also": [[15, "see-also"], [18, "see-also"]], "Setting Perturbations": [[18, "setting-perturbations"]], "Steady State Analysis": [[2, "steady-state-analysis"]], "Steady State Calculation Guide": [[18, null]], "SteadyStateCalculator for BNMPy": [[18, "steadystatecalculator-for-bnmpy"]], "Step-by-Step Compression": [[10, "step-by-step-compression"]], "Stochastic Update": [[2, "stochastic-update"]], "The calculating equations (which all start with cal_) are used post-simulation and calculate the phenotype scores and the final network score_": [[4, "the-calculating-equations-which-all-start-with-cal-are-used-post-simulation-and-calculate-the-phenotype-scores-and-the-final-network-score"]], "User Guide:": [[8, null]], "Visualization": [[1, "visualization"], [10, "visualization"], [13, "visualization"]], "Visualization and Simulation": [[9, "visualization-and-simulation"]], "Welcome to BNMPy\u2019s documentation!": [[8, null]], "get_cal_functions(equations):": [[4, "get-cal-functions-equations"]], "get_cal_upstream_genes(equations):": [[4, "get-cal-upstream-genes-equations"]], "get_calculating_scores is to be used post-simulation, which requires the BooleanNetwork code": [[4, "get-calculating-scores-is-to-be-used-post-simulation-which-requires-the-booleannetwork-code"]], "get_calculating_scores(network_traj, cal_functions, cal_upstream_genes, gene_dict, cal_range=None, scores_dict=None)": [[4, "get-calculating-scores-network-traj-cal-functions-cal-upstream-genes-gene-dict-cal-range-none-scores-dict-none"]], "get_connectivity_matrix(equations,gene_dict,upstream_genes)": [[4, "get-connectivity-matrix-equations-gene-dict-upstream-genes"]], "get_equations(file)": [[4, "get-equations-file"]], "get_gene_dict(equations)": [[4, "get-gene-dict-equations"]], "get_knocking_genes(profile, mutation_dict, connectivity_matrix, gene_dict,perturbed_genes=None, perturbed_dict=None)": [[4, "get-knocking-genes-profile-mutation-dict-connectivity-matrix-gene-dict-perturbed-genes-none-perturbed-dict-none"]], "get_mutation_dict(file)": [[4, "get-mutation-dict-file"]], "get_truth_table(equations,upstream_genes, show_functions = None)": [[4, "get-truth-table-equations-upstream-genes-show-functions-none"]], "get_upstream_genes(equations)": [[4, "get-upstream-genes-equations"]], "load_network_from_file(filename, initial_state=None)": [[4, "load-network-from-file-filename-initial-state-none"]]}, "docnames": ["PBN", "api", "basic_simulation", "bmatrix", "bmatrix_readme", "booleanNetwork", "build_bn_from_kg", "experiment_data", "index", "knowledge_graph_guide", "model_compressor", "model_parser", "optimization_guide", "parameter_optimizer", "phenotype_score", "result_evaluation", "simulation_evaluator", "steady_state", "steady_state_guide", "vis"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["PBN.rst", "api.rst", "basic_simulation.rst", "bmatrix.rst", "bmatrix_readme.rst", "booleanNetwork.rst", "build_bn_from_kg.rst", "experiment_data.rst", "index.rst", "knowledge_graph_guide.rst", "model_compressor.rst", "model_parser.rst", "optimization_guide.rst", "parameter_optimizer.rst", "phenotype_score.rst", "result_evaluation.rst", "simulation_evaluator.rst", "steady_state.rst", "steady_state_guide.rst", "vis.rst"], "indexentries": {"__init__() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.__init__", false]], "__init__() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.__init__", false]], "__init__() (bnmpy.parameter_optimizer.optimizationresult method)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.__init__", false]], "__init__() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.__init__", false]], "__init__() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.__init__", false]], "__init__() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.__init__", false]], "__init__() (bnmpy.simulation_evaluator.simulationevaluator method)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator.__init__", false]], "__init__() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.__init__", false]], "all_boolean_combos() (in module bnmpy.build_bn_from_kg)": [[6, "BNMPy.build_bn_from_kg.all_boolean_combos", false]], "bn2pbn() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.BN2PBN", false]], "bnmpy.bmatrix": [[3, "module-BNMPy.BMatrix", false]], "bnmpy.booleannetwork": [[5, "module-BNMPy.booleanNetwork", false]], "bnmpy.build_bn_from_kg": [[6, "module-BNMPy.build_bn_from_kg", false]], "bnmpy.experiment_data": [[7, "module-BNMPy.experiment_data", false]], "bnmpy.model_compressor": [[10, "module-BNMPy.model_compressor", false]], "bnmpy.model_parser": [[11, "module-BNMPy.model_parser", false]], "bnmpy.parameter_optimizer": [[13, "module-BNMPy.parameter_optimizer", false]], "bnmpy.pbn": [[0, "module-BNMPy.PBN", false]], "bnmpy.phenotype_score": [[14, "module-BNMPy.phenotype_score", false]], "bnmpy.result_evaluation": [[15, "module-BNMPy.result_evaluation", false]], "bnmpy.simulation_evaluator": [[16, "module-BNMPy.simulation_evaluator", false]], "bnmpy.steady_state": [[17, "module-BNMPy.steady_state", false]], "bnmpy.vis": [[19, "module-BNMPy.vis", false]], "booleannetwork (class in bnmpy.booleannetwork)": [[5, "BNMPy.booleanNetwork.BooleanNetwork", false]], "build_igraph() (in module bnmpy.vis)": [[19, "BNMPy.vis.build_igraph", false]], "build_igraph_pbn() (in module bnmpy.vis)": [[19, "BNMPy.vis.build_igraph_pbn", false]], "buildk() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.buildK", false]], "buildk() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.buildK", false]], "calculate_evaluation_metrics() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.calculate_evaluation_metrics", false]], "check_inhibitor_wins_rule() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.check_inhibitor_wins_rule", false]], "cij_matrix (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.cij_matrix", false]], "collapse_paths() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.collapse_paths", false]], "compress() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.compress", false]], "compress_model() (in module bnmpy.model_compressor)": [[10, "BNMPy.model_compressor.compress_model", false]], "compute_stationary_deterministic() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_deterministic", false]], "compute_stationary_mc() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_mc", false]], "compute_stationary_tsmc() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_stationary_tsmc", false]], "compute_steady_state() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.compute_steady_state", false]], "convergence_info (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.convergence_info", false]], "copy() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.copy", false]], "create_matplotlib_extension_visualization() (in module bnmpy.vis)": [[19, "BNMPy.vis.create_matplotlib_extension_visualization", false]], "create_matplotlib_visualization() (in module bnmpy.vis)": [[19, "BNMPy.vis.create_matplotlib_visualization", false]], "evaluate_optimization_result() (in module bnmpy.result_evaluation)": [[15, "BNMPy.result_evaluation.evaluate_optimization_result", false]], "evaluate_pbn() (in module bnmpy.result_evaluation)": [[15, "BNMPy.result_evaluation.evaluate_pbn", false]], "experimentdata (class in bnmpy.experiment_data)": [[7, "BNMPy.experiment_data.ExperimentData", false]], "export_results_to_csv() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.export_results_to_csv", false]], "extend_networks() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.extend_networks", false]], "extract_experiment_nodes() (in module bnmpy.experiment_data)": [[7, "BNMPy.experiment_data.extract_experiment_nodes", false]], "extract_logic_rules_from_network() (in module bnmpy.vis)": [[19, "BNMPy.vis.extract_logic_rules_from_network", false]], "find_collapsible_paths() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.find_collapsible_paths", false]], "find_direct_targets() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.find_direct_targets", false]], "find_non_controllable_nodes() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.find_non_controllable_nodes", false]], "find_non_observable_nodes() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.find_non_observable_nodes", false]], "fun (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.fun", false]], "generate_evaluation_report() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.generate_evaluation_report", false]], "generate_experiments() (in module bnmpy.experiment_data)": [[7, "BNMPy.experiment_data.generate_experiments", false]], "get_cal_functions() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_cal_functions", false]], "get_cal_upstream_genes() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_cal_upstream_genes", false]], "get_calculating_scores() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_calculating_scores", false]], "get_compression_summary() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.get_compression_summary", false]], "get_connectivity_matrix() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_connectivity_matrix", false]], "get_convergence_info() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.get_convergence_info", false]], "get_equations() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_equations", false]], "get_experiment_summary() (bnmpy.experiment_data.experimentdata static method)": [[7, "BNMPy.experiment_data.ExperimentData.get_experiment_summary", false]], "get_gene_dict() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_gene_dict", false]], "get_knocking_genes() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_knocking_genes", false]], "get_mutation_dict() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_mutation_dict", false]], "get_optimized_pbn() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.get_optimized_pbn", false]], "get_parameter_bounds() (bnmpy.simulation_evaluator.simulationevaluator method)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator.get_parameter_bounds", false]], "get_pbn_rules_string() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.get_pbn_rules_string", false]], "get_phenotypes() (in module bnmpy.phenotype_score)": [[14, "BNMPy.phenotype_score.get_phenotypes", false]], "get_truth_table() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_truth_table", false]], "get_upstream() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.get_upstream", false]], "get_upstream_genes() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.get_upstream_genes", false]], "getbias() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.getBias", false]], "getbias() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getBias", false]], "getdatafromfile() (in module bnmpy.booleannetwork)": [[5, "BNMPy.booleanNetwork.getDataFromFile", false]], "getmaxconnectivity() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.getMaxConnectivity", false]], "getmaxconnectivity() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getMaxConnectivity", false]], "getmeanconnectivity() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.getMeanConnectivity", false]], "getmeanconnectivity() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getMeanConnectivity", false]], "getparametersfromfile() (in module bnmpy.booleannetwork)": [[5, "BNMPy.booleanNetwork.getParametersFromFile", false]], "getrandominitialnodevalues() (in module bnmpy.booleannetwork)": [[5, "BNMPy.booleanNetwork.getRandomInitialNodeValues", false]], "getrandomparameters() (in module bnmpy.booleannetwork)": [[5, "BNMPy.booleanNetwork.getRandomParameters", false]], "getrealization() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.getRealization", false]], "getrealization() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getRealization", false]], "gettrajectory() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.getTrajectory", false]], "gettrajectory() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.getTrajectory", false]], "initializeoutput() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.initializeOutput", false]], "initializeoutput() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.initializeOutput", false]], "knockdown() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.knockdown", false]], "knockout() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.knockout", false]], "knockout() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.knockout", false]], "load_from_csv() (bnmpy.experiment_data.experimentdata static method)": [[7, "BNMPy.experiment_data.ExperimentData.load_from_csv", false]], "load_network() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.load_network", false]], "load_network_from_file() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.load_network_from_file", false]], "load_network_from_string() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.load_network_from_string", false]], "load_pbn_from_file() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.load_pbn_from_file", false]], "load_pbn_from_string() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.load_pbn_from_string", false]], "load_signor_network() (in module bnmpy.build_bn_from_kg)": [[6, "BNMPy.build_bn_from_kg.load_signor_network", false]], "merge_networks() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.merge_networks", false]], "merge_pbn_string() (in module bnmpy.build_bn_from_kg)": [[6, "BNMPy.build_bn_from_kg.merge_PBN_string", false]], "message (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.message", false]], "method (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.method", false]], "modelcompressor (class in bnmpy.model_compressor)": [[10, "BNMPy.model_compressor.ModelCompressor", false]], "module": [[0, "module-BNMPy.PBN", false], [3, "module-BNMPy.BMatrix", false], [5, "module-BNMPy.booleanNetwork", false], [6, "module-BNMPy.build_bn_from_kg", false], [7, "module-BNMPy.experiment_data", false], [10, "module-BNMPy.model_compressor", false], [11, "module-BNMPy.model_parser", false], [13, "module-BNMPy.parameter_optimizer", false], [14, "module-BNMPy.phenotype_score", false], [15, "module-BNMPy.result_evaluation", false], [16, "module-BNMPy.simulation_evaluator", false], [17, "module-BNMPy.steady_state", false], [19, "module-BNMPy.vis", false]], "nfev (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.nfev", false]], "nit (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.nit", false]], "objective_function() (bnmpy.simulation_evaluator.simulationevaluator method)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator.objective_function", false]], "optimizationerror": [[13, "BNMPy.parameter_optimizer.OptimizationError", false]], "optimizationresult (class in bnmpy.parameter_optimizer)": [[13, "BNMPy.parameter_optimizer.OptimizationResult", false]], "optimize() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.optimize", false]], "parameteroptimizer (class in bnmpy.parameter_optimizer)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer", false]], "parse_equations() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.parse_equations", false]], "parse_expression() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.parse_expression", false]], "phenotype_scores() (in module bnmpy.phenotype_score)": [[14, "BNMPy.phenotype_score.phenotype_scores", false]], "plot_optimization_history() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.plot_optimization_history", false]], "plot_prediction_vs_experimental() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.plot_prediction_vs_experimental", false]], "plot_residuals() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.plot_residuals", false]], "probabilisticbn (class in bnmpy.pbn)": [[0, "BNMPy.PBN.ProbabilisticBN", false]], "proxpath() (in module bnmpy.phenotype_score)": [[14, "BNMPy.phenotype_score.proxpath", false]], "read_logic_rules() (in module bnmpy.vis)": [[19, "BNMPy.vis.read_logic_rules", false]], "remove_nodes() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.remove_nodes", false]], "rename_nodes() (in module bnmpy.bmatrix)": [[3, "BNMPy.BMatrix.rename_nodes", false]], "reset_network_conditions() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.reset_network_conditions", false]], "resultevaluator (class in bnmpy.result_evaluation)": [[15, "BNMPy.result_evaluation.ResultEvaluator", false]], "set_experimental_conditions() (bnmpy.steady_state.steadystatecalculator method)": [[17, "BNMPy.steady_state.SteadyStateCalculator.set_experimental_conditions", false]], "setinitialvalue() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.setInitialValue", false]], "setinitialvalue() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.setInitialValue", false]], "setinitialvalues() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.setInitialValues", false]], "setinitialvalues() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.setInitialValues", false]], "simplify_expression() (in module bnmpy.model_parser)": [[11, "BNMPy.model_parser.simplify_expression", false]], "simulate_optimized_model() (bnmpy.result_evaluation.resultevaluator method)": [[15, "BNMPy.result_evaluation.ResultEvaluator.simulate_optimized_model", false]], "simulationevaluator (class in bnmpy.simulation_evaluator)": [[16, "BNMPy.simulation_evaluator.SimulationEvaluator", false]], "statetowrite() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.stateToWrite", false]], "statetowrite() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.stateToWrite", false]], "steadystatecalculator (class in bnmpy.steady_state)": [[17, "BNMPy.steady_state.SteadyStateCalculator", false]], "success (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.success", false]], "test_steady_states() (bnmpy.parameter_optimizer.parameteroptimizer method)": [[13, "BNMPy.parameter_optimizer.ParameterOptimizer.test_steady_states", false]], "tograph() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.toGraph", false]], "undoknockouts() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.undoKnockouts", false]], "undoknockouts() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.undoKnockouts", false]], "update() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.update", false]], "update() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update", false]], "update_cumulative_probabilities() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_cumulative_probabilities", false]], "update_noise() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.update_noise", false]], "update_noise() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_noise", false]], "update_one() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.update_one", false]], "update_one() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.update_one", false]], "updateuntilattractorisreached() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.updateUntilAttractorIsReached", false]], "validate_experiments() (bnmpy.experiment_data.experimentdata static method)": [[7, "BNMPy.experiment_data.ExperimentData.validate_experiments", false]], "vis_compression() (in module bnmpy.vis)": [[19, "BNMPy.vis.vis_compression", false]], "vis_extension() (in module bnmpy.vis)": [[19, "BNMPy.vis.vis_extension", false]], "vis_network() (in module bnmpy.vis)": [[19, "BNMPy.vis.vis_network", false]], "visualize_compression() (bnmpy.model_compressor.modelcompressor method)": [[10, "BNMPy.model_compressor.ModelCompressor.visualize_compression", false]], "writenetworkhistory() (bnmpy.booleannetwork.booleannetwork method)": [[5, "BNMPy.booleanNetwork.BooleanNetwork.writeNetworkHistory", false]], "writenetworkhistory() (bnmpy.pbn.probabilisticbn method)": [[0, "BNMPy.PBN.ProbabilisticBN.writeNetworkHistory", false]], "x (bnmpy.parameter_optimizer.optimizationresult attribute)": [[13, "BNMPy.parameter_optimizer.OptimizationResult.x", false]]}, "objects": {"BNMPy": [[3, 0, 0, "-", "BMatrix"], [0, 0, 0, "-", "PBN"], [5, 0, 0, "-", "booleanNetwork"], [6, 0, 0, "-", "build_bn_from_kg"], [7, 0, 0, "-", "experiment_data"], [10, 0, 0, "-", "model_compressor"], [11, 0, 0, "-", "model_parser"], [13, 0, 0, "-", "parameter_optimizer"], [14, 0, 0, "-", "phenotype_score"], [15, 0, 0, "-", "result_evaluation"], [16, 0, 0, "-", "simulation_evaluator"], [17, 0, 0, "-", "steady_state"], [19, 0, 0, "-", "vis"]], "BNMPy.BMatrix": [[3, 1, 1, "", "get_cal_functions"], [3, 1, 1, "", "get_cal_upstream_genes"], [3, 1, 1, "", "get_calculating_scores"], [3, 1, 1, "", "get_connectivity_matrix"], [3, 1, 1, "", "get_equations"], [3, 1, 1, "", "get_gene_dict"], [3, 1, 1, "", "get_knocking_genes"], [3, 1, 1, "", "get_mutation_dict"], [3, 1, 1, "", "get_truth_table"], [3, 1, 1, "", "get_upstream_genes"], [3, 1, 1, "", "load_network"], [3, 1, 1, "", "load_network_from_file"], [3, 1, 1, "", "load_network_from_string"], [3, 1, 1, "", "load_pbn_from_file"], [3, 1, 1, "", "load_pbn_from_string"], [3, 1, 1, "", "rename_nodes"]], "BNMPy.PBN": [[0, 2, 1, "", "ProbabilisticBN"]], "BNMPy.PBN.ProbabilisticBN": [[0, 3, 1, "", "__init__"], [0, 3, 1, "", "buildK"], [0, 3, 1, "", "copy"], [0, 3, 1, "", "getBias"], [0, 3, 1, "", "getMaxConnectivity"], [0, 3, 1, "", "getMeanConnectivity"], [0, 3, 1, "", "getRealization"], [0, 3, 1, "", "getTrajectory"], [0, 3, 1, "", "initializeOutput"], [0, 3, 1, "", "knockdown"], [0, 3, 1, "", "knockout"], [0, 3, 1, "", "setInitialValue"], [0, 3, 1, "", "setInitialValues"], [0, 3, 1, "", "stateToWrite"], [0, 3, 1, "", "undoKnockouts"], [0, 3, 1, "", "update"], [0, 3, 1, "", "update_cumulative_probabilities"], [0, 3, 1, "", "update_noise"], [0, 3, 1, "", "update_one"], [0, 3, 1, "", "writeNetworkHistory"]], "BNMPy.booleanNetwork": [[5, 2, 1, "", "BooleanNetwork"], [5, 1, 1, "", "getDataFromFile"], [5, 1, 1, "", "getParametersFromFile"], [5, 1, 1, "", "getRandomInitialNodeValues"], [5, 1, 1, "", "getRandomParameters"]], "BNMPy.booleanNetwork.BooleanNetwork": [[5, 3, 1, "", "__init__"], [5, 3, 1, "", "buildK"], [5, 3, 1, "", "getBias"], [5, 3, 1, "", "getMaxConnectivity"], [5, 3, 1, "", "getMeanConnectivity"], [5, 3, 1, "", "getRealization"], [5, 3, 1, "", "getTrajectory"], [5, 3, 1, "", "initializeOutput"], [5, 3, 1, "", "knockout"], [5, 3, 1, "", "setInitialValue"], [5, 3, 1, "", "setInitialValues"], [5, 3, 1, "", "stateToWrite"], [5, 3, 1, "", "toGraph"], [5, 3, 1, "", "undoKnockouts"], [5, 3, 1, "", "update"], [5, 3, 1, "", "updateUntilAttractorIsReached"], [5, 3, 1, "", "update_noise"], [5, 3, 1, "", "update_one"], [5, 3, 1, "", "writeNetworkHistory"]], "BNMPy.build_bn_from_kg": [[6, 1, 1, "", "all_boolean_combos"], [6, 1, 1, "", "load_signor_network"], [6, 1, 1, "", "merge_PBN_string"]], "BNMPy.experiment_data": [[7, 2, 1, "", "ExperimentData"], [7, 1, 1, "", "extract_experiment_nodes"], [7, 1, 1, "", "generate_experiments"]], "BNMPy.experiment_data.ExperimentData": [[7, 3, 1, "", "get_experiment_summary"], [7, 3, 1, "", "load_from_csv"], [7, 3, 1, "", "validate_experiments"]], "BNMPy.model_compressor": [[10, 2, 1, "", "ModelCompressor"], [10, 1, 1, "", "compress_model"]], "BNMPy.model_compressor.ModelCompressor": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "collapse_paths"], [10, 3, 1, "", "compress"], [10, 3, 1, "", "find_collapsible_paths"], [10, 3, 1, "", "find_non_controllable_nodes"], [10, 3, 1, "", "find_non_observable_nodes"], [10, 3, 1, "", "get_compression_summary"], [10, 3, 1, "", "remove_nodes"], [10, 3, 1, "", "visualize_compression"]], "BNMPy.model_parser": [[11, 1, 1, "", "BN2PBN"], [11, 1, 1, "", "check_inhibitor_wins_rule"], [11, 1, 1, "", "extend_networks"], [11, 1, 1, "", "find_direct_targets"], [11, 1, 1, "", "get_upstream"], [11, 1, 1, "", "merge_networks"], [11, 1, 1, "", "parse_equations"], [11, 1, 1, "", "parse_expression"], [11, 1, 1, "", "simplify_expression"]], "BNMPy.parameter_optimizer": [[13, 4, 1, "", "OptimizationError"], [13, 2, 1, "", "OptimizationResult"], [13, 2, 1, "", "ParameterOptimizer"]], "BNMPy.parameter_optimizer.OptimizationResult": [[13, 3, 1, "", "__init__"], [13, 5, 1, "", "cij_matrix"], [13, 5, 1, "", "convergence_info"], [13, 5, 1, "", "fun"], [13, 5, 1, "", "message"], [13, 5, 1, "", "method"], [13, 5, 1, "", "nfev"], [13, 5, 1, "", "nit"], [13, 5, 1, "", "success"], [13, 5, 1, "", "x"]], "BNMPy.parameter_optimizer.ParameterOptimizer": [[13, 3, 1, "", "__init__"], [13, 3, 1, "", "get_optimized_pbn"], [13, 3, 1, "", "get_pbn_rules_string"], [13, 3, 1, "", "optimize"], [13, 3, 1, "", "plot_optimization_history"], [13, 3, 1, "", "test_steady_states"]], "BNMPy.phenotype_score": [[14, 1, 1, "", "get_phenotypes"], [14, 1, 1, "", "phenotype_scores"], [14, 1, 1, "", "proxpath"]], "BNMPy.result_evaluation": [[15, 2, 1, "", "ResultEvaluator"], [15, 1, 1, "", "evaluate_optimization_result"], [15, 1, 1, "", "evaluate_pbn"]], "BNMPy.result_evaluation.ResultEvaluator": [[15, 3, 1, "", "__init__"], [15, 3, 1, "", "calculate_evaluation_metrics"], [15, 3, 1, "", "export_results_to_csv"], [15, 3, 1, "", "generate_evaluation_report"], [15, 3, 1, "", "plot_prediction_vs_experimental"], [15, 3, 1, "", "plot_residuals"], [15, 3, 1, "", "simulate_optimized_model"]], "BNMPy.simulation_evaluator": [[16, 2, 1, "", "SimulationEvaluator"]], "BNMPy.simulation_evaluator.SimulationEvaluator": [[16, 3, 1, "", "__init__"], [16, 3, 1, "", "get_parameter_bounds"], [16, 3, 1, "", "objective_function"]], "BNMPy.steady_state": [[17, 2, 1, "", "SteadyStateCalculator"]], "BNMPy.steady_state.SteadyStateCalculator": [[17, 3, 1, "", "__init__"], [17, 3, 1, "", "compute_stationary_deterministic"], [17, 3, 1, "", "compute_stationary_mc"], [17, 3, 1, "", "compute_stationary_tsmc"], [17, 3, 1, "", "compute_steady_state"], [17, 3, 1, "", "get_convergence_info"], [17, 3, 1, "", "reset_network_conditions"], [17, 3, 1, "", "set_experimental_conditions"]], "BNMPy.vis": [[19, 1, 1, "", "build_igraph"], [19, 1, 1, "", "build_igraph_pbn"], [19, 1, 1, "", "create_matplotlib_extension_visualization"], [19, 1, 1, "", "create_matplotlib_visualization"], [19, 1, 1, "", "extract_logic_rules_from_network"], [19, 1, 1, "", "read_logic_rules"], [19, 1, 1, "", "vis_compression"], [19, 1, 1, "", "vis_extension"], [19, 1, 1, "", "vis_network"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:exception", "5": "py:attribute"}, "terms": {"": [0, 4, 7, 13, 17, 18], "0": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 15, 17, 18], "000": 4, "001": [2, 17, 18], "005": [12, 13], "01": [2, 12, 13, 18], "0123": 15, "023": 9, "02317": 9, "025": [17, 18], "05": [2, 18], "089": 15, "1": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 17], "10": [2, 9, 12, 13, 15, 17, 18], "100": [2, 4, 12, 13, 17, 18], "1000": [12, 13, 17, 18], "10000": [2, 9, 18], "1038": 9, "111": 15, "12": [7, 12], "15": [2, 12, 13, 15], "186": 9, "196": 9, "1e": [12, 13], "2": [2, 4, 7, 9, 12], "20": [2, 9, 18], "20000": 18, "2010": 18, "2014": [12, 13, 17, 18], "2024": [4, 9], "2025": 4, "21": 4, "245": 15, "29": [4, 9], "2e": 15, "3": [2, 4, 7, 9, 12, 13], "30": [7, 12, 13], "3675": 15, "3f": 15, "4": [2, 3, 4, 7, 9, 12, 15, 18], "40": 15, "45318": 4, "4f": 15, "5": [2, 3, 4, 5, 6, 9, 11, 12, 13, 18], "500": [12, 13, 17, 18], "5000": [2, 18], "506": 9, "511": 9, "524": 9, "6": [2, 3, 9, 12, 13, 15, 18], "638": 9, "656": 9, "7": [2, 7, 12, 13, 18], "70": [7, 12], "733": 9, "75": 12, "765": 9, "777": 9, "8": [9, 12, 15], "88": [7, 12], "89": 15, "9": [2, 9, 11, 12, 13, 15, 18], "95": [15, 17, 18], "A": [2, 3, 4, 9, 10, 11, 12, 18], "AND": [2, 9, 11], "For": [4, 7, 8, 10, 12, 13, 18], "If": [3, 4, 7, 11, 12, 14, 17, 19], "In": [4, 17, 18], "It": [4, 7, 8], "NOT": [2, 4], "ONE": [12, 13, 18], "OR": [2, 7, 9, 11, 12], "Or": [2, 11, 12], "The": [2, 3, 7, 9, 10, 11, 12, 13, 15, 16, 18], "Then": [0, 4], "These": [2, 4], "To": [2, 4], "With": 18, "_": [4, 9], "__init__": [0, 5, 10, 13, 15, 16, 17], "ab": 12, "about": [17, 18], "abov": 2, "absolut": 12, "acceler": 9, "access": [2, 4, 18], "accur": [2, 18], "accuraci": 18, "achiev": 7, "across": 18, "activ": [4, 9, 11, 18], "activi": 4, "ad": [0, 4, 9, 11], "add": [2, 9, 18], "addit": [17, 19], "adjust": 18, "advanc": [2, 12], "affect": 12, "after": [0, 3, 4], "against": [7, 15, 16], "aggreg": 12, "akt": [4, 7, 12], "akt1": 9, "al": [9, 12, 13, 17, 18], "all": [0, 2, 3, 5, 6, 9, 10, 12, 15, 17, 18], "all_boolean_combo": [1, 6], "allow": 18, "alreadi": 7, "also": [1, 3, 4, 6, 8, 11], "altern": [2, 9, 11], "alwai": 18, "an": [3, 4, 6, 12, 13, 15, 18], "analysi": [8, 15, 18], "analyz": [10, 18], "analyze_converg": [17, 18], "ani": [4, 9, 10, 13, 17], "annot": 9, "api": 2, "apoptosi": [4, 9, 14], "append": 4, "appli": [0, 17], "applic": 8, "approach": [12, 17], "appropri": 18, "ar": [2, 7, 9, 10, 11, 12, 18, 19], "area": 15, "arg": [6, 14, 19], "argument": 12, "arithmet": 12, "arrai": [0, 2, 4, 5, 9, 18], "assess": [12, 15], "associ": [4, 9], "asynchron": [0, 5], "atol": 12, "attractor": [9, 17, 18], "attribut": 0, "augment": [2, 8], "autism": 9, "auto": 3, "automat": [2, 3, 4, 18], "avail": [9, 12, 18], "averag": 18, "avoid": 0, "axi": 15, "b": 2, "base": [0, 2, 3, 4, 5, 10, 13, 15, 16, 18, 19], "basic": [1, 8, 18], "bcl2": 4, "befor": [3, 10, 18], "behavior": [12, 18], "being": [0, 4, 16], "below": 12, "best": 12, "best1bin": [12, 13], "between": [6, 7, 12, 18], "bia": 5, "biolog": 2, "biologi": 8, "biomark": 10, "blue": 10, "bmatrix": 1, "bn": [3, 8, 9, 17, 19], "bn2pbn": [1, 11], "bn_compress": 2, "bn_pbn_steady_st": [2, 18], "bn_simul": 2, "bn_string": 9, "bnmpy": [1, 2, 9], "bool": [7, 10, 11, 13, 15, 17, 18, 19], "boolean": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 17, 18], "boolean_funct": 3, "booleannetwork": [1, 3, 11, 19], "both": [4, 11, 12, 17, 18], "bound": 16, "browser": 2, "build": [6, 8, 19], "build_bn_from_kg": 1, "build_igraph": [1, 19], "build_igraph_pbn": [1, 19], "buildk": [0, 5], "bulb": 18, "burn": 18, "c": 2, "c1": [12, 13], "c2": [12, 13], "c8": [7, 12], "cal_funct": 3, "cal_rang": 3, "cal_upstream_gen": 3, "calc": [2, 9, 18], "calcul": [2, 8, 9, 12, 13, 14, 15, 16, 17], "calculate_evaluation_metr": 15, "call": 4, "came": 4, "can": [2, 3, 4, 6, 10, 12, 18], "cancer": 2, "capabl": [10, 18], "carlo": [2, 17], "cas3": [12, 13], "cascad": 10, "case": [4, 11], "caus": 18, "causal": 9, "cd": 2, "cdkn2a": 9, "cebpa": 4, "certain": 2, "chain": 17, "chang": [0, 4, 5, 18], "check": [2, 12, 18], "check_inhibitor_wins_rul": [1, 11], "cij_matrix": 13, "cij_vector": 16, "class": [0, 5, 7, 10, 13, 15, 16, 17, 18], "clean": 4, "closer": 18, "coeffici": 15, "collaps": [10, 19], "collapse_linear_path": 10, "collapse_path": 10, "collapsible_path": 10, "color": 10, "column": 12, "com": 9, "combin": [2, 4, 9], "comma": [7, 12], "command": 2, "compar": 15, "comparison": 19, "complet": [2, 4, 7, 8, 12, 15], "comprehens": 15, "compress": [1, 2, 19], "compress_model": [1, 10], "compressed_network": [10, 19], "compression_comparison": 19, "compression_info": [10, 19], "compression_result": 10, "compression_visu": 10, "compressor": 10, "comput": [9, 18], "compute_stationary_determinist": 17, "compute_stationary_mc": 17, "compute_stationary_tsmc": 17, "compute_steady_st": [2, 9, 17, 18], "condit": [13, 15, 17], "confid": [9, 15, 18], "config": [7, 12, 13, 15, 16], "configur": 1, "connect": [4, 5, 6, 10], "connectivity_matrix": 3, "consecut": 18, "consid": [4, 12], "constant": [0, 3, 4, 5, 17, 18], "contain": [4, 7, 12, 13, 19], "control": [10, 18], "conveni": [10, 15], "converg": [12, 13, 15, 17, 18], "convergence_info": [13, 18], "convergence_threshold": 13, "convert": 9, "coordin": 18, "copi": 0, "core": [8, 12], "correl": 15, "correspond": [7, 12], "cover": 9, "creat": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 18, 19], "create_matplotlib_extension_visu": [1, 19], "create_matplotlib_visu": [1, 19], "criteria": 18, "csv": [7, 10, 12, 13, 15], "csv_file": 7, "cumul": 0, "curat": 9, "curated_model": 9, "current": [2, 7, 12], "custom": 13, "cycl": [17, 18], "cyclic_attractor": [17, 18], "d": 2, "dash": [10, 15], "data": [1, 10, 13, 15, 16], "dataclass": 2, "datafram": [7, 9, 14], "de": 12, "de_param": [12, 13], "debug": 7, "decid": 4, "declar": 18, "deep": 0, "default": [2, 6, 7, 11, 12, 17, 18], "defer": 12, "defin": [7, 9, 10, 18], "definit": [4, 11], "depend": 4, "deriv": [8, 11], "descript": [9, 11], "detail": [8, 9, 10, 12, 15, 18], "detailed_result": 15, "detect": [2, 3], "determin": [9, 12, 18], "determinist": [11, 17], "deviat": 15, "dict": [7, 10, 13, 15, 17, 19], "dictionari": [2, 4, 9, 12, 18, 19], "differ": [0, 4, 5, 6, 9, 12, 18], "differenti": [4, 9, 12, 13, 14], "differential_evolut": [12, 13, 15], "direct": [10, 11], "directli": [0, 9, 10, 12, 14, 15], "directori": 2, "disabl": 12, "discrete_param": [12, 13], "disord": 9, "displai": 18, "distribut": [0, 15, 18], "divid": 7, "dnmt3a": 4, "do": 4, "doe": [0, 4, 5], "doesn": 4, "doi": 9, "done": 18, "dougherti": 18, "download": 4, "drop": 12, "drug": 0, "drug1": 10, "drug2": 10, "duplic": 4, "dure": [0, 4, 15], "dynam": [0, 5, 18], "e": [0, 2, 7, 11, 18], "e98001": [12, 13, 18], "each": [0, 2, 3, 4, 9, 10, 12, 13, 17, 18], "early_stop": [12, 13], "edg": [6, 9, 10, 19], "edge_prob": 19, "edu": 9, "effect": [0, 4, 9], "efficaci": [0, 12, 18], "effici": 0, "els": 4, "empti": [12, 19], "enabl": [12, 15], "engin": 16, "ensur": [7, 11, 18], "entir": 18, "entri": 12, "epsilon": [2, 17, 18], "equal": [3, 4, 11], "equat": [3, 5, 6, 11, 19], "erk": [7, 12], "error": [4, 13, 15], "estim": [12, 18], "et": [9, 12, 13, 17, 18], "etv6": 4, "eval": 4, "evalu": [4, 13, 16], "evaluate_optimization_result": [1, 12, 15], "evaluate_pbn": [1, 15], "evaluation_report": 15, "evaluation_result": [12, 15], "everi": 4, "evolut": [0, 12, 13], "evolutionari": 13, "ex": 4, "exampl": [1, 3, 4, 7, 8, 12], "except": [4, 13], "exclud": 11, "exist": [8, 11, 13, 15], "exp_data": 15, "expand": 11, "expand_complex": 3, "expect": [3, 7], "experi": [7, 10, 12, 13, 15, 16], "experiment": [0, 7, 10, 13, 16, 17], "experiment_csv": 7, "experiment_data": [1, 15], "experimentdata": [1, 7, 15], "experiments_exampl": 12, "explicit": 2, "export": 15, "export_results_to_csv": 15, "expr1": 11, "expr2": 11, "express": [2, 7, 11, 12], "extend": [8, 19], "extend_network": [1, 9, 11], "extended_network": 19, "extended_pbn": [9, 11], "extens": 19, "extension_comparison": 19, "extra": [4, 7], "extract": [4, 7, 10, 19], "extract_experiment_nod": [1, 7, 10], "extract_logic_rules_from_network": [1, 19], "f": [2, 10, 15, 18], "fail": 12, "fall": 7, "fals": [3, 4, 5, 7, 10, 11, 12, 13, 15, 17, 18, 19], "faster": [2, 12, 18], "featur": 1, "fetch": 9, "figsiz": [12, 15], "figur": 15, "file": [1, 3, 7, 10, 11, 12, 14, 19], "file_path": 14, "filenam": 3, "filepath": 5, "filter": 9, "final": [12, 13, 15, 18], "final_scor": 4, "find": [2, 10, 17, 18], "find_collapsible_path": 10, "find_direct_target": [1, 11], "find_non_controllable_nod": 10, "find_non_observable_nod": 10, "first": [11, 17], "fit": [12, 15], "fix": [0, 2, 5, 7, 11, 12, 17, 18], "fixed_nod": 11, "fixed_point": [17, 18], "flag": 4, "flatten": 12, "flip": [0, 2, 18], "float": [11, 13, 16, 17, 18], "flt3": 4, "follow": 2, "form": 10, "format": [1, 3, 4, 9, 13], "formula": [4, 9, 14], "found": 18, "four": 11, "framework": [12, 13], "freez": 18, "freeze_const": [17, 18], "fresh": 18, "from": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19], "ftol": [12, 13], "ftol_it": [12, 13], "full": [7, 12, 18], "fun": [12, 13], "function": [0, 2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17], "functionsfilepath": 5, "further": 15, "g": [0, 7, 11, 18], "gene": [0, 2, 3, 4, 6, 9, 11, 14, 18], "gene1": [2, 11], "gene2": [2, 11], "gene3": 2, "gene4": 2, "gene5": 2, "gene_dict": 3, "gene_list": [6, 11], "genea": 2, "geneb": 2, "genec": 2, "gener": [1, 3, 4, 6, 7, 10, 12], "generate_evaluation_report": 15, "generate_experi": [1, 7], "generate_plot": 15, "generate_report": 15, "get": [2, 4, 6, 7, 9, 10, 12, 13, 14, 16, 17, 18], "get_cal_funct": [1, 3], "get_cal_upstream_gen": [1, 3], "get_calculating_scor": [1, 3], "get_compressed_network": 10, "get_compression_summari": 10, "get_connectivity_matrix": [1, 3], "get_convergence_info": 17, "get_equ": [1, 3], "get_experiment_summari": 7, "get_gene_dict": [1, 3], "get_knocking_gen": [1, 3], "get_mutation_dict": [1, 3], "get_optimized_pbn": [12, 13], "get_parameter_bound": 16, "get_pbn_rules_str": 13, "get_phenotyp": [1, 9, 14], "get_truth_t": [1, 3], "get_upstream": [1, 11], "get_upstream_gen": [1, 3], "getbia": [0, 5], "getdatafromfil": [1, 5], "getmaxconnect": [0, 5], "getmeanconnect": [0, 5], "getparametersfromfil": [1, 5], "getrandominitialnodevalu": [1, 5], "getrandomparamet": [1, 5], "getreal": [0, 5], "gettrajectori": [0, 5], "github": [8, 9], "give": 4, "given": [0, 3, 5, 11, 14, 16], "giveupiter": 5, "global": [12, 13], "gna": 9, "gnas_activ": 9, "graph": [2, 8, 19], "green": 15, "grei": [10, 19], "group": 2, "gsk3b": 4, "guid": [2, 9], "ha": [3, 4, 7, 12], "half": 18, "handl": [7, 15, 16, 17], "have": [2, 3, 4, 7, 9, 11, 12], "help": 2, "highlight": [12, 15, 19], "histogram": 15, "histori": 13, "home": 14, "horizont": 15, "how": [9, 18], "howev": [0, 5, 18], "html": [2, 9, 10, 19], "http": 9, "human": 11, "hypothes": 7, "i": [0, 3, 5, 6, 7, 8, 10, 11, 12, 14, 18], "iannuccelli": 9, "id": 6, "ident": 18, "identifi": [7, 18], "ignor": 7, "igraph": 19, "implement": [12, 18], "import": [2, 4, 7, 9, 10, 11, 12, 13, 15, 18], "improv": 12, "includ": [4, 6, 11], "incom": 9, "incorrect": 4, "independ": 18, "index": [0, 5, 8], "indic": [6, 12, 13], "individu": [4, 12], "influenc": 10, "inform": [8, 9, 10, 11, 17, 18, 19], "inhibit": [0, 7, 12], "inhibitor": [2, 4, 7, 9, 11, 12, 17, 18], "inhibitor_win": [6, 9], "inhibitors_efficaci": [7, 12, 17, 18], "init": [4, 12, 13], "initi": [0, 4, 5, 10, 12, 13, 15, 16, 18], "initial_nstep": [17, 18], "initial_st": [2, 3, 18], "initializeoutput": [0, 5], "initialnodesfilepath": 5, "initialnodevalu": [0, 5], "input": [3, 4, 10, 11, 17, 18], "input_format": 6, "inspect": 7, "instal": 8, "instead": 12, "int": [7, 13, 15, 17, 18], "integ": 4, "integr": [2, 8, 9, 18], "interact": [2, 9, 10, 19], "interest": 9, "interfac": 15, "intermedi": 10, "intersect": 9, "interv": 15, "invert": 5, "involv": [4, 9], "ipynb": [2, 9, 12, 18], "isconstantconnect": 5, "iter": [0, 2, 4, 5, 12, 13, 15, 18], "itertool": 4, "its": [0, 5], "joiner": 6, "journal": 18, "jupyt": [2, 19], "just": 3, "k": [0, 5], "keep": [0, 5, 18], "kei": [0, 4, 5, 9], "kept": 11, "kg": [6, 8, 11], "kg_bn": 9, "kg_file": 14, "kg_filenam": 6, "kg_network": 11, "kg_string": [6, 9], "knock": [4, 7, 12], "knockdown": 0, "knockout": [0, 5, 18], "knowledg": [2, 8], "knowledge_graph": [2, 9], "kra": 9, "kwarg": [17, 18], "l": 9, "last": [4, 6], "leav": 4, "left": [4, 15], "len": 18, "length": [4, 6, 18], "level": [9, 18], "lib": 9, "librari": 8, "licata": 9, "light": [10, 15], "limit": 18, "line": [3, 4, 11, 15], "linear": [10, 15], "linkag": [0, 5], "linkagesfilepath": 5, "list": [4, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19], "load": [3, 7, 9, 10, 11, 12, 13, 18], "load_from_csv": 7, "load_network": [1, 2, 3, 9, 10, 12, 18], "load_network_from_fil": [1, 3, 10, 11], "load_network_from_str": [1, 2, 3], "load_pbn_from_fil": [1, 3, 13, 15], "load_pbn_from_str": [1, 3, 18], "load_signor_network": [1, 6, 9, 11], "log": 11, "log_scal": [12, 13], "logarithm": 12, "logic": [2, 19], "logic_rul": 19, "loop": [11, 18], "lose": 10, "low": [9, 18], "m": [9, 17], "mae": 15, "main": [4, 15], "major": [6, 9], "make": [4, 18], "mammalian": 18, "mani": 12, "manipul": 8, "map": [3, 19], "mapk1": 9, "mapk1_activ": 9, "markov": 17, "match": [2, 3, 7, 18], "matlab": 18, "matplotlib": 19, "matrix": 4, "max_iter": [17, 18], "max_tri": [12, 13], "maximum": [7, 18], "maxit": [12, 13], "md": 18, "mean": [3, 4, 7, 12, 15], "measur": [4, 10, 15, 19], "measured_formula": [12, 13], "measured_nod": [7, 10, 12, 19], "measured_valu": [7, 12], "mediat": 9, "meet": 18, "meis1": 4, "merg": [6, 8], "merge_network": [1, 2, 9, 11], "merge_pbn_str": [1, 6], "merged_bn": [2, 9, 11], "merged_network": 9, "merged_pbn": [2, 9, 11], "messag": [12, 13], "method": [0, 2, 5, 7, 10, 11, 12, 15, 16, 17], "metric": 15, "minimum": 6, "miranda": 18, "mode": 11, "model": [2, 6, 7, 8, 10, 11, 15, 18], "model_compressor": 1, "model_pars": 1, "modelcompressor": [1, 10], "modifi": 0, "modul": [8, 10, 11, 12, 13, 15, 16], "mol": 9, "mont": [2, 17], "monte_carlo": [2, 12, 13, 15, 18], "monte_carlo_param": [12, 13], "more": [8, 18], "most": 18, "mse": [12, 13, 15, 16], "multipl": [2, 9, 11, 18, 19], "multisit": 18, "must": [2, 3, 4, 7, 12], "mutat": [3, 4, 12, 13], "mutated_connectivity_matrix": 4, "mutation_dict": 3, "mutation_profil": 4, "myc": 9, "myc_inhibit": 9, "n": [6, 18], "n1": [7, 12, 18], "n2": [7, 12, 18], "n3": [7, 12, 18], "n_particl": [12, 13], "n_run": [2, 9, 12, 13, 17, 18], "n_step": [2, 9, 12, 13, 17, 18], "name": [2, 3, 4, 7, 12, 18, 19], "natur": [7, 18], "navig": 2, "ndarrai": [13, 16, 17], "need": [4, 18], "network": [0, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19], "network1": [2, 11], "network2": [2, 11], "network_graph": 19, "network_str": [2, 3, 18], "network_traj": 3, "network_typ": 3, "networkx": 2, "neurodevelopment": 9, "neurophysiologi": 18, "never": [0, 18], "new": [11, 13, 19], "new_edg": 19, "new_network": 11, "new_nod": 19, "newlin": 11, "nfev": [12, 13], "nfkb": [7, 12], "nit": [12, 13], "no_mut": 4, "node": [0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 16, 17, 18, 19], "node_dict": [7, 17], "nodea": 12, "nodeb": 12, "nodec": 12, "nodedict": [0, 2, 5, 9, 12], "nodes_to_extend": [9, 11], "nodes_to_optim": [11, 12, 13, 16], "nodes_to_remov": 10, "nodex": 12, "nois": [0, 2, 18], "non": [0, 5, 10], "non_control": 10, "non_observ": 10, "none": [0, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 17, 19], "normal": [0, 7, 12], "note": [7, 18], "notebook": [2, 19], "now": 16, "np": [4, 12, 17, 18], "npm1": 4, "number": [0, 12, 13, 15, 18], "numberoffunct": 0, "numberofnod": [0, 5], "numpi": [2, 4, 9, 18], "object": [3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 19], "objective_funct": 16, "observ": 10, "obtain": 2, "occur": 4, "offcampu": 9, "older": 6, "olfactori": 18, "omit": 3, "oncogen": 4, "one": [0, 3, 4, 5, 10, 11, 17, 18], "onli": [0, 3, 4, 5, 6, 7, 11, 16, 18], "only_protein": [6, 9], "open": 2, "oper": [2, 7, 12], "optim": [0, 2, 7, 8, 10, 16, 18], "optimis": [12, 13, 18], "optimization_histori": [12, 13, 15], "optimizationerror": [1, 13], "optimizationresult": [1, 13], "optimized_pbn": [12, 13], "optimizer_readm": 18, "optimizer_result": 15, "optimizeresult": [12, 13], "option": [4, 7, 9, 12, 13, 18], "optpbn": [12, 13, 17, 18], "orang": [10, 19], "order": 2, "org": 9, "orig_bn": 9, "orig_gen": 9, "origin": [0, 6, 9, 10, 11, 17, 18, 19], "original_bn": 11, "original_network": [10, 11, 19], "original_str": 6, "other": [0, 5, 15], "otherwis": 14, "out": [4, 7, 12], "output": [1, 4, 9, 10, 11, 19], "output1": 10, "output2": 10, "output_csv": 7, "output_dir": [12, 15], "output_html": [2, 9, 10, 19], "output_nod": [17, 18], "output_typ": 11, "outputfilepath": [0, 5], "outsid": 7, "over": [0, 4, 12, 13, 15], "overrid": [9, 12], "overview": 8, "own": 3, "p": [0, 2, 5, 7, 12, 13, 15, 18], "p1": 11, "p2": 11, "p_mir": [17, 18], "p_nois": [17, 18], "packag": [2, 11], "pad": 4, "page": 8, "pancreat": 2, "pancreatic_cancer_simul": 2, "panda": [2, 4, 9], "panel": 15, "parallel": 12, "paramet": [0, 2, 7, 9, 11, 12, 13, 16, 18], "parameter_optim": [1, 15], "parameteroptim": [1, 12, 13, 15], "paranthes": 4, "parenthes": [7, 11, 12], "parga": 18, "pars": 11, "parse_equ": [1, 11], "parse_express": [1, 11], "part": 3, "partial": [0, 7, 12, 18], "particl": [12, 13], "particular": [0, 5], "path": [3, 10, 14, 19], "pathwai": 9, "patient": 4, "pattern": 18, "pbn": [1, 3, 6, 7, 8, 13, 16, 17, 18, 19], "pbn_evalu": 15, "pbn_network": 2, "pbn_simul": [2, 12], "pbn_string": [2, 11], "pbnstationary_t": 17, "per": [4, 7, 11, 12, 15, 17, 18, 19], "perfect": 15, "perform": 15, "period": [12, 15, 18], "perman": [0, 5], "perturb": [0, 3, 4, 7, 10, 12, 19], "perturbed_dict": 3, "perturbed_gen": 3, "perturbed_nod": [10, 19], "peturb": 4, "peturbed_gen": 4, "pheno_df": 14, "phenotyp": [8, 14], "phenotype_scor": [1, 9], "pi3k": [7, 12], "pik3ca": 9, "pip": 2, "place": 12, "pleas": 8, "plo": [12, 13, 18], "plot": [1, 13, 18], "plot_optimization_histori": [12, 13], "plot_prediction_vs_experiment": 15, "plot_residu": [12, 15], "plural": [6, 9], "png": [12, 13, 15], "point": [17, 18], "polish": 12, "pop": 12, "popsiz": [12, 13], "population_energi": 12, "possibl": 4, "predict": [7, 12], "prediction_vs_experiment": [12, 15], "prevent": 4, "print": [2, 4, 9, 10, 11, 15, 18], "prob": [2, 6, 9, 11], "probabilist": [0, 3, 7, 8, 11, 12, 13, 17, 18], "probabilisticbn": [0, 1, 3, 12, 19], "probabl": [0, 2, 3, 6, 7, 9, 11, 12, 18, 19], "process": 12, "profil": 3, "progress": 15, "prolifer": [4, 9, 14], "properti": [17, 18], "protein": [6, 9], "provid": [2, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18], "proxpath": [1, 9, 14], "pso": 12, "pso_param": [12, 13], "psychiatri": 9, "purpos": 18, "py": 11, "pyswarm": 2, "python": [4, 8, 12], "pyvi": 19, "qualiti": [12, 15], "quick": 8, "r": [15, 17, 18], "random": [0, 4, 5, 12, 17, 18], "randomli": [0, 5], "rang": [4, 7, 12, 18], "re": 4, "read": [4, 19], "read_logic_rul": [1, 19], "readabl": [11, 13], "real": 2, "rebuild": [0, 5], "recombin": [12, 13], "recommend": [9, 18], "red": [10, 15, 19], "reduc": 7, "redund": 11, "ref": 17, "refer": [2, 10, 17], "regardless": 4, "regress": 15, "regul": 9, "regulatori": 18, "rel": [12, 18], "relai": 10, "relat": [0, 9], "relationship": [9, 15], "reliabl": 18, "remov": [4, 10, 11, 19], "remove_nod": 10, "remove_non_control": 10, "remove_non_observ": 10, "removed_edg": 19, "removed_nod": 19, "renam": [3, 4], "rename_nod": [1, 3], "repeat": [4, 18], "replac": 4, "report": 13, "repositori": 8, "repres": [2, 3, 4], "reproduc": 18, "requir": [0, 2, 7, 12, 18], "reset": [17, 18], "reset_network_condit": [17, 18], "residu": 12, "resourc": 3, "respect": [4, 11], "rest": 11, "restart": 17, "restrict": 9, "result": [1, 4, 9, 10, 18], "result_evalu": 1, "resultevalu": [1, 15], "retain": 4, "retriev": 4, "return": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19], "rewrit": 4, "right": [4, 15], "rmse": 15, "rnf43": 9, "round_to": 7, "row": [4, 7, 12], "rule": [2, 9, 11, 19], "rule_dict": 11, "rule_str": 11, "run": [2, 12, 13, 15, 17, 18], "runner": 14, "s41380": 9, "saccoperfettolab": 9, "same": [2, 4, 9, 11, 12], "save": [12, 15], "save_path": [12, 13, 15], "scale": [7, 12], "scatter": 15, "scheme": 18, "scipi": [2, 12], "score": [6, 8, 14], "score_cutoff": [6, 9], "scores_dict": 3, "search": 8, "second": 18, "see": [1, 2, 9, 12], "seed": [12, 13, 17, 18], "select": [0, 2, 5, 9, 10, 18], "self": [11, 18], "separ": [3, 7, 11, 12], "seper": 4, "seri": [9, 10], "set": [0, 2, 3, 4, 5, 7, 10, 12, 13, 17, 19], "set_experimental_condit": [17, 18], "setinitialvalu": [0, 5], "sever": [12, 15], "shade": 15, "shmulevich": 18, "should": [3, 7, 12], "show": [9, 10, 15], "show_confidence_interv": 15, "show_experiment_id": 15, "show_funct": 3, "show_plot": 13, "show_stagn": [12, 13], "shown": [10, 19], "side": 4, "sign": [3, 4], "significant_paths_to_phenotyp": 14, "signor": [6, 9], "signor_2025_08_14": 6, "signor_format": 6, "similar": 18, "simpli": 7, "simplifi": [4, 10, 11], "simplify_express": [1, 11], "simul": [0, 5, 7, 8, 15, 16, 18], "simulate_optimized_model": 15, "simulation_evalu": [1, 15], "simulation_result": [9, 14], "simulationevalu": [1, 16], "simultan": 2, "singl": [2, 7, 11, 12, 19], "smad4": 9, "smad4_inhibit": 9, "smaller": 18, "so": 18, "sobol": [12, 13], "sometim": 3, "sort": 13, "sourc": [0, 3, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19], "space": [3, 4], "speci": 10, "specif": [0, 2, 4, 5, 9, 18], "specifi": [2, 4, 7, 9, 10, 13, 17, 18], "split": 4, "squar": 15, "src": [9, 18], "src_activ": 9, "src_inhibit": 9, "ss1": 18, "ss2": 18, "ss3": 18, "sse": 16, "stabl": 2, "stagnat": [12, 15], "stai": 18, "standard": 15, "start": 8, "startindex": 5, "state": [0, 4, 7, 8, 9, 12, 13, 17], "state_vec": 17, "state_vec1": 17, "state_vec2": 17, "statetowrit": [0, 5], "static": 7, "stationari": 18, "statist": [15, 18], "statu": [12, 13], "std": 12, "steadi": [8, 9, 12, 13, 17], "steady_st": [1, 2, 9, 12, 13, 15, 18], "steadystatecalcul": [1, 2, 8, 9, 17], "steiner": [6, 9], "step": [0, 1, 2, 4, 5, 12, 18], "stimul": [2, 7, 12, 18], "stimuli": [7, 12, 17, 18], "stimuli_efficaci": [7, 12, 17, 18], "stochast": 12, "store": [4, 19], "str": [7, 10, 11, 13, 15, 17, 18, 19], "strategi": [9, 11, 12, 13], "string": [2, 3, 4, 6, 7, 11, 13, 19], "structur": [7, 10], "subgraph": [6, 9], "subtract": 4, "success": [12, 13], "success_threshold": [12, 13], "successfulli": [12, 15], "suitabl": 11, "sum": 2, "summari": [7, 10, 15], "superior": 4, "suppli": 12, "support": [2, 7, 8, 9, 12, 17], "swarm": [12, 13], "symbol": [4, 6], "synchron": [2, 17], "syntax": 2, "system": 8, "t": 4, "tabl": 4, "take": [4, 18], "target": [7, 11, 12], "target_nod": 11, "termin": [12, 13], "test": 13, "test_experi": 13, "test_steady_st": 13, "text": [2, 15], "tgfa": [7, 12], "thei": [4, 11], "them": [4, 8], "theoret": [7, 12], "thi": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 18], "those": 4, "threshold": [6, 12, 13], "tie": [6, 9], "time": [0, 5, 12, 13, 18], "titl": 3, "tnfa": [7, 12], "tograph": 5, "tol": [12, 13], "toler": 12, "tool": [10, 15, 16], "toolbox": [12, 13, 18], "total": 4, "tp53": [4, 9], "trairatphisan": [12, 13, 17, 18], "trajectori": [2, 18], "transit": 18, "treat": 18, "tri": [6, 18], "true": [2, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19], "truth": 4, "truth_tabl": 4, "try": [12, 18], "tsg": 4, "tsmc": [2, 17], "tsv": 6, "tupl": [4, 6, 15, 16, 17, 19], "two": [2, 6, 11, 12, 17], "txt": [2, 4, 9, 10, 11, 13, 14, 15, 18], "type": 2, "ultim": 10, "unari": 12, "uncertainti": 2, "unchang": [0, 5], "under": 4, "underli": 9, "understand": 9, "undo": [0, 2, 5], "undoknockout": [0, 2, 5], "unifi": [2, 3], "union": 9, "uniprot": 6, "uniqu": [4, 18], "unsuccess": 12, "until": 18, "up": [4, 12], "updat": [0, 4, 5, 10, 12], "update_cumulative_prob": 0, "update_nois": [0, 2, 5], "update_on": [0, 5], "updateuntilattractorisreach": 5, "upstream": 4, "upstream_gen": 3, "us": [0, 2, 6, 7, 9, 10, 11, 12, 13, 14, 18, 19], "usag": [1, 18], "use_formula": 7, "user": 4, "v": 12, "valid": 7, "validate_experi": 7, "valu": [0, 2, 3, 4, 5, 12, 13, 15, 18], "variabl": [4, 7, 12, 19], "vector": 12, "verbos": [10, 12, 13, 17, 18], "version": 6, "vi": 1, "via": [12, 17], "view": 2, "vis_compress": [1, 10, 19], "vis_extens": [1, 19], "vis_network": [1, 2, 9, 19], "visual": [8, 15, 19], "visualize_compress": 10, "vitriolo": 9, "vote": 9, "vundavilli2020_standard": 9, "w": [12, 13], "wai": [2, 4, 12], "want": 4, "warn": 7, "washington": 9, "we": 12, "welcom": 2, "well": 18, "were": [10, 19], "whatev": 4, "when": [0, 2, 4, 7, 12, 15, 18], "where": [0, 4, 5, 9, 10, 11], "whether": [3, 4, 6, 18], "which": 10, "while": [0, 5], "win": [2, 9, 11], "within": [4, 11], "without": [9, 10], "work": [14, 18], "worker": [12, 13], "workflow": [2, 8], "workflow_exampl": 2, "world": 2, "write": 11, "writenetworkhistori": [0, 5], "x": [12, 13, 15], "x0": [4, 18], "x1": 3, "x2": 3, "x3": 3, "y": 15, "you": [2, 18], "your": [12, 13]}, "titles": ["BNMPy.PBN", "API Reference", "Basic Simulation", "BNMPy.BMatrix", "BMatrix", "BNMPy.booleanNetwork", "BNMPy.build_bn_from_kg", "BNMPy.experiment_data", "Welcome to BNMPy\u2019s documentation!", "Knowledge Graph Augmentation", "BNMPy.model_compressor", "BNMPy.model_parser", "BNMPy Optimizer", "BNMPy.parameter_optimizer", "BNMPy.phenotype_score", "BNMPy.result_evaluation", "BNMPy.simulation_evaluator", "BNMPy.steady_state", "Steady State Calculation Guide", "BNMPy.vis"], "titleterms": {"": 8, "1": [15, 18], "2": [15, 18], "3": [15, 18], "The": 4, "all": 4, "also": [15, 18], "analysi": 2, "api": [1, 8], "applic": 2, "ar": 4, "augment": 9, "base": [7, 12], "basic": [2, 10, 12, 13, 15], "bmatrix": [3, 4], "bn": 11, "bnmpy": [0, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "boolean": [2, 9], "booleannetwork": [4, 5], "build": 9, "build_bn_from_kg": 6, "cal_": 4, "cal_funct": 4, "cal_rang": 4, "cal_upstream_gen": 4, "calcul": [4, 18], "carlo": 18, "chain": 18, "code": 4, "column": 7, "complet": 9, "compress": 10, "condit": 18, "configur": [12, 13], "connectivity_matrix": 4, "convert": 11, "core": 1, "data": [7, 12], "depend": 2, "deriv": 9, "descript": [4, 7], "determinist": [2, 9, 18], "discret": [12, 13], "document": 8, "earli": 12, "efficaci": 7, "equat": 4, "evalu": [12, 15], "exampl": [2, 9, 11, 15, 18], "exist": 9, "experiment": [12, 15, 18], "experiment_data": 7, "extend": [9, 11], "featur": 10, "file": [2, 4, 15], "filenam": 4, "final": 4, "format": [2, 7, 12], "formula": [7, 12], "function": 4, "gene_dict": 4, "gener": 15, "get_cal_funct": 4, "get_cal_upstream_gen": 4, "get_calculating_scor": 4, "get_connectivity_matrix": 4, "get_equ": 4, "get_gene_dict": 4, "get_knocking_gen": 4, "get_mutation_dict": 4, "get_truth_t": 4, "get_upstream_gen": 4, "graph": [1, 9], "guid": [8, 18], "histori": [12, 15], "i": 4, "indic": 8, "inform": 2, "initi": 2, "initial_st": 4, "input": 12, "instal": [2, 4], "integr": 1, "joiner": 9, "kg": 9, "knockdown": 2, "knockout": 2, "knowledg": [1, 9], "load": 2, "load_network_from_fil": 4, "manipul": 2, "markov": 18, "measur": [7, 12], "merg": [2, 9, 11], "method": [9, 13, 18], "mode": [12, 13], "model": 9, "model_compressor": 10, "model_pars": 11, "modul": 1, "mont": 18, "more": 2, "mutation_dict": 4, "network": [2, 4, 9, 11], "network_traj": 4, "none": 4, "optim": [1, 12, 13, 15], "output": 15, "overview": [9, 18], "packag": 4, "parameter_optim": 13, "pbn": [0, 2, 9, 11, 12, 15], "perturb": 18, "perturbed_dict": 4, "perturbed_gen": 4, "phenotyp": [4, 9, 12], "phenotype_scor": 14, "plot": [12, 15], "post": 4, "predict": 15, "probabilist": [2, 9], "profil": 4, "quick": [2, 18], "refer": [1, 8, 9, 12, 13, 18], "report": 15, "requir": 4, "residu": 15, "result": [12, 13, 15], "result_evalu": 15, "scheme": 9, "score": [4, 9, 12], "score_": 4, "scores_dict": 4, "see": [15, 18], "set": 18, "show_funct": 4, "simul": [2, 4, 9], "simulation_evalu": 16, "start": [2, 4, 18], "state": [2, 18], "steadi": [2, 18], "steady_st": 17, "steadystatecalcul": 18, "step": 10, "stochast": 2, "stop": 12, "structur": 15, "tabl": 8, "tsmc": 18, "two": 18, "updat": 2, "upstream_gen": 4, "us": 4, "usag": [10, 11, 12, 13, 15], "user": 8, "v": 15, "valu": 7, "vi": 19, "visual": [1, 2, 9, 10, 13], "welcom": 8, "which": 4, "workflow": 9}})